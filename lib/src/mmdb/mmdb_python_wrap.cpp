

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.17u-20021204-1155
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    inline SwigValueWrapper() : tt(0) { }
    inline ~SwigValueWrapper() { if (tt) delete tt; } 
    inline SwigValueWrapper& operator=(const T& t) { tt = new T(t); return *this; }
    inline operator T&() const { return *tt; }
    inline T *operator&() { return tt; }
};                                                    
#endif


#include "Python.h"

/***********************************************************************
 * common.swg
 *
 *     This file contains generic SWIG runtime support for pointer
 *     type checking as well as a few commonly used macros to control
 *     external linkage.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 *
 * Copyright (c) 1999-2000, The University of Chicago
 * 
 * This file may be freely redistributed without license or fee provided
 * this copyright message remains intact.
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__)
#       if defined(_MSC_VER)
#               if defined(STATIC_LINKED)
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) extern a
#               else
#                       define SWIGEXPORT(a) __declspec(dllexport) a
#                       define SWIGIMPORT(a) extern a
#               endif
#       else
#               if defined(__BORLANDC__)
#                       define SWIGEXPORT(a) a _export
#                       define SWIGIMPORT(a) a _export
#               else
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) a
#               endif
#       endif
#else
#       define SWIGEXPORT(a) a
#       define SWIGIMPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#define SWIGRUNTIME(a) static a
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;                 
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;	
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGIMPORT(void *)           SWIG_TypeCast(swig_type_info *, void *);
SWIGIMPORT(swig_type_info *) SWIG_TypeDynamicCast(swig_type_info *, void **);
SWIGIMPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGIMPORT(void)             SWIG_TypeClientData(swig_type_info *, void *);

#else

static swig_type_info *swig_type_list = 0;

/* Register a type mapping with the type-checking */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeRegister(swig_type_info *ti)
{
  swig_type_info *tc, *head, *ret, *next;
  /* Check to see if this type has already been registered */
  tc = swig_type_list;
  while (tc) {
    if (strcmp(tc->name, ti->name) == 0) {
      /* Already exists in the table.  Just add additional types to the list */
      if (tc->clientdata) ti->clientdata = tc->clientdata;	
      head = tc;
      next = tc->next;
      goto l1;
    }
    tc = tc->prev;
  }
  head = ti;
  next = 0;

  /* Place in list */
  ti->prev = swig_type_list;
  swig_type_list = ti;

  /* Build linked lists */
 l1:
  ret = head;
  tc = ti + 1;
  /* Patch up the rest of the links */
  while (tc->name) {
    head->next = tc;
    tc->prev = head;
    head = tc;
    tc++;
  }
  head->next = next;
  return ret;
}

/* Check the typename */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeCheck(char *c, swig_type_info *ty)
{
  swig_type_info *s;
  if (!ty) return 0;        /* Void pointer */
  s = ty->next;             /* First element always just a name */
  do {
    if (strcmp(s->name,c) == 0) {
      if (s == ty->next) return s;
      /* Move s to the top of the linked list */
      s->prev->next = s->next;
      if (s->next) {
	s->next->prev = s->prev;
      }
      /* Insert s as second element in the list */
      s->next = ty->next;
      if (ty->next) ty->next->prev = s;
      ty->next = s;
      return s;
    }
    s = s->next;
  } while (s && (s != ty->next));
  return 0;
}

/* Cast a pointer up an inheritance hierarchy */
SWIGRUNTIME(void *) 
SWIG_TypeCast(swig_type_info *ty, void *ptr) 
{
  if ((!ty) || (!ty->converter)) return ptr;
  return (*ty->converter)(ptr);
}

/* Dynamic pointer casting. Down an inheritance hierarchy */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) 
{
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
     ty = (*ty->dcast)(ptr);
     if (ty) lastty = ty;
  }
  return lastty;
}

/* Search for a swig_type_info structure */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeQuery(const char *name) {
  swig_type_info *ty = swig_type_list;
  while (ty) {
    if (ty->str && (strcmp(name,ty->str) == 0)) return ty;
    if (ty->name && (strcmp(name,ty->name) == 0)) return ty;
    ty = ty->prev;
  }
  return 0;
}

/* Set the clientdata field for a type */
SWIGRUNTIME(void)
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_type_info *tc, *equiv;
  if (ti->clientdata == clientdata) return;
  ti->clientdata = clientdata;
  equiv = ti->next;
  while (equiv) {
    if (!equiv->converter) {
      tc = swig_type_list;
      while (tc) {
	if ((strcmp(tc->name, equiv->name) == 0))
	  SWIG_TypeClientData(tc,clientdata);
	tc = tc->prev;
      }
    }
    equiv = equiv->next;
  }
}
#endif

#ifdef __cplusplus
}

#endif

/***********************************************************************
 * python.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Flags for pointer conversion */

#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2

/* Exception handling in wrappers */
#define SWIG_fail   goto fail

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

#ifdef SWIG_NOINCLUDE

SWIGEXPORT(PyObject *)        SWIG_newvarlink();
SWIGEXPORT(void)              SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
SWIGEXPORT(int)               SWIG_ConvertPtr(PyObject *, void **, swig_type_info *, int);
SWIGEXPORT(int)               SWIG_ConvertPacked(PyObject *, void *, int sz, swig_type_info *, int);
SWIGEXPORT(char *)            SWIG_PackData(char *c, void *, int);
SWIGEXPORT(char *)            SWIG_UnpackData(char *c, void *, int);
SWIGEXPORT(PyObject *)        SWIG_NewPointerObj(void *, swig_type_info *,int own);
SWIGEXPORT(PyObject *)        SWIG_NewPackedObj(void *, int sz, swig_type_info *);
SWIGEXPORT(void)              SWIG_InstallConstants(PyObject *d, swig_const_info constants[]);
#else

/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */

typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

static PyObject *
swig_varlink_repr(swig_varlinkobject *v) {
  v = v;
  return PyString_FromString("<Global variables>");
}

static int
swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
  swig_globalvar  *var;
  flags = flags;
  fprintf(fp,"Global variables { ");
  for (var = v->vars; var; var=var->next) {
    fprintf(fp,"%s", var->name);
    if (var->next) fprintf(fp,", ");
  }
  fprintf(fp," }\n");
  return 0;
}

static PyObject *
swig_varlink_getattr(swig_varlinkobject *v, char *n) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->get_attr)();
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return NULL;
}

static int
swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->set_attr)(p);
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return 1;
}

statichere PyTypeObject varlinktype = {
  PyObject_HEAD_INIT(0)              
  0,
  (char *)"swigvarlink",                      /* Type name    */
  sizeof(swig_varlinkobject),         /* Basic size   */
  0,                                  /* Itemsize     */
  0,                                  /* Deallocator  */ 
  (printfunc) swig_varlink_print,     /* Print        */
  (getattrfunc) swig_varlink_getattr, /* get attr     */
  (setattrfunc) swig_varlink_setattr, /* Set attr     */
  0,                                  /* tp_compare   */
  (reprfunc) swig_varlink_repr,       /* tp_repr      */    
  0,                                  /* tp_as_number */
  0,                                  /* tp_as_mapping*/
  0,                                  /* tp_hash      */
};

/* Create a variable linking object for use later */
SWIGRUNTIME(PyObject *)
SWIG_newvarlink(void) {
  swig_varlinkobject *result = 0;
  result = PyMem_NEW(swig_varlinkobject,1);
  varlinktype.ob_type = &PyType_Type;    /* Patch varlinktype into a PyType */
  result->ob_type = &varlinktype;
  result->vars = 0;
  result->ob_refcnt = 0;
  Py_XINCREF((PyObject *) result);
  return ((PyObject*) result);
}

SWIGRUNTIME(void)
SWIG_addvarlink(PyObject *p, char *name,
	   PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v;
  swig_globalvar *gv;
  v= (swig_varlinkobject *) p;
  gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  gv->name = (char *) malloc(strlen(name)+1);
  strcpy(gv->name,name);
  gv->get_attr = get_attr;
  gv->set_attr = set_attr;
  gv->next = v->vars;
  v->vars = gv;
}

/* Pack binary data into a string */
SWIGRUNTIME(char *)
SWIG_PackData(char *c, void *ptr, int sz) {
  static char hex[17] = "0123456789abcdef";
  int i;
  unsigned char *u = (unsigned char *) ptr;
  register unsigned char uu;
  for (i = 0; i < sz; i++,u++) {
    uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* Unpack binary data from a string */
SWIGRUNTIME(char *)
SWIG_UnpackData(char *c, void *ptr, int sz) {
  register unsigned char uu = 0;
  register int d;
  unsigned char *u = (unsigned char *) ptr;
  int i;
  for (i = 0; i < sz; i++, u++) {
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    *u = uu;
  }
  return c;
}

/* Convert a pointer value */
SWIGRUNTIME(int)
SWIG_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c;
  static PyObject *SWIG_this = 0;
  int    newref = 0;
  PyObject  *pyobj = 0;

  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }
#ifdef SWIG_COBJECT_TYPES
  if (!(PyCObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyCObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  }  
  *ptr = PyCObject_AsVoidPtr(obj);
  c = (char *) PyCObject_GetDesc(obj);
  if (newref) Py_DECREF(obj);
  goto cobject;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) {
      if (newref) { Py_DECREF(obj); }
      return 0;
    } else {
      if (newref) { Py_DECREF(obj); }
      goto type_error;
    }
  }
  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (newref) { Py_DECREF(obj); }
#endif

#ifdef SWIG_COBJECT_TYPES
cobject:
#endif

  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,(void*) *ptr);
  }

  if ((pyobj) && (flags & SWIG_POINTER_DISOWN)) {
      PyObject *zero = PyInt_FromLong(0);
      PyObject_SetAttrString(pyobj,(char*)"thisown",zero);
      Py_DECREF(zero);
  }
  return 0;

type_error:
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty) {
      char *temp = (char *) malloc(64+strlen(ty->name));
      sprintf(temp,"Type error. Expected %s", ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Convert a packed value value */
SWIGRUNTIME(int)
SWIG_ConvertPacked(PyObject *obj, void *ptr, int sz, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c;

  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:

  if (flags) {
    if (ty) {
      char *temp = (char *) malloc(64+strlen(ty->name));
      sprintf(temp,"Type error. Expected %s", ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Create a new pointer object */
SWIGRUNTIME(PyObject *)
SWIG_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PyCObject_FromVoidPtrAndDesc((void *) ptr, (char *) type->name, NULL);
#else
  {
    char result[1024];
    char *r = result;
    *(r++) = '_';
    r = SWIG_PackData(r,&ptr,sizeof(void *));
    strcpy(r,type->name);
    robj = PyString_FromString(result);
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (inst) {
      if (own) {
	PyObject *n = PyInt_FromLong(1);
	PyObject_SetAttrString(inst,(char*)"thisown",n);
	Py_DECREF(n);
      }
      robj = inst;
    }
  }
  return robj;
}

SWIGRUNTIME(PyObject *)
SWIG_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return PyString_FromString(result);
}

/* Install Constants */
SWIGRUNTIME(void)
SWIG_InstallConstants(PyObject *d, swig_const_info constants[]) {
  int i;
  PyObject *obj;
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_PY_INT:
      obj = PyInt_FromLong(constants[i].lvalue);
      break;
    case SWIG_PY_FLOAT:
      obj = PyFloat_FromDouble(constants[i].dvalue);
      break;
    case SWIG_PY_STRING:
      obj = PyString_FromString((char *) constants[i].pvalue);
      break;
    case SWIG_PY_POINTER:
      obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
      break;
    case SWIG_PY_BINARY:
      obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
      break;
    default:
      obj = 0;
      break;
    }
    if (obj) {
      PyDict_SetItemString(d,constants[i].name,obj);
      Py_DECREF(obj);
    }
  }
}

#endif

#ifdef __cplusplus
}
#endif








/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_void swig_types[0] 
#define  SWIGTYPE_p_CChain swig_types[1] 
#define  SWIGTYPE_p_CAlignment swig_types[2] 
#define  SWIGTYPE_PCProModel swig_types[3] 
#define  SWIGTYPE_p_CProModel swig_types[4] 
#define  SWIGTYPE_p_CContainerChain swig_types[5] 
#define  SWIGTYPE_p_PPCProModel swig_types[6] 
#define  SWIGTYPE_PCContainerChain swig_types[7] 
#define  SWIGTYPE_p_PPCContainerChain swig_types[8] 
#define  SWIGTYPE_p_CContString swig_types[9] 
#define  SWIGTYPE_PCContString swig_types[10] 
#define  SWIGTYPE_p_PPCContString swig_types[11] 
#define  SWIGTYPE_PBFGSMinFunc swig_types[12] 
#define  SWIGTYPE_p_CSBAngle swig_types[13] 
#define  SWIGTYPE_PCSBAngle swig_types[14] 
#define  SWIGTYPE_p_PPCSBAngle swig_types[15] 
#define  SWIGTYPE_p_PCMMDBTitle swig_types[16] 
#define  SWIGTYPE_p_PPCMMDBTitle swig_types[17] 
#define  SWIGTYPE_p_CSymOps swig_types[18] 
#define  SWIGTYPE_PCSymOps swig_types[19] 
#define  SWIGTYPE_p_PPCSymOps swig_types[20] 
#define  SWIGTYPE_p_doublea swig_types[21] 
#define  SWIGTYPE_p_CModel swig_types[22] 
#define  SWIGTYPE_p_CSheet swig_types[23] 
#define  SWIGTYPE_PCFile swig_types[24] 
#define  SWIGTYPE_PAtomName swig_types[25] 
#define  SWIGTYPE_p_PAtomName swig_types[26] 
#define  SWIGTYPE_p_CFile swig_types[27] 
#define  SWIGTYPE_p_CResidue swig_types[28] 
#define  SWIGTYPE_p_PPCResidue swig_types[29] 
#define  SWIGTYPE_PCResidue swig_types[30] 
#define  SWIGTYPE_PCSheets swig_types[31] 
#define  SWIGTYPE_p_CSheets swig_types[32] 
#define  SWIGTYPE_p_PPCSheets swig_types[33] 
#define  SWIGTYPE_PCVertex swig_types[34] 
#define  SWIGTYPE_p_CVertex swig_types[35] 
#define  SWIGTYPE_p_CContainerClass swig_types[36] 
#define  SWIGTYPE_PCContainerClass swig_types[37] 
#define  SWIGTYPE_p_PPCVertex swig_types[38] 
#define  SWIGTYPE_p_PPCContainerClass swig_types[39] 
#define  SWIGTYPE_PCTurn swig_types[40] 
#define  SWIGTYPE_p_CTurn swig_types[41] 
#define  SWIGTYPE_p_doublep swig_types[42] 
#define  SWIGTYPE_PCMMCIFFile swig_types[43] 
#define  SWIGTYPE_p_CMMCIFFile swig_types[44] 
#define  SWIGTYPE_PCMMDBFile swig_types[45] 
#define  SWIGTYPE_p_CMMDBFile swig_types[46] 
#define  SWIGTYPE_p_pstr swig_types[47] 
#define  SWIGTYPE_PCModRes swig_types[48] 
#define  SWIGTYPE_p_CModRes swig_types[49] 
#define  SWIGTYPE_p_PPCModRes swig_types[50] 
#define  SWIGTYPE_p_PSContact swig_types[51] 
#define  SWIGTYPE_p_PPCMContact swig_types[52] 
#define  SWIGTYPE_p_CMContact swig_types[53] 
#define  SWIGTYPE_p_SContact swig_types[54] 
#define  SWIGTYPE_p_CQuickSort swig_types[55] 
#define  SWIGTYPE_p_PElement swig_types[56] 
#define  SWIGTYPE_p_short swig_types[57] 
#define  SWIGTYPE_PCBrick swig_types[58] 
#define  SWIGTYPE_p_PPCBrick swig_types[59] 
#define  SWIGTYPE_PCSeqRes swig_types[60] 
#define  SWIGTYPE_p_CSeqRes swig_types[61] 
#define  SWIGTYPE_p_PPCSeqRes swig_types[62] 
#define  SWIGTYPE_p_CSeqAdv swig_types[63] 
#define  SWIGTYPE_PCSeqAdv swig_types[64] 
#define  SWIGTYPE_p_PPCSeqAdv swig_types[65] 
#define  SWIGTYPE_p_rmatrix3 swig_types[66] 
#define  SWIGTYPE_p_imatrix3 swig_types[67] 
#define  SWIGTYPE_p_wmatrix3 swig_types[68] 
#define  SWIGTYPE_p_bmatrix3 swig_types[69] 
#define  SWIGTYPE_p_lmatrix3 swig_types[70] 
#define  SWIGTYPE_p_lwmatrix3 swig_types[71] 
#define  SWIGTYPE_p_psmatrix3 swig_types[72] 
#define  SWIGTYPE_PCDBReference swig_types[73] 
#define  SWIGTYPE_p_CDBReference swig_types[74] 
#define  SWIGTYPE_p_CSBBond swig_types[75] 
#define  SWIGTYPE_PCSBBond swig_types[76] 
#define  SWIGTYPE_p_PPCSBBond swig_types[77] 
#define  SWIGTYPE_p_PPCDBReference swig_types[78] 
#define  SWIGTYPE_p_PPCMask swig_types[79] 
#define  SWIGTYPE_p_PCMMCIFStruct swig_types[80] 
#define  SWIGTYPE_p_CMMCIFStruct swig_types[81] 
#define  SWIGTYPE_PCMMCIFStruct swig_types[82] 
#define  SWIGTYPE_p_SAtomStat swig_types[83] 
#define  SWIGTYPE_p_CUDData swig_types[84] 
#define  SWIGTYPE_p_byte swig_types[85] 
#define  SWIGTYPE_PCSymOp swig_types[86] 
#define  SWIGTYPE_p_PPCSymOp swig_types[87] 
#define  SWIGTYPE_PCSSContainer swig_types[88] 
#define  SWIGTYPE_p_CSSContainer swig_types[89] 
#define  SWIGTYPE_PCChainContainer swig_types[90] 
#define  SWIGTYPE_p_CChainContainer swig_types[91] 
#define  SWIGTYPE_p_CClassContainer swig_types[92] 
#define  SWIGTYPE_PCClassContainer swig_types[93] 
#define  SWIGTYPE_p_PPCChainContainer swig_types[94] 
#define  SWIGTYPE_p_PCCrystContainer swig_types[95] 
#define  SWIGTYPE_p_PPCCrystContainer swig_types[96] 
#define  SWIGTYPE_p_PPCSSContainer swig_types[97] 
#define  SWIGTYPE_p_PCTitleContainer swig_types[98] 
#define  SWIGTYPE_p_PPCTitleContainer swig_types[99] 
#define  SWIGTYPE_p_PPCClassContainer swig_types[100] 
#define  SWIGTYPE_p_PPCMMCIFData swig_types[101] 
#define  SWIGTYPE_p_CMMCIFData swig_types[102] 
#define  SWIGTYPE_PCMMCIFData swig_types[103] 
#define  SWIGTYPE_PCGenSym swig_types[104] 
#define  SWIGTYPE_p_CGenSym swig_types[105] 
#define  SWIGTYPE_p_CBrick swig_types[106] 
#define  SWIGTYPE_p_PPCGenSym swig_types[107] 
#define  SWIGTYPE_p_PCSupersede swig_types[108] 
#define  SWIGTYPE_p_PPCSupersede swig_types[109] 
#define  SWIGTYPE_p_PCTitleLine swig_types[110] 
#define  SWIGTYPE_p_PPCTitleLine swig_types[111] 
#define  SWIGTYPE_p_PCJournal swig_types[112] 
#define  SWIGTYPE_p_PPCJournal swig_types[113] 
#define  SWIGTYPE_PCGraph swig_types[114] 
#define  SWIGTYPE_p_PCGraph swig_types[115] 
#define  SWIGTYPE_psvector swig_types[116] 
#define  SWIGTYPE_p_psvector swig_types[117] 
#define  SWIGTYPE_p_lwvector swig_types[118] 
#define  SWIGTYPE_p_wvector swig_types[119] 
#define  SWIGTYPE_p_ivector swig_types[120] 
#define  SWIGTYPE_ivector swig_types[121] 
#define  SWIGTYPE_p_PCRemark swig_types[122] 
#define  SWIGTYPE_p_PPCRemark swig_types[123] 
#define  SWIGTYPE_p_CSBase swig_types[124] 
#define  SWIGTYPE_p_inta swig_types[125] 
#define  SWIGTYPE_PCMask swig_types[126] 
#define  SWIGTYPE_p_CMask swig_types[127] 
#define  SWIGTYPE_p_PCCaveat swig_types[128] 
#define  SWIGTYPE_p_PPCCaveat swig_types[129] 
#define  SWIGTYPE_PCHetCompounds swig_types[130] 
#define  SWIGTYPE_p_CHetCompounds swig_types[131] 
#define  SWIGTYPE_PCMBrick swig_types[132] 
#define  SWIGTYPE_p_CMBrick swig_types[133] 
#define  SWIGTYPE_p_PPCHetCompounds swig_types[134] 
#define  SWIGTYPE_p_PPCEdge swig_types[135] 
#define  SWIGTYPE_p_PCMMDBCryst swig_types[136] 
#define  SWIGTYPE_p_PPCMMDBCryst swig_types[137] 
#define  SWIGTYPE_p_CSymOp swig_types[138] 
#define  SWIGTYPE_p_PPCAtom swig_types[139] 
#define  SWIGTYPE_p_int swig_types[140] 
#define  SWIGTYPE_p_CStream swig_types[141] 
#define  SWIGTYPE_p_PCStream swig_types[142] 
#define  SWIGTYPE_p_CSBStructure swig_types[143] 
#define  SWIGTYPE_PCSBStructure swig_types[144] 
#define  SWIGTYPE_p_intp swig_types[145] 
#define  SWIGTYPE_PCAtomPath swig_types[146] 
#define  SWIGTYPE_p_CAtomPath swig_types[147] 
#define  SWIGTYPE_p_PPCAtomPath swig_types[148] 
#define  SWIGTYPE_p_CGraph swig_types[149] 
#define  SWIGTYPE_p_PCKeyWords swig_types[150] 
#define  SWIGTYPE_p_PPCKeyWords swig_types[151] 
#define  SWIGTYPE_p_lvector swig_types[152] 
#define  SWIGTYPE_p_bvector swig_types[153] 
#define  SWIGTYPE_p_rvector swig_types[154] 
#define  SWIGTYPE_rvector swig_types[155] 
#define  SWIGTYPE_lvector swig_types[156] 
#define  SWIGTYPE_bvector swig_types[157] 
#define  SWIGTYPE_p_PCExpData swig_types[158] 
#define  SWIGTYPE_p_PPCExpData swig_types[159] 
#define  SWIGTYPE_imatrix swig_types[160] 
#define  SWIGTYPE_p_wmatrix swig_types[161] 
#define  SWIGTYPE_p_imatrix swig_types[162] 
#define  SWIGTYPE_p_lwmatrix swig_types[163] 
#define  SWIGTYPE_p_psmatrix swig_types[164] 
#define  SWIGTYPE_p_PSAtomBondI swig_types[165] 
#define  SWIGTYPE_p_SAtomBondI swig_types[166] 
#define  SWIGTYPE_p_double swig_types[167] 
#define  SWIGTYPE_PCEdge swig_types[168] 
#define  SWIGTYPE_PCAtom swig_types[169] 
#define  SWIGTYPE_p_CEdge swig_types[170] 
#define  SWIGTYPE_p_PCAtom swig_types[171] 
#define  SWIGTYPE_p_vect3 swig_types[172] 
#define  SWIGTYPE_p_long swig_types[173] 
#define  SWIGTYPE_p_vect4 swig_types[174] 
#define  SWIGTYPE_p_CAtom swig_types[175] 
#define  SWIGTYPE_p_PCMMCIFLoop swig_types[176] 
#define  SWIGTYPE_p_CMMCIFLoop swig_types[177] 
#define  SWIGTYPE_PCMMCIFLoop swig_types[178] 
#define  SWIGTYPE_p_CHetRec swig_types[179] 
#define  SWIGTYPE_PCHetRec swig_types[180] 
#define  SWIGTYPE_p_PPCHetRec swig_types[181] 
#define  SWIGTYPE_p_CBFGSMin swig_types[182] 
#define  SWIGTYPE_PCBFGSMin swig_types[183] 
#define  SWIGTYPE_p_PPCBFGSMin swig_types[184] 
#define  SWIGTYPE_p_CUDRegister swig_types[185] 
#define  SWIGTYPE_p_realtype swig_types[186] 
#define  SWIGTYPE_p_PCSource swig_types[187] 
#define  SWIGTYPE_p_PPCSource swig_types[188] 
#define  SWIGTYPE_p_CMatch swig_types[189] 
#define  SWIGTYPE_p_CAlignParams swig_types[190] 
#define  SWIGTYPE_p_mat33 swig_types[191] 
#define  SWIGTYPE_p_rmatrix swig_types[192] 
#define  SWIGTYPE_p_bmatrix swig_types[193] 
#define  SWIGTYPE_p_lmatrix swig_types[194] 
#define  SWIGTYPE_rmatrix swig_types[195] 
#define  SWIGTYPE_p_CSBIndex swig_types[196] 
#define  SWIGTYPE_p_PCNCSMatrix swig_types[197] 
#define  SWIGTYPE_p_PPCNCSMatrix swig_types[198] 
#define  SWIGTYPE_p_word swig_types[199] 
#define  SWIGTYPE_p_Boolean swig_types[200] 
#define  SWIGTYPE_p_CGraphMatch swig_types[201] 
#define  SWIGTYPE_p_PCAuthor swig_types[202] 
#define  SWIGTYPE_p_PPCAuthor swig_types[203] 
#define  SWIGTYPE_p_PAltLoc swig_types[204] 
#define  SWIGTYPE_PCHelix swig_types[205] 
#define  SWIGTYPE_p_PPCHelix swig_types[206] 
#define  SWIGTYPE_p_CSBTorsion swig_types[207] 
#define  SWIGTYPE_PCSBTorsion swig_types[208] 
#define  SWIGTYPE_p_PPCSBTorsion swig_types[209] 
#define  SWIGTYPE_p_PCChain swig_types[210] 
#define  SWIGTYPE_p_PPCChain swig_types[211] 
#define  SWIGTYPE_PCChain swig_types[212] 
#define  SWIGTYPE_p_PCRevData swig_types[213] 
#define  SWIGTYPE_p_PPCRevData swig_types[214] 
#define  SWIGTYPE_p_PSAtomBond swig_types[215] 
#define  SWIGTYPE_p_SAtomBond swig_types[216] 
#define  SWIGTYPE_PResName swig_types[217] 
#define  SWIGTYPE_p_PCObsLine swig_types[218] 
#define  SWIGTYPE_p_PPCObsLine swig_types[219] 
#define  SWIGTYPE_p_PPCStrand swig_types[220] 
#define  SWIGTYPE_PCStrand swig_types[221] 
#define  SWIGTYPE_p_CStrand swig_types[222] 
#define  SWIGTYPE_p_PPCHetCompound swig_types[223] 
#define  SWIGTYPE_PCHetCompound swig_types[224] 
#define  SWIGTYPE_p_CHetCompound swig_types[225] 
#define  SWIGTYPE_p_PCCompound swig_types[226] 
#define  SWIGTYPE_p_PPCCompound swig_types[227] 
#define  SWIGTYPE_p_FILE swig_types[228] 
#define  SWIGTYPE_p_PPCModel swig_types[229] 
#define  SWIGTYPE_PCModel swig_types[230] 
#define  SWIGTYPE_p_PPCSheet swig_types[231] 
#define  SWIGTYPE_PCSheet swig_types[232] 
#define  SWIGTYPE_p_CSBAtom swig_types[233] 
#define  SWIGTYPE_PCSBAtom swig_types[234] 
#define  SWIGTYPE_p_PPCSBAtom swig_types[235] 
#define  SWIGTYPE_p_PPCFile swig_types[236] 
#define  SWIGTYPE_PCMMDBManager swig_types[237] 
#define  SWIGTYPE_p_CMMDBManager swig_types[238] 
#define  SWIGTYPE_p_CMMDBCoorManager swig_types[239] 
#define  SWIGTYPE_p_CMMDBSelManager swig_types[240] 
#define  SWIGTYPE_p_CMMDBBondManager swig_types[241] 
#define  SWIGTYPE_p_char swig_types[242] 
#define  SWIGTYPE_PCMMDBCoorManager swig_types[243] 
#define  SWIGTYPE_p_PPCMMDBCoorManager swig_types[244] 
#define  SWIGTYPE_PCMMDBSelManager swig_types[245] 
#define  SWIGTYPE_p_PPCMMDBSelManager swig_types[246] 
#define  SWIGTYPE_p_CAlignment1 swig_types[247] 
#define  SWIGTYPE_PCMMCIFCategory swig_types[248] 
#define  SWIGTYPE_p_CMMCIFCategory swig_types[249] 
#define  SWIGTYPE_p_mat44 swig_types[250] 
#define  SWIGTYPE_p_PCTVect swig_types[251] 
#define  SWIGTYPE_p_PPCTVect swig_types[252] 
#define  SWIGTYPE_PBFGSPrintFunc swig_types[253] 
#define  SWIGTYPE_p_CHelix swig_types[254] 
#define  SWIGTYPE_p_PPCTurn swig_types[255] 
static swig_type_info *swig_types[257];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _mmdb.so
  ------------------------------------------------*/
#define SWIG_init    init_mmdb

#define SWIG_name    "_mmdb"

typedef int intp;

intp *new_intp(){
  return new int();
}
void delete_intp(intp *self){
  if (self) delete self;
}
void intp_assign(intp *self,int value){
  *self = value;
}
int intp_value(intp *self){
  return *self;
}
int *intp_cast(intp *self){
  return self;
}
intp *intp_frompointer(int *t){
  return (intp *) t;
}

typedef double doublep;

doublep *new_doublep(){
  return new double();
}
void delete_doublep(doublep *self){
  if (self) delete self;
}
void doublep_assign(doublep *self,double value){
  *self = value;
}
double doublep_value(doublep *self){
  return *self;
}
double *doublep_cast(doublep *self){
  return self;
}
doublep *doublep_frompointer(double *t){
  return (doublep *) t;
}

typedef int inta;

inta *new_inta(int nelements){
  return new int[nelements];
}
void delete_inta(inta *self){
  delete [] self;
}
int inta_getitem(inta *self,int index){
  return self[index];
}
void inta_setitem(inta *self,int index,int value){
  self[index] = value;
}
int *inta_cast(inta *self){
  return self;
}
inta *inta_frompointer(int *t){
  return (inta *) t;
}

typedef double doublea;

doublea *new_doublea(int nelements){
  return new double[nelements];
}
void delete_doublea(doublea *self){
  delete [] self;
}
double doublea_getitem(doublea *self,int index){
  return self[index];
}
void doublea_setitem(doublea *self,int index,double value){
  self[index] = value;
}
double *doublea_cast(doublea *self){
  return self;
}
doublea *doublea_frompointer(double *t){
  return (doublea *) t;
}

#include "mmdb_manager.h"
#include "bfgs_min.h"
#include "mmdb_graph.h"
#include "mmdb_align.h"
#include "mmdb_sbase.h"
#include "mmdb_title.h"

extern Boolean InitMatType();
extern int mround(realtype);
extern int Abs(int);
extern void ISwap(int &,int &);
extern void WSwap(word &,word &);
extern void BSwap(byte &,byte &);
extern void LSwap(long &,long &);
extern void RSwap(realtype &,realtype &);
extern realtype RMax(realtype const,realtype const);
extern long LMax(long const,long const);
extern word WMax(word const,word const);
extern int IMax(int const,int const);
extern realtype RMin(realtype const,realtype const);
extern long LMin(long const,long const);
extern word WMin(word const,word const);
extern int IMin(int const,int const);
extern realtype fsign(realtype const,realtype const);
extern Boolean GetVectorMemory(rvector &,word,word);
extern Boolean GetVectorMemory(ivector &,word,word);
extern Boolean GetVectorMemory(wvector &,word,word);
extern Boolean GetVectorMemory(bvector &,word,word);
extern Boolean GetVectorMemory(lvector &,word,word);
extern Boolean GetVectorMemory(lwvector &,word,word);
extern Boolean GetVectorMemory(psvector &,word,word);
extern void FreeVectorMemory(rvector &,word);
extern void FreeVectorMemory(ivector &,word);
extern void FreeVectorMemory(wvector &,word);
extern void FreeVectorMemory(bvector &,word);
extern void FreeVectorMemory(lvector &,word);
extern void FreeVectorMemory(lwvector &,word);
extern void FreeVectorMemory(psvector &,word);
extern Boolean GetMatrixMemory(rmatrix &,word,word,word,word);
extern Boolean GetMatrixMemory(imatrix &,word,word,word,word);
extern Boolean GetMatrixMemory(wmatrix &,word,word,word,word);
extern Boolean GetMatrixMemory(bmatrix &,word,word,word,word);
extern Boolean GetMatrixMemory(lmatrix &,word,word,word,word);
extern Boolean GetMatrixMemory(lwmatrix &,word,word,word,word);
extern Boolean GetMatrixMemory(psmatrix &,word,word,word,word);
extern void FreeMatrixMemory(rmatrix &,word,word,word);
extern void FreeMatrixMemory(imatrix &,word,word,word);
extern void FreeMatrixMemory(wmatrix &,word,word,word);
extern void FreeMatrixMemory(bmatrix &,word,word,word);
extern void FreeMatrixMemory(lmatrix &,word,word,word);
extern void FreeMatrixMemory(lwmatrix &,word,word,word);
extern void FreeMatrixMemory(psmatrix &,word,word,word);
extern Boolean GetMatrix3Memory(rmatrix3 &,word,word,word,word,word,word);
extern Boolean GetMatrix3Memory(imatrix3 &,word,word,word,word,word,word);
extern Boolean GetMatrix3Memory(wmatrix3 &,word,word,word,word,word,word);
extern Boolean GetMatrix3Memory(bmatrix3 &,word,word,word,word,word,word);
extern Boolean GetMatrix3Memory(lmatrix3 &,word,word,word,word,word,word);
extern Boolean GetMatrix3Memory(lwmatrix3 &,word,word,word,word,word,word);
extern Boolean GetMatrix3Memory(psmatrix3 &,word,word,word,word,word,word);
extern void FreeMatrix3Memory(rmatrix3 &,word,word,word,word,word);
extern void FreeMatrix3Memory(imatrix3 &,word,word,word,word,word);
extern void FreeMatrix3Memory(wmatrix3 &,word,word,word,word,word);
extern void FreeMatrix3Memory(bmatrix3 &,word,word,word,word,word);
extern void FreeMatrix3Memory(lmatrix3 &,word,word,word,word,word);
extern void FreeMatrix3Memory(lwmatrix3 &,word,word,word,word,word);
extern void FreeMatrix3Memory(psmatrix3 &,word,word,word,word,word);
extern realtype MachinEps();
extern realtype frac(realtype);
extern long mod(long,long);
extern realtype Pow(realtype,int);
extern realtype Pow1(realtype,realtype);
extern realtype Exp(realtype);
extern Boolean Odd(int);
extern long HexValL(pstr const);
extern long OctValL(pstr const);
extern long BinValL(pstr const);
extern pstr BinValS(long,pstr);
extern pstr CreateCopy(pstr &,pstr const);
extern pstr CreateCopy_n(pstr &,pstr const,int);
extern pstr CreateConcat(pstr &,pstr const);
extern pstr CreateConcat(pstr &,pstr const,pstr const);
extern pstr CreateConcat(pstr &,pstr const,pstr const,pstr const);
extern pstr CreateConcat(pstr &,pstr const,pstr const,pstr const,pstr const);
extern pstr CreateCopCat(pstr &,pstr const,pstr const,pstr const,pstr const);
extern pstr CreateCopCat(pstr &,pstr const,pstr const,pstr const);
extern pstr CreateCopCat(pstr &,pstr const,pstr const);
extern pstr LastOccurence(pstr const,char);
extern pstr FirstOccurence(pstr const,char);
extern int indexOf(pstr const,char);
extern pstr FirstOccurence(pstr const,int,pstr const,int);
extern int indexOf(pstr const,int,pstr const,int);
extern pstr LowerCase(pstr);
extern pstr UpperCase(pstr);
extern void GetString(pstr,pstr const,int);
extern void GetStrTer(pstr,pstr const,int,int,int);
extern void strcpy_n(pstr,pstr const,int);
extern void strcpy_n1(pstr,pstr const,int);
extern void strcpy_nr(pstr,pstr const,int);
extern void strcpy_ns(pstr,pstr const,int);
extern pstr strcpy_cs(pstr,pstr const);
extern pstr strcpy_ncs(pstr,pstr const,int);
extern pstr strcpy_css(pstr,pstr const);
extern pstr strcpy_ncss(pstr,pstr const,int);
extern pstr strcpy_n0(pstr,pstr const,int);
extern int strlen_des(pstr const);
extern pstr strcpy_des(pstr,pstr const);
extern pstr strcat_des(pstr,pstr const);
extern void PadSpaces(pstr,int);
extern pstr CutSpaces(pstr,int);
extern pstr DelSpaces(pstr,char);
extern pstr EnforceSpaces(pstr);
extern void int2UniBin(int,intUniBin);
extern void short2UniBin(short,shortUniBin);
extern void long2UniBin(long,longUniBin);
extern void word2UniBin(word,wordUniBin);
extern void real2UniBin(realtype,realUniBin);
extern void float2UniBin(realtype,floatUniBin);
extern void UniBin2int(intUniBin,int &);
extern void UniBin2short(shortUniBin,short &);
extern void UniBin2long(longUniBin,long &);
extern void UniBin2word(wordUniBin,word &);
extern void UniBin2real(realUniBin,realtype &);
extern void UniBin2float(floatUniBin,realtype &);
extern void mem_write(int,pstr,int &);
extern void mem_write(short,pstr,int &);
extern void mem_write(long,pstr,int &);
extern void mem_write(word,pstr,int &);
extern void mem_write(realtype,pstr,int &);
extern void mem_write(pstr,int,pstr,int &);
extern void mem_write(pstr,pstr,int &);
extern void mem_write(Boolean,pstr,int &);
extern void mem_read(int &,pstr const,int &);
extern void mem_read(short &,pstr const,int &);
extern void mem_read(long &,pstr const,int &);
extern void mem_read(word &,pstr const,int &);
extern void mem_read(realtype &,pstr const,int &);
extern void mem_read(pstr,int,pstr const,int &);
extern void mem_read(pstr &,pstr const,int &);
extern void mem_read(Boolean &,pstr const,int &);
extern int GetMachineID();
extern pstr GetMachineName();
extern pstr GetMachineName(int);
extern realtype GetTorsion(rvector,rvector,rvector);
extern realtype GetAngle(rvector,rvector);
extern realtype Combinations(int,int);
extern realtype log1mx(realtype);
extern realtype expc(realtype);
extern realtype expc1mx(realtype,realtype);
extern void Jacobi(int,rmatrix,rmatrix,rvector,rvector,int &);
extern void PbCholDecomp(int,rvector,realtype,realtype,rmatrix,realtype &);
extern void LSolve(int,rmatrix,rvector,rvector);
extern void LTSolve(int,rmatrix,rvector,rvector);
extern void ChSolve(int,rmatrix,rvector,rvector);
extern void FastInverse(int,rmatrix,ivector,int &);
extern pstr GetFPath(pstr,int);
extern pstr GetFName(pstr const,int);
extern pstr GetFExt(pstr const);
extern pstr ChangeExt(pstr,pstr const,int);
extern pstr FileError(int);
extern void RemoveDelimiters(pstr,int);
extern void PickOutNumber(pstr const,pstr,int,int &);

static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
}

extern void SetGZIPPath(pstr);
extern Boolean FileExists(pstr,PCFile);
extern void Date9to11(pstr const,pstr);
extern void Date11to9(pstr const,pstr);
extern void Date9toCIF(pstr const,pstr);
extern void Date11toCIF(pstr const,pstr);
extern void DateCIFto9(pstr const,pstr);
extern void DateCIFto11(pstr const,pstr);
extern Boolean GetInteger(int &,pstr const,int);
extern Boolean GetReal(realtype &,pstr const,int);
extern Boolean GetIntIns(int &,pstr,pstr const,int);
extern void PutInteger(pstr,int,int);
extern void PutRealF(pstr,realtype,int,int);
extern void PutIntIns(pstr,int,int,pstr const);
extern int CIFGetInteger(int &,PCMMCIFStruct,pstr const,Boolean);
extern int CIFGetReal(realtype &,PCMMCIFStruct,pstr const,Boolean);
extern int CIFGetString(pstr,PCMMCIFStruct,pstr const,int,pstr const,Boolean);
extern int CIFGetInteger(int &,PCMMCIFLoop,pstr const,int &);
extern int CIFGetInteger1(int &,PCMMCIFLoop,pstr const,int);
extern int CIFGetReal(realtype &,PCMMCIFLoop,pstr const,int &);
extern int CIFGetReal1(realtype &,PCMMCIFLoop,pstr const,int);
extern int CIFGetString(pstr,PCMMCIFLoop,pstr const,int,int,pstr const);
extern void Mat4Inverse(mat44 &,mat44 &);
extern void Mat4Init(mat44 &);
extern void Mat3Init(mat33 &);
extern void Mat4Copy(mat44 &,mat44 &);
extern void Mat3Copy(mat33 &,mat33 &);
extern char CIFErrorLocation[200];
extern pstr GetErrorDescription(int);
extern void ParseAtomID(pstr const,AtomName,Element,AltLoc);
extern int ParseResID(pstr const,int &,InsCode,ResName);
extern int ParseAtomPath(pstr const,int &,ChainID,int &,InsCode,ResName,AtomName,Element,AltLoc,PCAtomPath);
extern int ParseSelectionPath(pstr const,int &,pstr,int &,InsCode,int &,InsCode,pstr,pstr,pstr,pstr);
extern void MakeSelectionPath(pstr,int,pstr const,int,InsCode const,int,InsCode const,pstr const,pstr const,pstr const,pstr const);
extern void SetMakersCChain(void *,void *);
extern Boolean ignoreSegID;
extern Boolean ignoreElement;
extern Boolean ignoreCharge;
extern Boolean ignoreNonCoorPDBErrors;
extern void SetMakersCAtom(void *,void *);
extern void SetMakersCResidue(void *,void *);
extern realtype BondAngle(PCAtom,PCAtom,PCAtom);
extern pstr CIFName(int,int);
extern int isMMDBBIN(pstr const,byte);
extern int isPDB(pstr const,byte,Boolean);
extern void DeleteMContacts(PPCMContact &,int);
extern void GetEulerRotMatrix(mat33 &,realtype,realtype,realtype);
extern void GetEulerTMatrix(mat44 &,realtype,realtype,realtype,realtype,realtype,realtype);
extern void EulerRotation(PPCAtom,int,realtype,realtype,realtype,realtype,realtype,realtype);
extern void GetVecRotMatrix(mat33 &,realtype,realtype,realtype,realtype);
extern void GetRotParameters(mat33 &,realtype &,realtype &,realtype &,realtype &);
extern void GetVecTMatrix(mat44 &,realtype,realtype,realtype,realtype,realtype,realtype,realtype);
extern void VectorRotation(PPCAtom,int,realtype,realtype,realtype,realtype,realtype,realtype,realtype);
extern void GetMassCenter(PPCAtom,int,realtype &,realtype &,realtype &);
extern int SuperposeAtoms(mat44 &,PPCAtom,int,PPCAtom,ivector);
extern void SortContacts(PSContact,int,int);
extern pstr GetMMCIFInputBuffer(int &);
extern int isCIF(pstr,byte);
extern void SetMakersCModel(void *,void *);
extern int MakeChirInd(char);
extern int MakeElementType(int,int,Boolean);
extern int MakeElementType(int,char,Boolean);
extern pstr const ElementName[117];
extern pstr const ElementMetal[91];
extern pstr const HydAtomName[14];
extern realtype const MolecWeight[117];
extern realtype const CovalentRadius[117];
extern realtype const VdWaalsRadius[117];
extern realtype const IonicRadius[117];
extern Boolean isMetal(pstr const);
extern int getElementNo(pstr const);
extern realtype getCovalentRadius(pstr const);
extern realtype getVdWaalsRadius(pstr const);
extern pstr const ResidueName[26];
extern char const ResidueName1[26];
extern realtype GetAAHydropathy(pstr const);
extern int GetAASimilarity(pstr const,pstr const);
extern pstr const StdSolventName[12];
extern pstr const AminoacidName[23];
extern pstr const NucleotideName[6];
extern Boolean isSolvent(pstr const);
extern Boolean isAminoacid(pstr const);
extern Boolean isNucleotide(pstr const);
extern Boolean isSugar(pstr const);
extern void Get1LetterCode(pstr const,pstr);


  PCChain getPCChain(PPCChain A, int i){
    return A[i];
  }
  PCResidue getPCResidue(PPCResidue A, int i){
    return A[i];
  }
  PPCAtom getPPCAtom(PPCAtom *A, int i){
    return A[i];
  }
  PCAtom getPCAtom(PPCAtom A, int i){
    return A[i];
  }
  CAtom getCAtom(PCAtom A){
    return *A;
  }
  SContact getSContact(PSContact A, int i){
    return A[i];
  }

#define DefineNewFunctions(ClassName)             \
   P##ClassName newP##ClassName(int i=-1)   {P##ClassName A;  if(i<0) A=0; else A = new ClassName[i];  return A;} \
   PP##ClassName newPP##ClassName(int i=-1) {PP##ClassName A; if(i<0) A=0; else A = new P##ClassName[i]; return A;} 

#define DefineNewFunctions0(ClassName)             \
   P##ClassName newP##ClassName(void)   {P##ClassName A=0; return A;} \
   PP##ClassName newPP##ClassName(int i=-1) {PP##ClassName A; if(i<0) A=0; else A = new P##ClassName[i]; return A;} 

DefineNewFunctions(CAtom)
DefineNewFunctions(CBFGSMin)
DefineNewFunctions(CFile)
DefineNewFunctions(CProModel)
DefineNewFunctions(CChainContainer)
DefineNewFunctions(CContainerChain)
DefineNewFunctions(CDBReference)
DefineNewFunctions(CSeqAdv)
DefineNewFunctions(CSeqRes)
DefineNewFunctions(CModRes)
DefineNewFunctions(CHetRec)
DefineNewFunctions(CBrick)
DefineNewFunctions(CGenSym)
DefineNewFunctions(CMMDBCoorManager)
DefineNewFunctions(CCrystContainer)
DefineNewFunctions(CNCSMatrix)
DefineNewFunctions(CTVect)
DefineNewFunctions(CMMDBCryst)
DefineNewFunctions(CResidue)
DefineNewFunctions(CChain)
DefineNewFunctions(CModel)
DefineNewFunctions(CSSContainer)
DefineNewFunctions(CHelix)
DefineNewFunctions(CStrand)
DefineNewFunctions(CSheet)
DefineNewFunctions(CSheets)
DefineNewFunctions(CTurn)
DefineNewFunctions(CHetCompounds)
DefineNewFunctions(CMMDBSelManager)
DefineNewFunctions(CSymOp)
DefineNewFunctions(CSymOps)
DefineNewFunctions(CTitleContainer)
DefineNewFunctions(CObsLine)
DefineNewFunctions(CTitleLine)
DefineNewFunctions(CCaveat)
DefineNewFunctions(CCompound)
DefineNewFunctions(CSource)
DefineNewFunctions(CKeyWords)
DefineNewFunctions(CExpData)
DefineNewFunctions(CAuthor)
DefineNewFunctions(CRevData)
DefineNewFunctions(CSupersede)
DefineNewFunctions(CJournal)
DefineNewFunctions(CRemark)
DefineNewFunctions(CMMDBTitle)
DefineNewFunctions(CContainerClass)
DefineNewFunctions(CContString)
DefineNewFunctions(CClassContainer)
DefineNewFunctions(CAtomPath)

DefineNewFunctions0(CHetCompound)

  PSContact newPSContact(void){
    PSContact A=0;
    return A;
  }

  mat44* newpmat44(void){
    mat44 *A=0;
    return A;
  }


#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_new_intp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    intp *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_intp")) goto fail;
    result = (intp *)new_intp();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_intp, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_intp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    intp *arg1 = (intp *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_intp",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_intp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_intp(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_intp_assign(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    intp *arg1 = (intp *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:intp_assign",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_intp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    intp_assign(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_intp_value(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    intp *arg1 = (intp *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:intp_value",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_intp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)intp_value(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_intp_cast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    intp *arg1 = (intp *) 0 ;
    int *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:intp_cast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_intp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int *)intp_cast(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_int, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_intp_frompointer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int *arg1 = (int *) 0 ;
    intp *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:intp_frompointer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (intp *)intp_frompointer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_intp, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * intp_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_intp, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_doublep(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    doublep *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_doublep")) goto fail;
    result = (doublep *)new_doublep();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_doublep, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_doublep(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    doublep *arg1 = (doublep *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_doublep",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_doublep,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_doublep(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_doublep_assign(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    doublep *arg1 = (doublep *) 0 ;
    double arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:doublep_assign",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_doublep,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    doublep_assign(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_doublep_value(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    doublep *arg1 = (doublep *) 0 ;
    double result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:doublep_value",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_doublep,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double)doublep_value(arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_doublep_cast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    doublep *arg1 = (doublep *) 0 ;
    double *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:doublep_cast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_doublep,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double *)doublep_cast(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_double, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_doublep_frompointer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    double *arg1 = (double *) 0 ;
    doublep *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:doublep_frompointer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_double,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (doublep *)doublep_frompointer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_doublep, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * doublep_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_doublep, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_inta(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    inta *result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:new_inta",&arg1)) goto fail;
    result = (inta *)new_inta(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_inta, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_inta(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    inta *arg1 = (inta *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_inta",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_inta,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_inta(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_inta___getitem__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    inta *arg1 = (inta *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:inta___getitem__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_inta,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)inta_getitem(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_inta___setitem__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    inta *arg1 = (inta *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:inta___setitem__",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_inta,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    inta_setitem(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_inta_cast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    inta *arg1 = (inta *) 0 ;
    int *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:inta_cast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_inta,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int *)inta_cast(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_int, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_inta_frompointer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int *arg1 = (int *) 0 ;
    inta *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:inta_frompointer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (inta *)inta_frompointer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_inta, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * inta_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_inta, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_doublea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    doublea *result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:new_doublea",&arg1)) goto fail;
    result = (doublea *)new_doublea(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_doublea, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_doublea(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    doublea *arg1 = (doublea *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_doublea",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_doublea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete_doublea(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_doublea___getitem__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    doublea *arg1 = (doublea *) 0 ;
    int arg2 ;
    double result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:doublea___getitem__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_doublea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double)doublea_getitem(arg1,arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_doublea___setitem__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    doublea *arg1 = (doublea *) 0 ;
    int arg2 ;
    double arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oid:doublea___setitem__",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_doublea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    doublea_setitem(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_doublea_cast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    doublea *arg1 = (doublea *) 0 ;
    double *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:doublea_cast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_doublea,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double *)doublea_cast(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_double, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_doublea_frompointer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    double *arg1 = (double *) 0 ;
    doublea *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:doublea_frompointer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_double,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (doublea *)doublea_frompointer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_doublea, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * doublea_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_doublea, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_SContact(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SContact *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_SContact")) goto fail;
    result = (SContact *)new SContact();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_SContact, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_SContact(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SContact *arg1 = (SContact *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_SContact",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SContact_id1_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SContact *arg1 = (SContact *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:SContact_id1_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->id1 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SContact_id1_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SContact *arg1 = (SContact *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SContact_id1_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->id1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SContact_id2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SContact *arg1 = (SContact *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:SContact_id2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->id2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SContact_id2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SContact *arg1 = (SContact *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SContact_id2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->id2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SContact_group_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SContact *arg1 = (SContact *) 0 ;
    long arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ol:SContact_group_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->group = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SContact_group_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SContact *arg1 = (SContact *) 0 ;
    long result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SContact_group_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long) ((arg1)->group);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SContact_dist_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SContact *arg1 = (SContact *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SContact_dist_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->dist = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SContact_dist_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SContact *arg1 = (SContact *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SContact_dist_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->dist);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SContact_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SContact *arg1 = (SContact *) 0 ;
    SContact arg2 ;
    SContact *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SContact_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_SContact,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * SContact_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_SContact, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_InitMatType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Boolean result;
    
    if(!PyArg_ParseTuple(args,(char *)":InitMatType")) goto fail;
    result = (Boolean)InitMatType();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mround(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"d:mround",&arg1)) goto fail;
    result = (int)mround(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Abs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:Abs",&arg1)) goto fail;
    result = (int)Abs(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ISwap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int *arg1 = 0 ;
    int *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ISwap",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ISwap(*arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_WSwap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    word *arg1 = 0 ;
    word *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:WSwap",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_word,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_word,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    WSwap(*arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BSwap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    byte *arg1 = 0 ;
    byte *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BSwap",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    BSwap(*arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LSwap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    long *arg1 = 0 ;
    long *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LSwap",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    LSwap(*arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RSwap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype *arg1 = 0 ;
    realtype *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RSwap",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    RSwap(*arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RMax(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    realtype arg2 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"dd:RMax",&arg1,&arg2)) goto fail;
    result = (realtype)RMax(arg1,arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LMax(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    long arg1 ;
    long arg2 ;
    long result;
    
    if(!PyArg_ParseTuple(args,(char *)"ll:LMax",&arg1,&arg2)) goto fail;
    result = (long)LMax(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_WMax(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    word arg1 ;
    word arg2 ;
    word result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:WMax",&obj0,&obj1)) goto fail;
    arg1 = (word) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (word)WMax(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IMax(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"ii:IMax",&arg1,&arg2)) goto fail;
    result = (int)IMax(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RMin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    realtype arg2 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"dd:RMin",&arg1,&arg2)) goto fail;
    result = (realtype)RMin(arg1,arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LMin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    long arg1 ;
    long arg2 ;
    long result;
    
    if(!PyArg_ParseTuple(args,(char *)"ll:LMin",&arg1,&arg2)) goto fail;
    result = (long)LMin(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_WMin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    word arg1 ;
    word arg2 ;
    word result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:WMin",&obj0,&obj1)) goto fail;
    arg1 = (word) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (word)WMin(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IMin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"ii:IMin",&arg1,&arg2)) goto fail;
    result = (int)IMin(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_fsign(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    realtype arg2 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"dd:fsign",&arg1,&arg2)) goto fail;
    result = (realtype)fsign(arg1,arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetVectorMemory__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    rvector *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:GetVectorMemory",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetVectorMemory(*arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetVectorMemory__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    ivector *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:GetVectorMemory",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetVectorMemory(*arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetVectorMemory__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wvector *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:GetVectorMemory",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetVectorMemory(*arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetVectorMemory__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bvector *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:GetVectorMemory",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetVectorMemory(*arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetVectorMemory__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    lvector *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:GetVectorMemory",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_lvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetVectorMemory(*arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetVectorMemory__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    lwvector *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:GetVectorMemory",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_lwvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetVectorMemory(*arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetVectorMemory__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    psvector *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:GetVectorMemory",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_psvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetVectorMemory(*arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetVectorMemory(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_rvector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_GetVectorMemory__SWIG_0(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_GetVectorMemory__SWIG_0(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_ivector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_GetVectorMemory__SWIG_1(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_GetVectorMemory__SWIG_1(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wvector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_GetVectorMemory__SWIG_2(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_GetVectorMemory__SWIG_2(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_bvector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_GetVectorMemory__SWIG_3(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_GetVectorMemory__SWIG_3(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_lvector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_GetVectorMemory__SWIG_4(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_GetVectorMemory__SWIG_4(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_lwvector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_GetVectorMemory__SWIG_5(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_GetVectorMemory__SWIG_5(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_psvector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_GetVectorMemory__SWIG_6(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_GetVectorMemory__SWIG_6(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'GetVectorMemory'");
    return NULL;
}


static PyObject *_wrap_FreeVectorMemory__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    rvector *arg1 = 0 ;
    word arg2 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:FreeVectorMemory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj1) {
        arg2 = (word) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeVectorMemory(*arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeVectorMemory__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    ivector *arg1 = 0 ;
    word arg2 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:FreeVectorMemory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj1) {
        arg2 = (word) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeVectorMemory(*arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeVectorMemory__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wvector *arg1 = 0 ;
    word arg2 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:FreeVectorMemory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj1) {
        arg2 = (word) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeVectorMemory(*arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeVectorMemory__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bvector *arg1 = 0 ;
    word arg2 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:FreeVectorMemory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj1) {
        arg2 = (word) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeVectorMemory(*arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeVectorMemory__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    lvector *arg1 = 0 ;
    word arg2 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:FreeVectorMemory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_lvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj1) {
        arg2 = (word) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeVectorMemory(*arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeVectorMemory__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    lwvector *arg1 = 0 ;
    word arg2 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:FreeVectorMemory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_lwvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj1) {
        arg2 = (word) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeVectorMemory(*arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeVectorMemory__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    psvector *arg1 = 0 ;
    word arg2 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:FreeVectorMemory",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_psvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj1) {
        arg2 = (word) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeVectorMemory(*arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeVectorMemory(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_rvector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_FreeVectorMemory__SWIG_0(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_FreeVectorMemory__SWIG_0(self,args);
            }
        }
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_ivector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_FreeVectorMemory__SWIG_1(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_FreeVectorMemory__SWIG_1(self,args);
            }
        }
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wvector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_FreeVectorMemory__SWIG_2(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_FreeVectorMemory__SWIG_2(self,args);
            }
        }
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_bvector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_FreeVectorMemory__SWIG_3(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_FreeVectorMemory__SWIG_3(self,args);
            }
        }
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_lvector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_FreeVectorMemory__SWIG_4(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_FreeVectorMemory__SWIG_4(self,args);
            }
        }
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_lwvector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_FreeVectorMemory__SWIG_5(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_FreeVectorMemory__SWIG_5(self,args);
            }
        }
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_psvector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_FreeVectorMemory__SWIG_6(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_FreeVectorMemory__SWIG_6(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'FreeVectorMemory'");
    return NULL;
}


static PyObject *_wrap_GetMatrixMemory__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    rmatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OO:GetMatrixMemory",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrixMemory(*arg1,arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrixMemory__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    imatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OO:GetMatrixMemory",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_imatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrixMemory(*arg1,arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrixMemory__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wmatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OO:GetMatrixMemory",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrixMemory(*arg1,arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrixMemory__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bmatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OO:GetMatrixMemory",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrixMemory(*arg1,arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrixMemory__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    lmatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OO:GetMatrixMemory",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_lmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrixMemory(*arg1,arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrixMemory__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    lwmatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OO:GetMatrixMemory",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_lwmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrixMemory(*arg1,arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrixMemory__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    psmatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OO:GetMatrixMemory",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_psmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrixMemory(*arg1,arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrixMemory(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 3) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_rmatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_GetMatrixMemory__SWIG_0(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrixMemory__SWIG_0(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_GetMatrixMemory__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_imatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_GetMatrixMemory__SWIG_1(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrixMemory__SWIG_1(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_GetMatrixMemory__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wmatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_GetMatrixMemory__SWIG_2(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrixMemory__SWIG_2(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_GetMatrixMemory__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_bmatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_GetMatrixMemory__SWIG_3(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrixMemory__SWIG_3(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_GetMatrixMemory__SWIG_3(self,args);
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_lmatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_GetMatrixMemory__SWIG_4(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrixMemory__SWIG_4(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_GetMatrixMemory__SWIG_4(self,args);
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_lwmatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_GetMatrixMemory__SWIG_5(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrixMemory__SWIG_5(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_GetMatrixMemory__SWIG_5(self,args);
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_psmatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_GetMatrixMemory__SWIG_6(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrixMemory__SWIG_6(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_GetMatrixMemory__SWIG_6(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'GetMatrixMemory'");
    return NULL;
}


static PyObject *_wrap_FreeMatrixMemory__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    rmatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    word arg4 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:FreeMatrixMemory",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrixMemory(*arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrixMemory__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    imatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    word arg4 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:FreeMatrixMemory",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_imatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrixMemory(*arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrixMemory__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wmatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    word arg4 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:FreeMatrixMemory",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrixMemory(*arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrixMemory__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bmatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    word arg4 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:FreeMatrixMemory",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrixMemory(*arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrixMemory__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    lmatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    word arg4 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:FreeMatrixMemory",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_lmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrixMemory(*arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrixMemory__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    lwmatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    word arg4 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:FreeMatrixMemory",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_lwmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrixMemory(*arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrixMemory__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    psmatrix *arg1 = 0 ;
    word arg2 ;
    word arg3 = (word) 1 ;
    word arg4 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:FreeMatrixMemory",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_psmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrixMemory(*arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrixMemory(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_rmatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_FreeMatrixMemory__SWIG_0(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrixMemory__SWIG_0(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_FreeMatrixMemory__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_imatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_FreeMatrixMemory__SWIG_1(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrixMemory__SWIG_1(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_FreeMatrixMemory__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wmatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_FreeMatrixMemory__SWIG_2(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrixMemory__SWIG_2(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_FreeMatrixMemory__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_bmatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_FreeMatrixMemory__SWIG_3(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrixMemory__SWIG_3(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_FreeMatrixMemory__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_lmatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_FreeMatrixMemory__SWIG_4(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrixMemory__SWIG_4(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_FreeMatrixMemory__SWIG_4(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_lwmatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_FreeMatrixMemory__SWIG_5(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrixMemory__SWIG_5(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_FreeMatrixMemory__SWIG_5(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_psmatrix, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_FreeMatrixMemory__SWIG_6(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrixMemory__SWIG_6(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_FreeMatrixMemory__SWIG_6(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'FreeMatrixMemory'");
    return NULL;
}


static PyObject *_wrap_GetMatrix3Memory__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    rmatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    word arg7 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|OOO:GetMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_rmatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = (word) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj6) {
        arg7 = (word) PyInt_AsLong(obj6);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrix3Memory__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    imatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    word arg7 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|OOO:GetMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_imatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = (word) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj6) {
        arg7 = (word) PyInt_AsLong(obj6);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrix3Memory__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wmatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    word arg7 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|OOO:GetMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wmatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = (word) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj6) {
        arg7 = (word) PyInt_AsLong(obj6);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrix3Memory__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bmatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    word arg7 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|OOO:GetMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bmatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = (word) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj6) {
        arg7 = (word) PyInt_AsLong(obj6);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrix3Memory__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    lmatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    word arg7 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|OOO:GetMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_lmatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = (word) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj6) {
        arg7 = (word) PyInt_AsLong(obj6);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrix3Memory__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    lwmatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    word arg7 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|OOO:GetMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_lwmatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = (word) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj6) {
        arg7 = (word) PyInt_AsLong(obj6);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrix3Memory__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    psmatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    word arg7 = (word) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|OOO:GetMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_psmatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = (word) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj6) {
        arg7 = (word) PyInt_AsLong(obj6);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)GetMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMatrix3Memory(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[8];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 7); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 4) && (argc <= 7)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_rmatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrix3Memory__SWIG_0(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_GetMatrix3Memory__SWIG_0(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                if (argc <= 6) {
                                    return _wrap_GetMatrix3Memory__SWIG_0(self,args);
                                }
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_GetMatrix3Memory__SWIG_0(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 4) && (argc <= 7)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_imatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrix3Memory__SWIG_1(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_GetMatrix3Memory__SWIG_1(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                if (argc <= 6) {
                                    return _wrap_GetMatrix3Memory__SWIG_1(self,args);
                                }
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_GetMatrix3Memory__SWIG_1(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 4) && (argc <= 7)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wmatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrix3Memory__SWIG_2(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_GetMatrix3Memory__SWIG_2(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                if (argc <= 6) {
                                    return _wrap_GetMatrix3Memory__SWIG_2(self,args);
                                }
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_GetMatrix3Memory__SWIG_2(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 4) && (argc <= 7)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_bmatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrix3Memory__SWIG_3(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_GetMatrix3Memory__SWIG_3(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                if (argc <= 6) {
                                    return _wrap_GetMatrix3Memory__SWIG_3(self,args);
                                }
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_GetMatrix3Memory__SWIG_3(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 4) && (argc <= 7)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_lmatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrix3Memory__SWIG_4(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_GetMatrix3Memory__SWIG_4(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                if (argc <= 6) {
                                    return _wrap_GetMatrix3Memory__SWIG_4(self,args);
                                }
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_GetMatrix3Memory__SWIG_4(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 4) && (argc <= 7)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_lwmatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrix3Memory__SWIG_5(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_GetMatrix3Memory__SWIG_5(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                if (argc <= 6) {
                                    return _wrap_GetMatrix3Memory__SWIG_5(self,args);
                                }
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_GetMatrix3Memory__SWIG_5(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 4) && (argc <= 7)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_psmatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_GetMatrix3Memory__SWIG_6(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_GetMatrix3Memory__SWIG_6(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                if (argc <= 6) {
                                    return _wrap_GetMatrix3Memory__SWIG_6(self,args);
                                }
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_GetMatrix3Memory__SWIG_6(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'GetMatrix3Memory'");
    return NULL;
}


static PyObject *_wrap_FreeMatrix3Memory__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    rmatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OOO:FreeMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_rmatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrix3Memory__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    imatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OOO:FreeMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_imatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrix3Memory__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    wmatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OOO:FreeMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_wmatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrix3Memory__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bmatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OOO:FreeMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bmatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrix3Memory__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    lmatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OOO:FreeMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_lmatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrix3Memory__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    lwmatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OOO:FreeMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_lwmatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrix3Memory__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    psmatrix3 *arg1 = 0 ;
    word arg2 ;
    word arg3 ;
    word arg4 = (word) 1 ;
    word arg5 = (word) 1 ;
    word arg6 = (word) 1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|OOO:FreeMatrix3Memory",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_psmatrix3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        arg4 = (word) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (word) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (word) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    FreeMatrix3Memory(*arg1,arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FreeMatrix3Memory(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 3) && (argc <= 6)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_rmatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrix3Memory__SWIG_0(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_FreeMatrix3Memory__SWIG_0(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_FreeMatrix3Memory__SWIG_0(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_FreeMatrix3Memory__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 6)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_imatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrix3Memory__SWIG_1(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_FreeMatrix3Memory__SWIG_1(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_FreeMatrix3Memory__SWIG_1(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_FreeMatrix3Memory__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 6)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_wmatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrix3Memory__SWIG_2(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_FreeMatrix3Memory__SWIG_2(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_FreeMatrix3Memory__SWIG_2(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_FreeMatrix3Memory__SWIG_2(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 6)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_bmatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrix3Memory__SWIG_3(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_FreeMatrix3Memory__SWIG_3(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_FreeMatrix3Memory__SWIG_3(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_FreeMatrix3Memory__SWIG_3(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 6)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_lmatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrix3Memory__SWIG_4(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_FreeMatrix3Memory__SWIG_4(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_FreeMatrix3Memory__SWIG_4(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_FreeMatrix3Memory__SWIG_4(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 6)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_lwmatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrix3Memory__SWIG_5(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_FreeMatrix3Memory__SWIG_5(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_FreeMatrix3Memory__SWIG_5(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_FreeMatrix3Memory__SWIG_5(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 6)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_psmatrix3, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_FreeMatrix3Memory__SWIG_6(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_FreeMatrix3Memory__SWIG_6(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_FreeMatrix3Memory__SWIG_6(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_FreeMatrix3Memory__SWIG_6(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'FreeMatrix3Memory'");
    return NULL;
}


static PyObject *_wrap_MachinEps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)":MachinEps")) goto fail;
    result = (realtype)MachinEps();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_frac(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"d:frac",&arg1)) goto fail;
    result = (realtype)frac(arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mod(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    long arg1 ;
    long arg2 ;
    long result;
    
    if(!PyArg_ParseTuple(args,(char *)"ll:mod",&arg1,&arg2)) goto fail;
    result = (long)mod(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Pow(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    int arg2 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"di:Pow",&arg1,&arg2)) goto fail;
    result = (realtype)Pow(arg1,arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Pow1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    realtype arg2 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"dd:Pow1",&arg1,&arg2)) goto fail;
    result = (realtype)Pow1(arg1,arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Exp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"d:Exp",&arg1)) goto fail;
    result = (realtype)Exp(arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Odd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    Boolean result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:Odd",&arg1)) goto fail;
    result = (Boolean)Odd(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HexValL(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    long result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:HexValL",&arg1)) goto fail;
    result = (long)HexValL(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OctValL(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    long result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:OctValL",&arg1)) goto fail;
    result = (long)OctValL(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BinValL(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    long result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:BinValL",&arg1)) goto fail;
    result = (long)BinValL(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BinValS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    long arg1 ;
    pstr arg2 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"ls:BinValS",&arg1,&arg2)) goto fail;
    result = (pstr)BinValS(arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CreateCopy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr *arg1 = 0 ;
    pstr arg2 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CreateCopy",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)CreateCopy(*arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CreateCopy_n(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr *arg1 = 0 ;
    pstr arg2 ;
    int arg3 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CreateCopy_n",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)CreateCopy_n(*arg1,arg2,arg3);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CreateConcat__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr *arg1 = 0 ;
    pstr arg2 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CreateConcat",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)CreateConcat(*arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CreateConcat__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr *arg1 = 0 ;
    pstr arg2 ;
    pstr arg3 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:CreateConcat",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)CreateConcat(*arg1,arg2,arg3);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CreateConcat__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr *arg1 = 0 ;
    pstr arg2 ;
    pstr arg3 ;
    pstr arg4 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osss:CreateConcat",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)CreateConcat(*arg1,arg2,arg3,arg4);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CreateConcat__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr *arg1 = 0 ;
    pstr arg2 ;
    pstr arg3 ;
    pstr arg4 ;
    pstr arg5 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossss:CreateConcat",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)CreateConcat(*arg1,arg2,arg3,arg4,arg5);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CreateConcat(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CreateConcat__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CreateConcat__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CreateConcat__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = PyString_Check(argv[4]) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CreateConcat__SWIG_3(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CreateConcat'");
    return NULL;
}


static PyObject *_wrap_CreateCopCat__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr *arg1 = 0 ;
    pstr arg2 ;
    pstr arg3 ;
    pstr arg4 ;
    pstr arg5 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossss:CreateCopCat",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)CreateCopCat(*arg1,arg2,arg3,arg4,arg5);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CreateCopCat__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr *arg1 = 0 ;
    pstr arg2 ;
    pstr arg3 ;
    pstr arg4 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osss:CreateCopCat",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)CreateCopCat(*arg1,arg2,arg3,arg4);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CreateCopCat__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr *arg1 = 0 ;
    pstr arg2 ;
    pstr arg3 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:CreateCopCat",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)CreateCopCat(*arg1,arg2,arg3);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CreateCopCat(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CreateCopCat__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CreateCopCat__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = PyString_Check(argv[4]) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CreateCopCat__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CreateCopCat'");
    return NULL;
}


static PyObject *_wrap_LastOccurence(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    char arg2 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"sc:LastOccurence",&arg1,&arg2)) goto fail;
    result = (pstr)LastOccurence(arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FirstOccurence__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    char arg2 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"sc:FirstOccurence",&arg1,&arg2)) goto fail;
    result = (pstr)FirstOccurence(arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_indexOf__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    char arg2 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"sc:indexOf",&arg1,&arg2)) goto fail;
    result = (int)indexOf(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FirstOccurence__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int arg2 ;
    pstr arg3 ;
    int arg4 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"sisi:FirstOccurence",&arg1,&arg2,&arg3,&arg4)) goto fail;
    result = (pstr)FirstOccurence(arg1,arg2,arg3,arg4);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FirstOccurence(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyString_Check(argv[1]) && (PyString_Size(argv[1]) == 1)) ? 1 : 0;
            }
            if (_v) {
                return _wrap_FirstOccurence__SWIG_0(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_FirstOccurence__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'FirstOccurence'");
    return NULL;
}


static PyObject *_wrap_indexOf__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int arg2 ;
    pstr arg3 ;
    int arg4 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"sisi:indexOf",&arg1,&arg2,&arg3,&arg4)) goto fail;
    result = (int)indexOf(arg1,arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_indexOf(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyString_Check(argv[1]) && (PyString_Size(argv[1]) == 1)) ? 1 : 0;
            }
            if (_v) {
                return _wrap_indexOf__SWIG_0(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_indexOf__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'indexOf'");
    return NULL;
}


static PyObject *_wrap_LowerCase(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:LowerCase",&arg1)) goto fail;
    result = (pstr)LowerCase(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UpperCase(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:UpperCase",&arg1)) goto fail;
    result = (pstr)UpperCase(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    int arg3 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ssi:GetString",&arg1,&arg2,&arg3)) goto fail;
    GetString(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetStrTer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ssiii:GetStrTer",&arg1,&arg2,&arg3,&arg4,&arg5)) goto fail;
    GetStrTer(arg1,arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_strcpy_n(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    int arg3 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ssi:strcpy_n",&arg1,&arg2,&arg3)) goto fail;
    strcpy_n(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_strcpy_n1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    int arg3 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ssi:strcpy_n1",&arg1,&arg2,&arg3)) goto fail;
    strcpy_n1(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_strcpy_nr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    int arg3 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ssi:strcpy_nr",&arg1,&arg2,&arg3)) goto fail;
    strcpy_nr(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_strcpy_ns(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    int arg3 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ssi:strcpy_ns",&arg1,&arg2,&arg3)) goto fail;
    strcpy_ns(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_strcpy_cs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"ss:strcpy_cs",&arg1,&arg2)) goto fail;
    result = (pstr)strcpy_cs(arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_strcpy_ncs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    int arg3 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"ssi:strcpy_ncs",&arg1,&arg2,&arg3)) goto fail;
    result = (pstr)strcpy_ncs(arg1,arg2,arg3);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_strcpy_css(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"ss:strcpy_css",&arg1,&arg2)) goto fail;
    result = (pstr)strcpy_css(arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_strcpy_ncss(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    int arg3 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"ssi:strcpy_ncss",&arg1,&arg2,&arg3)) goto fail;
    result = (pstr)strcpy_ncss(arg1,arg2,arg3);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_strcpy_n0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    int arg3 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"ssi:strcpy_n0",&arg1,&arg2,&arg3)) goto fail;
    result = (pstr)strcpy_n0(arg1,arg2,arg3);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_strlen_des(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:strlen_des",&arg1)) goto fail;
    result = (int)strlen_des(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_strcpy_des(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"ss:strcpy_des",&arg1,&arg2)) goto fail;
    result = (pstr)strcpy_des(arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_strcat_des(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"ss:strcat_des",&arg1,&arg2)) goto fail;
    result = (pstr)strcat_des(arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PadSpaces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int arg2 ;
    
    if(!PyArg_ParseTuple(args,(char *)"si:PadSpaces",&arg1,&arg2)) goto fail;
    PadSpaces(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CutSpaces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int arg2 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"si:CutSpaces",&arg1,&arg2)) goto fail;
    result = (pstr)CutSpaces(arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DelSpaces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    char arg2 = (char) ' ' ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"s|c:DelSpaces",&arg1,&arg2)) goto fail;
    result = (pstr)DelSpaces(arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EnforceSpaces(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:EnforceSpaces",&arg1)) goto fail;
    result = (pstr)EnforceSpaces(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_int2UniBin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    byte *arg2 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iO:int2UniBin",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    int2UniBin(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_short2UniBin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    short arg1 ;
    byte *arg2 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"hO:short2UniBin",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    short2UniBin(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_long2UniBin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    long arg1 ;
    byte *arg2 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"lO:long2UniBin",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    long2UniBin(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_word2UniBin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    word arg1 ;
    byte *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:word2UniBin",&obj0,&obj1)) goto fail;
    arg1 = (word) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    word2UniBin(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_real2UniBin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    byte *arg2 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"dO:real2UniBin",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    real2UniBin(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_float2UniBin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    byte *arg2 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"dO:float2UniBin",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    float2UniBin(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UniBin2int(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    byte *arg1 ;
    int *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:UniBin2int",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    UniBin2int(arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UniBin2short(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    byte *arg1 ;
    short *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:UniBin2short",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_short,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    UniBin2short(arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UniBin2long(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    byte *arg1 ;
    long *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:UniBin2long",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    UniBin2long(arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UniBin2word(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    byte *arg1 ;
    word *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:UniBin2word",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_word,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    UniBin2word(arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UniBin2real(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    byte *arg1 ;
    realtype *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:UniBin2real",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    UniBin2real(arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_UniBin2float(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    byte *arg1 ;
    realtype *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:UniBin2float",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    UniBin2float(arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_write__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"isO:mem_write",&arg1,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_write(arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_write__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    short arg1 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"hsO:mem_write",&arg1,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_write(arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_write__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    long arg1 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"lsO:mem_write",&arg1,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_write(arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_write__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    word arg1 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:mem_write",&obj0,&arg2,&obj2)) goto fail;
    arg1 = (word) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_write(arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_write__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"dsO:mem_write",&arg1,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_write(arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_write__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int arg2 ;
    pstr arg3 ;
    int *arg4 = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sisO:mem_write",&arg1,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_write(arg1,arg2,arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_write__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ssO:mem_write",&arg1,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_write(arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_write__SWIG_7(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Boolean arg1 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:mem_write",&obj0,&arg2,&obj2)) goto fail;
    arg1 = (Boolean) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_write(arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_write(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_write__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_write__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_write__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_write__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_write__SWIG_7(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_write__SWIG_4(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_write__SWIG_6(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_mem_write__SWIG_5(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'mem_write'");
    return NULL;
}


static PyObject *_wrap_mem_read__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int *arg1 = 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:mem_read",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_read(*arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_read__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    short *arg1 = 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:mem_read",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_short,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_read(*arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_read__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    long *arg1 = 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:mem_read",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_read(*arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_read__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    word *arg1 = 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:mem_read",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_word,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_read(*arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_read__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype *arg1 = 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:mem_read",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_read(*arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_read__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int arg2 ;
    pstr arg3 ;
    int *arg4 = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sisO:mem_read",&arg1,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_read(arg1,arg2,arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_read__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr *arg1 = 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:mem_read",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_read(*arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_read__SWIG_7(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Boolean *arg1 = 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:mem_read",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Boolean,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    mem_read(*arg1,arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_mem_read(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_read__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_short, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_read__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_long, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_read__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_word, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_read__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_realtype, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_read__SWIG_4(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_read__SWIG_6(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Boolean, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_mem_read__SWIG_7(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_mem_read__SWIG_5(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'mem_read'");
    return NULL;
}


static PyObject *_wrap_GetMachineID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)":GetMachineID")) goto fail;
    result = (int)GetMachineID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMachineName__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)":GetMachineName")) goto fail;
    result = (pstr)GetMachineName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMachineName__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:GetMachineName",&arg1)) goto fail;
    result = (pstr)GetMachineName(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMachineName(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_GetMachineName__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            return _wrap_GetMachineName__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'GetMachineName'");
    return NULL;
}


static PyObject *_wrap_GetTorsion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    rvector arg1 = (rvector) 0 ;
    rvector arg2 = (rvector) 0 ;
    rvector arg3 = (rvector) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:GetTorsion",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype)GetTorsion(arg1,arg2,arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetAngle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    rvector arg1 = (rvector) 0 ;
    rvector arg2 = (rvector) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:GetAngle",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype)GetAngle(arg1,arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Combinations(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"ii:Combinations",&arg1,&arg2)) goto fail;
    result = (realtype)Combinations(arg1,arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_log1mx(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"d:log1mx",&arg1)) goto fail;
    result = (realtype)log1mx(arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_expc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"d:expc",&arg1)) goto fail;
    result = (realtype)expc(arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_expc1mx(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype arg1 ;
    realtype arg2 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"dd:expc1mx",&arg1,&arg2)) goto fail;
    result = (realtype)expc1mx(arg1,arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Jacobi(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    rmatrix arg2 = (rmatrix) 0 ;
    rmatrix arg3 = (rmatrix) 0 ;
    rvector arg4 = (rvector) 0 ;
    rvector arg5 = (rvector) 0 ;
    int *arg6 = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iOOOOO:Jacobi",&arg1,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    Jacobi(arg1,arg2,arg3,arg4,arg5,*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PbCholDecomp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    rvector arg2 = (rvector) 0 ;
    realtype arg3 ;
    realtype arg4 ;
    rmatrix arg5 = (rmatrix) 0 ;
    realtype *arg6 = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iOddOO:PbCholDecomp",&arg1,&obj1,&arg3,&arg4,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    PbCholDecomp(arg1,arg2,arg3,arg4,arg5,*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LSolve(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    rmatrix arg2 = (rmatrix) 0 ;
    rvector arg3 = (rvector) 0 ;
    rvector arg4 = (rvector) 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iOOO:LSolve",&arg1,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    LSolve(arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LTSolve(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    rmatrix arg2 = (rmatrix) 0 ;
    rvector arg3 = (rvector) 0 ;
    rvector arg4 = (rvector) 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iOOO:LTSolve",&arg1,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    LTSolve(arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ChSolve(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    rmatrix arg2 = (rmatrix) 0 ;
    rvector arg3 = (rvector) 0 ;
    rvector arg4 = (rvector) 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iOOO:ChSolve",&arg1,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    ChSolve(arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FastInverse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    rmatrix arg2 = (rmatrix) 0 ;
    ivector arg3 = (ivector) 0 ;
    int *arg4 = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iOOO:FastInverse",&arg1,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    FastInverse(arg1,arg2,arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SVD(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int arg3 ;
    rmatrix arg4 = (rmatrix) 0 ;
    rmatrix arg5 = (rmatrix) 0 ;
    rmatrix arg6 = (rmatrix) 0 ;
    rvector arg7 = (rvector) 0 ;
    rvector arg8 = (rvector) 0 ;
    Boolean arg9 ;
    Boolean arg10 ;
    int *arg11 = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    PyObject * obj7  = 0 ;
    PyObject * obj8  = 0 ;
    PyObject * obj9  = 0 ;
    PyObject * obj10  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iiiOOOOOOOO:SVD",&arg1,&arg2,&arg3,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) goto fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj7,(void **) &arg8, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg9 = (Boolean) PyInt_AsLong(obj8);
    if (PyErr_Occurred()) SWIG_fail;
    arg10 = (Boolean) PyInt_AsLong(obj9);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj10,(void **) &arg11, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg11 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    SVD(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,*arg11);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OrderSVD(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    rmatrix arg3 = (rmatrix) 0 ;
    rmatrix arg4 = (rmatrix) 0 ;
    rvector arg5 = (rvector) 0 ;
    Boolean arg6 ;
    Boolean arg7 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iiOOOOO:OrderSVD",&arg1,&arg2,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg6 = (Boolean) PyInt_AsLong(obj5);
    if (PyErr_Occurred()) SWIG_fail;
    arg7 = (Boolean) PyInt_AsLong(obj6);
    if (PyErr_Occurred()) SWIG_fail;
    OrderSVD(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetFPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int arg2 = (int) 1 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"s|i:GetFPath",&arg1,&arg2)) goto fail;
    result = (pstr)GetFPath(arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetFName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int arg2 = (int) 1 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"s|i:GetFName",&arg1,&arg2)) goto fail;
    result = (pstr)GetFName(arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetFExt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:GetFExt",&arg1)) goto fail;
    result = (pstr)GetFExt(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ChangeExt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    int arg3 = (int) 1 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"ss|i:ChangeExt",&arg1,&arg2,&arg3)) goto fail;
    result = (pstr)ChangeExt(arg1,arg2,arg3);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FileError(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:FileError",&arg1)) goto fail;
    result = (pstr)FileError(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RemoveDelimiters(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int arg2 ;
    
    if(!PyArg_ParseTuple(args,(char *)"si:RemoveDelimiters",&arg1,&arg2)) goto fail;
    RemoveDelimiters(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PickOutNumber(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    int arg3 ;
    int *arg4 = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ssiO:PickOutNumber",&arg1,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    PickOutNumber(arg1,arg2,arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    word arg1 = (word) 4096 ;
    CFile *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"|O:new_CFile",&obj0)) goto fail;
    if (obj0) {
        arg1 = (word) PyInt_AsLong(obj0);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (CFile *)new CFile(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CFile, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_CFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_assign(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    Boolean arg3 = (Boolean) Boolean(0) ;
    Boolean arg4 = (Boolean) Boolean(0) ;
    byte arg5 = (byte) 0x00 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|OOO:CFile_assign",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (Boolean) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = (Boolean) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (byte) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->assign(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_FileName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_FileName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->FileName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    Boolean arg2 = (Boolean) Boolean(0) ;
    int arg3 = (int) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|Oi:CFile_reset",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = (Boolean) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)(arg1)->reset(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_erase(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_erase",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->erase();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_exists(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_exists",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->exists();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_parse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CFile_parse",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->parse(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_rename(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CFile_rename",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->rename(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_rewrite(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_rewrite",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->rewrite();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_append(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_append",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->append();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_isOpen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_isOpen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isOpen();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_Position(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    long result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_Position",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)(arg1)->Position();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_FileLength(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    long result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_FileLength",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)(arg1)->FileLength();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_seek(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    long arg2 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ol:CFile_seek",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->seek(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_FileEnd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_FileEnd",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->FileEnd();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_Success(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_Success",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->Success();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_SetSuccess(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_SetSuccess",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSuccess();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_shut(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_shut",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->shut();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    void *arg2 = (void *) 0 ;
    word arg3 ;
    word result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CFile_ReadFile",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (word)(arg1)->ReadFile(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateRead(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr *arg2 = 0 ;
    word result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_CreateRead",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (word)(arg1)->CreateRead(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    void *arg2 = (void *) 0 ;
    word arg3 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CFile_WriteFile",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (Boolean)(arg1)->WriteFile(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateWrite(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    Boolean result;
    char temp2[1024+1] ;
    PyObject * obj0  = 0 ;
    
    {
        arg2 = (pstr) temp2;
    }
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_CreateWrite",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->CreateWrite(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o;
        arg2[1024] = 0;
        o = PyString_FromString(arg2);
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    realtype *arg2 = (realtype *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_WriteReal",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteReal(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    realtype *arg2 = (realtype *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_WriteFloat",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteFloat(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteInt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    int *arg2 = (int *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_WriteInt",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteInt(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteShort(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    short *arg2 = (short *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_WriteShort",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_short,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteShort(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteLong(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    long *arg2 = (long *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_WriteLong",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteLong(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    Boolean *arg2 = (Boolean *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_WriteBool",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Boolean,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteBool(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteByte(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    byte *arg2 = (byte *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_WriteByte",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteByte(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteWord(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    word *arg2 = (word *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_WriteWord",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_word,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteWord(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    realtype *arg2 = (realtype *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_ReadReal",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->ReadReal(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    realtype *arg2 = (realtype *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_ReadFloat",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->ReadFloat(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadInt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    int *arg2 = (int *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_ReadInt",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->ReadInt(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadShort(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    short *arg2 = (short *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_ReadShort",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_short,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->ReadShort(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadLong(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    long *arg2 = (long *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_ReadLong",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->ReadLong(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    Boolean *arg2 = (Boolean *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_ReadBool",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Boolean,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->ReadBool(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadByte(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    byte *arg2 = (byte *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_ReadByte",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->ReadByte(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadWord(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    word *arg2 = (word *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_ReadWord",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_word,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->ReadWord(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_AddReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    realtype *arg2 = (realtype *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_AddReal",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->AddReal(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_AddFloat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    realtype *arg2 = (realtype *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_AddFloat",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->AddFloat(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_AddInt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    int *arg2 = (int *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_AddInt",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->AddInt(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_AddShort(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    short *arg2 = (short *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_AddShort",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_short,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->AddShort(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_AddLong(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    long *arg2 = (long *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_AddLong",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->AddLong(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_AddByte(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    byte *arg2 = (byte *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_AddByte",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_byte,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->AddByte(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_AddWord(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    word *arg2 = (word *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CFile_AddWord",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_word,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->AddWord(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteVector__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    rvector arg2 = (rvector) 0 ;
    int arg3 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:CFile_WriteVector",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteVector(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteVector__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    ivector arg2 = (ivector) 0 ;
    int arg3 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:CFile_WriteVector",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteVector(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteVector__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    lvector arg2 = (lvector) 0 ;
    int arg3 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:CFile_WriteVector",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_lvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteVector(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteVector__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    bvector arg2 = (bvector) 0 ;
    int arg3 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:CFile_WriteVector",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_bvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteVector(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteVector(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_rvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_WriteVector__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_ivector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_WriteVector__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_lvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_WriteVector__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_bvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_WriteVector__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CFile_WriteVector'");
    return NULL;
}


static PyObject *_wrap_CFile_ReadVector__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    rvector arg2 = (rvector) 0 ;
    int arg3 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:CFile_ReadVector",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->ReadVector(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadVector__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    ivector arg2 = (ivector) 0 ;
    int arg3 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:CFile_ReadVector",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->ReadVector(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadVector__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    lvector arg2 = (lvector) 0 ;
    int arg3 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:CFile_ReadVector",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_lvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->ReadVector(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadVector__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    bvector arg2 = (bvector) 0 ;
    int arg3 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:CFile_ReadVector",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_bvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->ReadVector(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadVector(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_rvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_ReadVector__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_ivector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_ReadVector__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_lvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_ReadVector__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_bvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_ReadVector__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CFile_ReadVector'");
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadVector__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    rvector *arg2 = 0 ;
    int *arg3 = 0 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:CFile_CreateReadVector",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->CreateReadVector(*arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadVector__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    ivector *arg2 = 0 ;
    int *arg3 = 0 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:CFile_CreateReadVector",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->CreateReadVector(*arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadVector__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    lvector *arg2 = 0 ;
    int *arg3 = 0 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:CFile_CreateReadVector",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_lvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->CreateReadVector(*arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadVector__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    bvector *arg2 = 0 ;
    int *arg3 = 0 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:CFile_CreateReadVector",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->CreateReadVector(*arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadVector__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    rvector *arg2 = 0 ;
    int arg3 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CFile_CreateReadVector",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->CreateReadVector(*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadVector__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    ivector *arg2 = 0 ;
    int arg3 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CFile_CreateReadVector",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->CreateReadVector(*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadVector__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    lvector *arg2 = 0 ;
    int arg3 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CFile_CreateReadVector",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_lvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->CreateReadVector(*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadVector__SWIG_7(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    bvector *arg2 = 0 ;
    int arg3 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CFile_CreateReadVector",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->CreateReadVector(*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadVector(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_rvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CFile_CreateReadVector__SWIG_4(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_ivector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CFile_CreateReadVector__SWIG_5(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_lvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CFile_CreateReadVector__SWIG_6(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_bvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CFile_CreateReadVector__SWIG_7(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_rvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_CreateReadVector__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_ivector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_CreateReadVector__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_lvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_CreateReadVector__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_bvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_CreateReadVector__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CFile_CreateReadVector'");
    return NULL;
}


static PyObject *_wrap_CFile_WriteMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    rmatrix *arg2 = 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiii:CFile_WriteMatrix",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->WriteMatrix(*arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadMatrix__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    rmatrix *arg2 = 0 ;
    int arg3 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:CFile_CreateReadMatrix",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->CreateReadMatrix(*arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadMatrix__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    rmatrix *arg2 = 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int arg5 ;
    int arg6 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOii:CFile_CreateReadMatrix",&obj0,&obj1,&obj2,&obj3,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_rmatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->CreateReadMatrix(*arg2,*arg3,*arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadMatrix(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_rmatrix, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_CreateReadMatrix__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_rmatrix, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_CFile_CreateReadMatrix__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CFile_CreateReadMatrix'");
    return NULL;
}


static PyObject *_wrap_CFile_Write__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    Boolean result;
    char temp2[1024+1] ;
    PyObject * obj0  = 0 ;
    
    {
        arg2 = (pstr) temp2;
    }
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_Write",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->Write(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o;
        arg2[1024] = 0;
        o = PyString_FromString(arg2);
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_Write__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    realtype arg2 ;
    int arg3 = (int) 10 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od|i:CFile_Write",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->Write(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_Write__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    int arg2 ;
    int arg3 = (int) 5 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi|i:CFile_Write",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->Write(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_Write(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_CFile_Write__SWIG_0(self,args);
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_CFile_Write__SWIG_2(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CFile_Write__SWIG_2(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_CFile_Write__SWIG_1(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CFile_Write__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CFile_Write'");
    return NULL;
}


static PyObject *_wrap_CFile_WriteLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    Boolean result;
    char temp2[1024+1] ;
    PyObject * obj0  = 0 ;
    
    {
        arg2 = (pstr) temp2;
    }
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_WriteLine",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteLine(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o;
        arg2[1024] = 0;
        o = PyString_FromString(arg2);
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_LF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_LF",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->LF();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    word arg3 = (word) 255 ;
    word result;
    char temp2[1024+1] ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    {
        arg2 = (pstr) temp2;
    }
    if(!PyArg_ParseTuple(args,(char *)"O|O:CFile_ReadLine",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg3 = (word) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (word)(arg1)->ReadLine(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o;
        arg2[1024] = 0;
        o = PyString_FromString(arg2);
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadNonBlankLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    word arg3 = (word) 255 ;
    word result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CFile_ReadNonBlankLine",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (word) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (word)(arg1)->ReadNonBlankLine(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteDataLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    realtype arg2 ;
    realtype arg3 ;
    int arg4 = (int) 10 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Odd|i:CFile_WriteDataLine",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteDataLine(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteParameter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    realtype arg3 ;
    int arg4 = (int) 40 ;
    int arg5 = (int) 10 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osd|ii:CFile_WriteParameter",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteParameter(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteParameters(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    int arg3 ;
    rvector arg4 = (rvector) 0 ;
    int arg5 = (int) 40 ;
    int arg6 = (int) 10 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsiO|ii:CFile_WriteParameters",&obj0,&arg2,&arg3,&obj3,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteParameters(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadParameter__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    realtype *arg3 = 0 ;
    int arg4 = (int) 40 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:CFile_ReadParameter",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->ReadParameter(arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadParameter__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    int arg4 = (int) 40 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:CFile_ReadParameter",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->ReadParameter(arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadParameter(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_realtype, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_CFile_ReadParameter__SWIG_0(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_ReadParameter__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_CFile_ReadParameter__SWIG_1(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CFile_ReadParameter__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CFile_ReadParameter'");
    return NULL;
}


static PyObject *_wrap_CFile_ReadParameters(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    rvector arg4 = (rvector) 0 ;
    int arg5 = (int) 255 ;
    int arg6 = (int) 40 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOO|ii:CFile_ReadParameters",&obj0,&arg2,&obj2,&obj3,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->ReadParameters(arg2,*arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteColumns__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    rvector arg2 = (rvector) 0 ;
    rvector arg3 = (rvector) 0 ;
    rvector arg4 = (rvector) 0 ;
    int arg5 ;
    int arg6 ;
    int arg7 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOiii:CFile_WriteColumns",&obj0,&obj1,&obj2,&obj3,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteColumns(arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteColumns__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    rvector arg2 = (rvector) 0 ;
    rvector arg3 = (rvector) 0 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOiii:CFile_WriteColumns",&obj0,&obj1,&obj2,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->WriteColumns(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_WriteColumns(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[8];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 7); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_rvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_rvector, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_CFile_WriteColumns__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_rvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_rvector, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_rvector, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_CFile_WriteColumns__SWIG_0(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CFile_WriteColumns'");
    return NULL;
}


static PyObject *_wrap_CFile_ReadColumns__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    int arg2 ;
    rvector arg3 = (rvector) 0 ;
    rvector arg4 = (rvector) 0 ;
    rvector arg5 = (rvector) 0 ;
    int arg6 ;
    int arg7 ;
    int arg8 ;
    int arg9 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOOOiiii:CFile_ReadColumns",&obj0,&arg2,&obj2,&obj3,&obj4,&arg6,&arg7,&arg8,&arg9)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ReadColumns(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadColumns__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    int arg2 ;
    rvector arg3 = (rvector) 0 ;
    rvector arg4 = (rvector) 0 ;
    int arg5 ;
    int arg6 ;
    int arg7 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOOiii:CFile_ReadColumns",&obj0,&arg2,&obj2,&obj3,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ReadColumns(arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_ReadColumns(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[10];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 9); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_rvector, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_rvector, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_CFile_ReadColumns__SWIG_1(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 9) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_rvector, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_rvector, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_rvector, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    {
                                        _v = (PyInt_Check(argv[7]) || PyLong_Check(argv[7])) ? 1 : 0;
                                    }
                                    if (_v) {
                                        {
                                            _v = (PyInt_Check(argv[8]) || PyLong_Check(argv[8])) ? 1 : 0;
                                        }
                                        if (_v) {
                                            return _wrap_CFile_ReadColumns__SWIG_0(self,args);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CFile_ReadColumns'");
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadColumns__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    rvector *arg2 = 0 ;
    rvector *arg3 = 0 ;
    rvector *arg4 = 0 ;
    int arg5 ;
    int arg6 ;
    int arg7 ;
    int arg8 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOiiii:CFile_CreateReadColumns",&obj0,&obj1,&obj2,&obj3,&arg5,&arg6,&arg7,&arg8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->CreateReadColumns(*arg2,*arg3,*arg4,arg5,arg6,arg7,arg8);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadColumns__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    rvector *arg2 = 0 ;
    rvector *arg3 = 0 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOiii:CFile_CreateReadColumns",&obj0,&obj1,&obj2,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->CreateReadColumns(*arg2,*arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_CreateReadColumns(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[9];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 8); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_rvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_rvector, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_CFile_CreateReadColumns__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 8) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_rvector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_rvector, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_rvector, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    {
                                        _v = (PyInt_Check(argv[7]) || PyLong_Check(argv[7])) ? 1 : 0;
                                    }
                                    if (_v) {
                                        return _wrap_CFile_CreateReadColumns__SWIG_0(self,args);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CFile_CreateReadColumns'");
    return NULL;
}


static PyObject *_wrap_CFile_GetNumber(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    pstr arg2 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CFile_GetNumber",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype)(arg1)->GetNumber(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CFile_GetHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CFile *arg1 = (CFile *) 0 ;
    FILE *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CFile_GetHandle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (FILE *)(arg1)->GetHandle();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_FILE, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CFile_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CFile, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_SetGZIPPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    
    if(!PyArg_ParseTuple(args,(char *)"s:SetGZIPPath",&arg1)) goto fail;
    SetGZIPPath(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FileExists(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    PCFile arg2 = (PCFile) NULL ;
    Boolean result;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"s|O:FileExists",&arg1,&obj1)) goto fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (Boolean)FileExists(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CStream__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStream *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CStream")) goto fail;
    result = (CStream *)new CStream();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CStream, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CStream__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CStream *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CStream",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CStream *)new CStream(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CStream, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CStream(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CStream__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CStream__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CStream'");
    return NULL;
}


static PyObject *_wrap_delete_CStream(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStream *arg1 = (CStream *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CStream",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CStream_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CStream, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CSymOp__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOp *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSymOp")) goto fail;
    result = (CSymOp *)new CSymOp();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSymOp, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSymOp__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CSymOp *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSymOp",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CSymOp *)new CSymOp(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSymOp, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSymOp(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CSymOp__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSymOp__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CSymOp'");
    return NULL;
}


static PyObject *_wrap_delete_CSymOp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOp *arg1 = (CSymOp *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSymOp",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOp_SetSymOp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOp *arg1 = (CSymOp *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSymOp_SetSymOp",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->SetSymOp(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOp_GetSymOp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOp *arg1 = (CSymOp *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSymOp_GetSymOp",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetSymOp();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOp_Transform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOp *arg1 = (CSymOp *) 0 ;
    realtype *arg2 = 0 ;
    realtype *arg3 = 0 ;
    realtype *arg4 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:CSymOp_Transform",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Transform(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOp_GetTMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOp *arg1 = (CSymOp *) 0 ;
    mat44 *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSymOp_GetTMatrix",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetTMatrix(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOp_SetTMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOp *arg1 = (CSymOp *) 0 ;
    mat44 *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSymOp_SetTMatrix",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetTMatrix(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOp_CompileOpTitle__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOp *arg1 = (CSymOp *) 0 ;
    pstr arg2 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSymOp_CompileOpTitle",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->CompileOpTitle(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOp_CompileOpTitle__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOp *arg1 = (CSymOp *) 0 ;
    pstr arg2 ;
    vect4 *arg3 ;
    Boolean arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOO:CSymOp_CompileOpTitle",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_vect4,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = (Boolean) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    result = (Boolean)(arg1)->CompileOpTitle(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOp_CompileOpTitle(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSymOp, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CSymOp_CompileOpTitle__SWIG_0(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSymOp, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_vect4, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CSymOp_CompileOpTitle__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CSymOp_CompileOpTitle'");
    return NULL;
}


static PyObject *_wrap_CSymOp_Print(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOp *arg1 = (CSymOp *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSymOp_Print",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Print();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOp_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOp *arg1 = (CSymOp *) 0 ;
    PCSymOp arg2 = (PCSymOp) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSymOp_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSymOp,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSymOp_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSymOp, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CSymOps__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSymOps")) goto fail;
    result = (CSymOps *)new CSymOps();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSymOps, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSymOps__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CSymOps *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSymOps",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CSymOps *)new CSymOps(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSymOps, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSymOps(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CSymOps__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSymOps__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CSymOps'");
    return NULL;
}


static PyObject *_wrap_delete_CSymOps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *arg1 = (CSymOps *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSymOps",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOps_FreeMemory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *arg1 = (CSymOps *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSymOps_FreeMemory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FreeMemory();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOps_SetGroupSymopLib(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *arg1 = (CSymOps *) 0 ;
    pstr arg2 ;
    pstr arg3 = (pstr) (pstr)NULL ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|s:CSymOps_SetGroupSymopLib",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->SetGroupSymopLib(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOps_SetGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *arg1 = (CSymOps *) 0 ;
    pstr arg2 ;
    pstr arg3 = (pstr) (pstr)NULL ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|s:CSymOps_SetGroup",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->SetGroup(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOps_Reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *arg1 = (CSymOps *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSymOps_Reset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOps_AddSymOp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *arg1 = (CSymOps *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSymOps_AddSymOp",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddSymOp(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOps_PutGroupName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *arg1 = (CSymOps *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSymOps_PutGroupName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutGroupName(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOps_GetNofSymOps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *arg1 = (CSymOps *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSymOps_GetNofSymOps",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNofSymOps();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOps_GetSymOp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *arg1 = (CSymOps *) 0 ;
    int arg2 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSymOps_GetSymOp",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetSymOp(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOps_Transform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *arg1 = (CSymOps *) 0 ;
    realtype *arg2 = 0 ;
    realtype *arg3 = 0 ;
    realtype *arg4 = 0 ;
    int arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOi:CSymOps_Transform",&obj0,&obj1,&obj2,&obj3,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->Transform(*arg2,*arg3,*arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOps_GetTMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *arg1 = (CSymOps *) 0 ;
    mat44 *arg2 = 0 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CSymOps_GetTMatrix",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetTMatrix(*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOps_Print(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *arg1 = (CSymOps *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSymOps_Print",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Print();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSymOps_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSymOps *arg1 = (CSymOps *) 0 ;
    PCSymOps arg2 = (PCSymOps) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSymOps_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSymOps_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSymOps, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CMask__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CMask")) goto fail;
    result = (CMask *)new CMask();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMask, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMask__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CMask *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CMask",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CMask *)new CMask(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMask, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMask(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CMask__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CMask__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CMask'");
    return NULL;
}


static PyObject *_wrap_delete_CMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *arg1 = (CMask *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMask",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMask_SetMaskBit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *arg1 = (CMask *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMask_SetMaskBit",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaskBit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMask_NewMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *arg1 = (CMask *) 0 ;
    PPCMask arg2 ;
    int arg3 ;
    PPCMask *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CMask_NewMask",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCMask,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->NewMask(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMask_CopyMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *arg1 = (CMask *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMask_CopyMask",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CopyMask(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMask_SetMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *arg1 = (CMask *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMask_SetMask",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMask(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMask_RemoveMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *arg1 = (CMask *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMask_RemoveMask",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveMask(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMask_SelMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *arg1 = (CMask *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMask_SelMask",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SelMask(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMask_XadMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *arg1 = (CMask *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMask_XadMask",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->XadMask(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMask_ClearMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *arg1 = (CMask *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMask_ClearMask",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ClearMask();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMask_NegMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *arg1 = (CMask *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMask_NegMask",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->NegMask();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMask_CheckMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *arg1 = (CMask *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMask_CheckMask",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->CheckMask(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMask_isMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *arg1 = (CMask *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMask_isMask",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isMask();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMask_Print(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMask *arg1 = (CMask *) 0 ;
    pstr arg2 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMask_Print",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->Print(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CMask_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMask, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_Date9to11(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ss:Date9to11",&arg1,&arg2)) goto fail;
    Date9to11(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Date11to9(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ss:Date11to9",&arg1,&arg2)) goto fail;
    Date11to9(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Date9toCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ss:Date9toCIF",&arg1,&arg2)) goto fail;
    Date9toCIF(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Date11toCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ss:Date11toCIF",&arg1,&arg2)) goto fail;
    Date11toCIF(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateCIFto9(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ss:DateCIFto9",&arg1,&arg2)) goto fail;
    DateCIFto9(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateCIFto11(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ss:DateCIFto11",&arg1,&arg2)) goto fail;
    DateCIFto11(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetInteger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int *arg1 = 0 ;
    pstr arg2 ;
    int arg3 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:GetInteger",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)GetInteger(*arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype *arg1 = 0 ;
    pstr arg2 ;
    int arg3 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:GetReal",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)GetReal(*arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetIntIns(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int *arg1 = 0 ;
    pstr arg2 ;
    pstr arg3 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossi:GetIntIns",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)GetIntIns(*arg1,arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PutInteger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int arg2 ;
    int arg3 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sii:PutInteger",&arg1,&arg2,&arg3)) goto fail;
    PutInteger(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PutRealF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    realtype arg2 ;
    int arg3 ;
    int arg4 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sdii:PutRealF",&arg1,&arg2,&arg3,&arg4)) goto fail;
    PutRealF(arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PutIntIns(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int arg2 ;
    int arg3 ;
    pstr arg4 ;
    
    if(!PyArg_ParseTuple(args,(char *)"siis:PutIntIns",&arg1,&arg2,&arg3,&arg4)) goto fail;
    PutIntIns(arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CIFGetInteger__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int *arg1 = 0 ;
    PCMMCIFStruct arg2 = (PCMMCIFStruct) 0 ;
    pstr arg3 ;
    Boolean arg4 = (Boolean) Boolean(1) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs|O:CIFGetInteger",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        arg4 = (Boolean) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)CIFGetInteger(*arg1,arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CIFGetReal__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype *arg1 = 0 ;
    PCMMCIFStruct arg2 = (PCMMCIFStruct) 0 ;
    pstr arg3 ;
    Boolean arg4 = (Boolean) Boolean(1) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs|O:CIFGetReal",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        arg4 = (Boolean) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)CIFGetReal(*arg1,arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CIFGetString__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    PCMMCIFStruct arg2 = (PCMMCIFStruct) 0 ;
    pstr arg3 ;
    int arg4 ;
    pstr arg5 ;
    Boolean arg6 = (Boolean) Boolean(1) ;
    int result;
    PyObject * obj1  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sOsis|O:CIFGetString",&arg1,&obj1,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj5) {
        arg6 = (Boolean) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)CIFGetString(arg1,arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CIFGetInteger__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int *arg1 = 0 ;
    PCMMCIFLoop arg2 = (PCMMCIFLoop) 0 ;
    pstr arg3 ;
    int *arg4 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOsO:CIFGetInteger",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)CIFGetInteger(*arg1,arg2,arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CIFGetInteger(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCMMCIFStruct, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_CIFGetInteger__SWIG_0(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CIFGetInteger__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCMMCIFLoop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CIFGetInteger__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CIFGetInteger'");
    return NULL;
}


static PyObject *_wrap_CIFGetInteger1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int *arg1 = 0 ;
    PCMMCIFLoop arg2 = (PCMMCIFLoop) 0 ;
    pstr arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOsi:CIFGetInteger1",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)CIFGetInteger1(*arg1,arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CIFGetReal__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype *arg1 = 0 ;
    PCMMCIFLoop arg2 = (PCMMCIFLoop) 0 ;
    pstr arg3 ;
    int *arg4 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOsO:CIFGetReal",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)CIFGetReal(*arg1,arg2,arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CIFGetReal(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_realtype, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCMMCIFStruct, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_CIFGetReal__SWIG_0(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CIFGetReal__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_realtype, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCMMCIFLoop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CIFGetReal__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CIFGetReal'");
    return NULL;
}


static PyObject *_wrap_CIFGetReal1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    realtype *arg1 = 0 ;
    PCMMCIFLoop arg2 = (PCMMCIFLoop) 0 ;
    pstr arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOsi:CIFGetReal1",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)CIFGetReal1(*arg1,arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CIFGetString__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    PCMMCIFLoop arg2 = (PCMMCIFLoop) 0 ;
    pstr arg3 ;
    int arg4 ;
    int arg5 ;
    pstr arg6 ;
    int result;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sOsiis:CIFGetString",&arg1,&obj1,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)CIFGetString(arg1,arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CIFGetString(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 5) && (argc <= 6)) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCMMCIFStruct, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = PyString_Check(argv[4]) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_CIFGetString__SWIG_0(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_CIFGetString__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCMMCIFLoop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = PyString_Check(argv[5]) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_CIFGetString__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CIFGetString'");
    return NULL;
}


static PyObject *_wrap_Mat4Inverse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat44 *arg1 = 0 ;
    mat44 *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Mat4Inverse",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    Mat4Inverse(*arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Mat4Init(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat44 *arg1 = 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Mat4Init",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    Mat4Init(*arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Mat3Init(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat33 *arg1 = 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Mat3Init",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat33,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    Mat3Init(*arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Mat4Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat44 *arg1 = 0 ;
    mat44 *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Mat4Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    Mat4Copy(*arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Mat3Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat33 *arg1 = 0 ;
    mat33 *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Mat3Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat33,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat33,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    Mat3Copy(*arg1,*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TransformX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat44 *arg1 = 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oddd:TransformX",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (realtype)TransformX(*arg1,arg2,arg3,arg4);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TransformY(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat44 *arg1 = 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oddd:TransformY",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (realtype)TransformY(*arg1,arg2,arg3,arg4);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_TransformZ(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat44 *arg1 = 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oddd:TransformZ",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (realtype)TransformZ(*arg1,arg2,arg3,arg4);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static int _wrap_CIFErrorLocation_set(PyObject *_val) {
    {
        char *temp = (char *) PyString_AsString(_val);
        if (PyErr_Occurred()) {
            PyErr_SetString(PyExc_TypeError, "C variable 'CIFErrorLocation (char *)'");
            return 1;
        }
        strncpy(CIFErrorLocation,temp,200);
    }
    return 0;
}


static PyObject *_wrap_CIFErrorLocation_get() {
    PyObject *pyobj;
    
    pyobj = PyString_FromString(CIFErrorLocation);
    return pyobj;
}


static PyObject *_wrap_GetErrorDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:GetErrorDescription",&arg1)) goto fail;
    result = (pstr)GetErrorDescription(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CContainerClass__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContainerClass *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CContainerClass")) goto fail;
    result = (CContainerClass *)new CContainerClass();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CContainerClass, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CContainerClass__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CContainerClass *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CContainerClass",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CContainerClass *)new CContainerClass(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CContainerClass, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CContainerClass(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CContainerClass__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CContainerClass__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CContainerClass'");
    return NULL;
}


static PyObject *_wrap_delete_CContainerClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContainerClass *arg1 = (CContainerClass *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CContainerClass",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContainerClass_ConvertPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContainerClass *arg1 = (CContainerClass *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CContainerClass_ConvertPDBASCII",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBASCII(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContainerClass_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContainerClass *arg1 = (CContainerClass *) 0 ;
    pstr arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CContainerClass_PDBASCIIDump",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PDBASCIIDump(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContainerClass_PDBASCIIDump1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContainerClass *arg1 = (CContainerClass *) 0 ;
    CFile *arg2 = 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CContainerClass_PDBASCIIDump1",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    result = (Boolean)(arg1)->PDBASCIIDump1(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContainerClass_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContainerClass *arg1 = (CContainerClass *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CContainerClass_MakeCIF",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContainerClass_Append(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContainerClass *arg1 = (CContainerClass *) 0 ;
    PCContainerClass arg2 = (PCContainerClass) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CContainerClass_Append",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->Append(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContainerClass_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContainerClass *arg1 = (CContainerClass *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CContainerClass_GetCIF",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetCIF(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContainerClass_GetClassID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContainerClass *arg1 = (CContainerClass *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CContainerClass_GetClassID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetClassID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContainerClass_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContainerClass *arg1 = (CContainerClass *) 0 ;
    PCContainerClass arg2 = (PCContainerClass) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CContainerClass_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CContainerClass_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CContainerClass, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CContString_Line_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContString *arg1 = (CContString *) 0 ;
    pstr arg2 ;
    char temp2[1024+1] ;
    PyObject * obj0  = 0 ;
    
    {
        arg2 = (pstr) temp2;
    }
    if(!PyArg_ParseTuple(args,(char *)"O:CContString_Line_set",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->Line) delete [] arg1->Line;
        arg1->Line = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->Line,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o;
        arg2[1024] = 0;
        o = PyString_FromString(arg2);
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContString_Line_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContString *arg1 = (CContString *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CContString_Line_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->Line);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CContString__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContString *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CContString")) goto fail;
    result = (CContString *)new CContString();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CContString, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CContString__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    CContString *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:new_CContString",&arg1)) goto fail;
    result = (CContString *)new CContString(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CContString, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CContString__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CContString *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CContString",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CContString *)new CContString(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CContString, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CContString(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CContString__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CContString__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_CContString__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CContString'");
    return NULL;
}


static PyObject *_wrap_delete_CContString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContString *arg1 = (CContString *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CContString",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContString_ConvertPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContString *arg1 = (CContString *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CContString_ConvertPDBASCII",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBASCII(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContString_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContString *arg1 = (CContString *) 0 ;
    pstr arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CContString_PDBASCIIDump",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PDBASCIIDump(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContString_PDBASCIIDump1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContString *arg1 = (CContString *) 0 ;
    CFile *arg2 = 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CContString_PDBASCIIDump1",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    result = (Boolean)(arg1)->PDBASCIIDump1(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContString_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContString *arg1 = (CContString *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CContString_MakeCIF",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContString_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContString *arg1 = (CContString *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CContString_GetCIF",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetCIF(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContString_Append(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContString *arg1 = (CContString *) 0 ;
    PCContainerClass arg2 = (PCContainerClass) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CContString_Append",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->Append(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContString_GetClassID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContString *arg1 = (CContString *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CContString_GetClassID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetClassID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CContString_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContString *arg1 = (CContString *) 0 ;
    PCContainerClass arg2 = (PCContainerClass) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CContString_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContString,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CContString_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CContString, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CClassContainer__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CClassContainer *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CClassContainer")) goto fail;
    result = (CClassContainer *)new CClassContainer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CClassContainer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CClassContainer__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CClassContainer *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CClassContainer",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CClassContainer *)new CClassContainer(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CClassContainer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CClassContainer(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CClassContainer__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CClassContainer__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CClassContainer'");
    return NULL;
}


static PyObject *_wrap_delete_CClassContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CClassContainer *arg1 = (CClassContainer *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CClassContainer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CClassContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CClassContainer_FreeContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CClassContainer *arg1 = (CClassContainer *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CClassContainer_FreeContainer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CClassContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FreeContainer();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CClassContainer_AddData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CClassContainer *arg1 = (CClassContainer *) 0 ;
    PCContainerClass arg2 = (PCContainerClass) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CClassContainer_AddData",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CClassContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddData(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CClassContainer_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CClassContainer *arg1 = (CClassContainer *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CClassContainer_PDBASCIIDump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CClassContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->PDBASCIIDump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CClassContainer_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CClassContainer *arg1 = (CClassContainer *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CClassContainer_MakeCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CClassContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CClassContainer_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CClassContainer *arg1 = (CClassContainer *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CClassContainer_GetCIF",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CClassContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCIF(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CClassContainer_MakeContainerClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CClassContainer *arg1 = (CClassContainer *) 0 ;
    int arg2 ;
    PCContainerClass result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CClassContainer_MakeContainerClass",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CClassContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCContainerClass)(arg1)->MakeContainerClass(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCContainerClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CClassContainer_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CClassContainer *arg1 = (CClassContainer *) 0 ;
    PCClassContainer arg2 = (PCClassContainer) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CClassContainer_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CClassContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCClassContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CClassContainer_Length(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CClassContainer *arg1 = (CClassContainer *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CClassContainer_Length",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CClassContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Length();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CClassContainer_GetContainerClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CClassContainer *arg1 = (CClassContainer *) 0 ;
    int arg2 ;
    PCContainerClass result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CClassContainer_GetContainerClass",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CClassContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCContainerClass)(arg1)->GetContainerClass(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCContainerClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CClassContainer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CClassContainer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CAtomPath_modelNo_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CAtomPath_modelNo_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->modelNo = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_modelNo_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtomPath_modelNo_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->modelNo);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_chainID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CAtomPath_chainID_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->chainID,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_chainID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtomPath_chainID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->chainID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_seqNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CAtomPath_seqNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->seqNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_seqNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtomPath_seqNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->seqNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_insCode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CAtomPath_insCode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->insCode,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_insCode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtomPath_insCode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->insCode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_resName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtomPath_resName_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->resName,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_resName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtomPath_resName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->resName);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_atomName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtomPath_atomName_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->atomName,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_atomName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtomPath_atomName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->atomName);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_element_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtomPath_element_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->element,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_element_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtomPath_element_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->element);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_altLoc_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtomPath_altLoc_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->altLoc,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_altLoc_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtomPath_altLoc_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->altLoc);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_isSet_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CAtomPath_isSet_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->isSet = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_isSet_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtomPath_isSet_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->isSet);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CAtomPath__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CAtomPath")) goto fail;
    result = (CAtomPath *)new CAtomPath();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CAtomPath, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CAtomPath__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    CAtomPath *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:new_CAtomPath",&arg1)) goto fail;
    result = (CAtomPath *)new CAtomPath(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CAtomPath, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CAtomPath__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CAtomPath *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CAtomPath",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CAtomPath *)new CAtomPath(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CAtomPath, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CAtomPath(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CAtomPath__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CAtomPath__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_CAtomPath__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CAtomPath'");
    return NULL;
}


static PyObject *_wrap_delete_CAtomPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CAtomPath",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtomPath_SetPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtomPath *arg1 = (CAtomPath *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CAtomPath_SetPath",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->SetPath(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CAtomPath_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CAtomPath, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CQuickSort(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CQuickSort *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CQuickSort")) goto fail;
    result = (CQuickSort *)new CQuickSort();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CQuickSort, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_CQuickSort(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CQuickSort *arg1 = (CQuickSort *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CQuickSort",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CQuickSort,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CQuickSort_Compare(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CQuickSort *arg1 = (CQuickSort *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CQuickSort_Compare",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CQuickSort,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Compare(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CQuickSort_Swap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CQuickSort *arg1 = (CQuickSort *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CQuickSort_Swap",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CQuickSort,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Swap(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CQuickSort_Sort(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CQuickSort *arg1 = (CQuickSort *) 0 ;
    void *arg2 = (void *) 0 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CQuickSort_Sort",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CQuickSort,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Sort(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CQuickSort_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CQuickSort, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_takeWord(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr *arg1 = 0 ;
    pstr arg2 ;
    pstr arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossi:takeWord",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    takeWord(*arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ParseAtomID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    char *arg2 ;
    char *arg3 ;
    char *arg4 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sOOO:ParseAtomID",&arg1,&obj1,&obj2,&obj3)) goto fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        if (!PyString_Check(obj2)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg3 = PyString_AsString(obj2);
    }
    {
        if (!PyString_Check(obj3)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg4 = PyString_AsString(obj3);
    }
    ParseAtomID(arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ParseResID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int *arg2 = 0 ;
    char *arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sOsO:ParseResID",&arg1,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        if (!PyString_Check(obj3)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg4 = PyString_AsString(obj3);
    }
    result = (int)ParseResID(arg1,*arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ParseAtomPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int *arg2 = 0 ;
    char *arg3 ;
    int *arg4 = 0 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    char *arg8 ;
    char *arg9 ;
    PCAtomPath arg10 = (PCAtomPath) NULL ;
    int result;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    PyObject * obj7  = 0 ;
    PyObject * obj8  = 0 ;
    PyObject * obj9  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sOsOsOOOO|O:ParseAtomPath",&arg1,&obj1,&arg3,&obj3,&arg5,&obj5,&obj6,&obj7,&obj8,&obj9)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    {
        if (!PyString_Check(obj7)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg8 = PyString_AsString(obj7);
    }
    {
        if (!PyString_Check(obj8)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg9 = PyString_AsString(obj8);
    }
    if (obj9) {
        if ((SWIG_ConvertPtr(obj9,(void **) &arg10, SWIGTYPE_PCAtomPath,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (int)ParseAtomPath(arg1,*arg2,arg3,*arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ParseSelectionPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int *arg2 = 0 ;
    pstr arg3 ;
    int *arg4 = 0 ;
    char *arg5 ;
    int *arg6 = 0 ;
    char *arg7 ;
    pstr arg8 ;
    pstr arg9 ;
    pstr arg10 ;
    pstr arg11 ;
    int result;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sOsOsOsssss:ParseSelectionPath",&arg1,&obj1,&arg3,&obj3,&arg5,&obj5,&arg7,&arg8,&arg9,&arg10,&arg11)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)ParseSelectionPath(arg1,*arg2,arg3,*arg4,arg5,*arg6,arg7,arg8,arg9,arg10,arg11);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MakeSelectionPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int arg2 ;
    pstr arg3 ;
    int arg4 ;
    char *arg5 ;
    int arg6 ;
    char *arg7 ;
    pstr arg8 ;
    pstr arg9 ;
    pstr arg10 ;
    pstr arg11 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sisisisssss:MakeSelectionPath",&arg1,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9,&arg10,&arg11)) goto fail;
    MakeSelectionPath(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CBFGSMin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBFGSMin *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CBFGSMin")) goto fail;
    result = (CBFGSMin *)new CBFGSMin();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CBFGSMin, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_CBFGSMin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBFGSMin *arg1 = (CBFGSMin *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CBFGSMin",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBFGSMin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBFGSMin_MinFunc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBFGSMin *arg1 = (CBFGSMin *) 0 ;
    rvector arg2 = (rvector) 0 ;
    realtype *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CBFGSMin_MinFunc",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBFGSMin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MinFunc(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBFGSMin_Print(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBFGSMin *arg1 = (CBFGSMin *) 0 ;
    int arg2 ;
    rvector arg3 = (rvector) 0 ;
    rvector arg4 = (rvector) 0 ;
    realtype arg5 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOOd:CBFGSMin_Print",&obj0,&arg2,&obj2,&obj3,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBFGSMin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Print(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBFGSMin_SetMinFunction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBFGSMin *arg1 = (CBFGSMin *) 0 ;
    void *arg2 = (void *) 0 ;
    PBFGSMinFunc arg3 = (PBFGSMinFunc) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CBFGSMin_SetMinFunction",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBFGSMin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PBFGSMinFunc,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMinFunction(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBFGSMin_SetPrintFunction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBFGSMin *arg1 = (CBFGSMin *) 0 ;
    void *arg2 = (void *) 0 ;
    PBFGSPrintFunc arg3 = (PBFGSPrintFunc) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CBFGSMin_SetPrintFunction",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBFGSMin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PBFGSPrintFunc,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetPrintFunction(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBFGSMin_BFGS_Driver(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBFGSMin *arg1 = (CBFGSMin *) 0 ;
    int arg2 ;
    rvector arg3 = (rvector) 0 ;
    rvector arg4 = (rvector) 0 ;
    realtype *arg5 = 0 ;
    int *arg6 = 0 ;
    int arg7 = (int) 0 ;
    int arg8 = (int) 0 ;
    realtype arg9 = (realtype) 0.0 ;
    realtype arg10 = (realtype) 0.0 ;
    realtype arg11 = (realtype) 0.0 ;
    realtype arg12 = (realtype) 1.7976e+308 ;
    Boolean arg13 = (Boolean) Boolean(0) ;
    rvector arg14 = (rvector) NULL ;
    rvector arg15 = (rvector) NULL ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj12  = 0 ;
    PyObject * obj13  = 0 ;
    PyObject * obj14  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOOOO|iiddddOOO:CBFGSMin_BFGS_Driver",&obj0,&arg2,&obj2,&obj3,&obj4,&obj5,&arg7,&arg8,&arg9,&arg10,&arg11,&arg12,&obj12,&obj13,&obj14)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBFGSMin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj12) {
        arg13 = (Boolean) PyInt_AsLong(obj12);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj13) {
        if ((SWIG_ConvertPtr(obj13,(void **) &arg14, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj14) {
        if ((SWIG_ConvertPtr(obj14,(void **) &arg15, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    (arg1)->BFGS_Driver(arg2,arg3,arg4,*arg5,*arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBFGSMin_Stop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBFGSMin *arg1 = (CBFGSMin *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CBFGSMin_Stop",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBFGSMin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Stop();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CBFGSMin_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CBFGSMin, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CUDRegister__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CUDRegister *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CUDRegister")) goto fail;
    result = (CUDRegister *)new CUDRegister();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CUDRegister, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CUDRegister__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CUDRegister *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CUDRegister",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CUDRegister *)new CUDRegister(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CUDRegister, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CUDRegister(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CUDRegister__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CUDRegister__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CUDRegister'");
    return NULL;
}


static PyObject *_wrap_delete_CUDRegister(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CUDRegister *arg1 = (CUDRegister *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CUDRegister",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CUDRegister,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CUDRegister_RegisterUDInteger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CUDRegister *arg1 = (CUDRegister *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CUDRegister_RegisterUDInteger",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CUDRegister,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->RegisterUDInteger(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CUDRegister_RegisterUDReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CUDRegister *arg1 = (CUDRegister *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CUDRegister_RegisterUDReal",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CUDRegister,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->RegisterUDReal(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CUDRegister_RegisterUDString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CUDRegister *arg1 = (CUDRegister *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CUDRegister_RegisterUDString",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CUDRegister,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->RegisterUDString(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CUDRegister_GetUDDHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CUDRegister *arg1 = (CUDRegister *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CUDRegister_GetUDDHandle",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CUDRegister,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetUDDHandle(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CUDRegister_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CUDRegister, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CUDData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CUDData *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CUDData")) goto fail;
    result = (CUDData *)new CUDData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CUDData, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CUDData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CUDData *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CUDData",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CUDData *)new CUDData(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CUDData, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CUDData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CUDData__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CUDData__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CUDData'");
    return NULL;
}


static PyObject *_wrap_delete_CUDData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CUDData *arg1 = (CUDData *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CUDData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CUDData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CUDData_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CUDData, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CProModel__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CProModel *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CProModel")) goto fail;
    result = (CProModel *)new CProModel();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CProModel, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CProModel__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CProModel *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CProModel",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CProModel *)new CProModel(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CProModel, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CProModel(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CProModel__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CProModel__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CProModel'");
    return NULL;
}


static PyObject *_wrap_delete_CProModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CProModel *arg1 = (CProModel *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CProModel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CProModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CProModel_GetEntryID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CProModel *arg1 = (CProModel *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CProModel_GetEntryID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CProModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetEntryID();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CProModel_SetEntryID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CProModel *arg1 = (CProModel *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CProModel_SetEntryID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CProModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetEntryID(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CProModel_AddChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CProModel *arg1 = (CProModel *) 0 ;
    PCChain arg2 = (PCChain) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CProModel_AddChain",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CProModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddChain(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CProModel_GetCoordHierarchy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CProModel *arg1 = (CProModel *) 0 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CProModel_GetCoordHierarchy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CProModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetCoordHierarchy();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CProModel_GetNumberOfModels(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CProModel *arg1 = (CProModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CProModel_GetNumberOfModels",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CProModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfModels();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CProModel_GetNumberOfAllAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CProModel *arg1 = (CProModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CProModel_GetNumberOfAllAtoms",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CProModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAllAtoms();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CProModel_GetAllAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CProModel *arg1 = (CProModel *) 0 ;
    PPCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CProModel_GetAllAtoms",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CProModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetAllAtoms();
    
    {
        PPCAtom * resultptr;
        resultptr = new PPCAtom((PPCAtom &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCAtom, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CProModel_GetSerNum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CProModel *arg1 = (CProModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CProModel_GetSerNum",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CProModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetSerNum();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CProModel_ExpandAtomArray(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CProModel *arg1 = (CProModel *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CProModel_ExpandAtomArray",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CProModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ExpandAtomArray(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CProModel_AddAtomArray(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CProModel *arg1 = (CProModel *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CProModel_AddAtomArray",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CProModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddAtomArray(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CProModel_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CProModel, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CChainContainer__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChainContainer *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CChainContainer")) goto fail;
    result = (CChainContainer *)new CChainContainer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CChainContainer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CChainContainer__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CChainContainer *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CChainContainer",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CChainContainer *)new CChainContainer(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CChainContainer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CChainContainer(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CChainContainer__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CChainContainer__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CChainContainer'");
    return NULL;
}


static PyObject *_wrap_delete_CChainContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChainContainer *arg1 = (CChainContainer *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CChainContainer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChainContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChainContainer_MakeContainerClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChainContainer *arg1 = (CChainContainer *) 0 ;
    int arg2 ;
    PCContainerClass result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CChainContainer_MakeContainerClass",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChainContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCContainerClass)(arg1)->MakeContainerClass(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCContainerClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChainContainer_SetChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChainContainer *arg1 = (CChainContainer *) 0 ;
    PCChain arg2 = (PCChain) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChainContainer_SetChain",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChainContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetChain(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChainContainer_Get1stChainID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChainContainer *arg1 = (CChainContainer *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChainContainer_Get1stChainID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChainContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->Get1stChainID();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChainContainer_MoveByChainID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChainContainer *arg1 = (CChainContainer *) 0 ;
    char *arg2 ;
    PCChainContainer arg3 = (PCChainContainer) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CChainContainer_MoveByChainID",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChainContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PCChainContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MoveByChainID(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CChainContainer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CChainContainer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CContainerChain__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContainerChain *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CContainerChain")) goto fail;
    result = (CContainerChain *)new CContainerChain();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CContainerChain, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CContainerChain__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCChain arg1 = (PCChain) 0 ;
    CContainerChain *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CContainerChain",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CContainerChain *)new CContainerChain(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CContainerChain, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CContainerChain__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CContainerChain *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CContainerChain",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CContainerChain *)new CContainerChain(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CContainerChain, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CContainerChain(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CContainerChain__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CContainerChain__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CContainerChain__SWIG_2(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CContainerChain'");
    return NULL;
}


static PyObject *_wrap_CContainerChain_SetChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContainerChain *arg1 = (CContainerChain *) 0 ;
    PCChain arg2 = (PCChain) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CContainerChain_SetChain",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContainerChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetChain(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_CContainerChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CContainerChain *arg1 = (CContainerChain *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CContainerChain",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CContainerChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CContainerChain_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CContainerChain, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CDBReference_seqBeg_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CDBReference_seqBeg_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->seqBeg = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_seqBeg_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CDBReference_seqBeg_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->seqBeg);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_insBeg_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CDBReference_insBeg_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->insBeg,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_insBeg_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CDBReference_insBeg_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->insBeg);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_seqEnd_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CDBReference_seqEnd_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->seqEnd = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_seqEnd_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CDBReference_seqEnd_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->seqEnd);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_insEnd_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CDBReference_insEnd_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->insEnd,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_insEnd_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CDBReference_insEnd_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->insEnd);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_database_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CDBReference_database_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->database,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_database_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CDBReference_database_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->database);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_dbAccession_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CDBReference_dbAccession_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->dbAccession,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_dbAccession_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CDBReference_dbAccession_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->dbAccession);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_dbIdCode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CDBReference_dbIdCode_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->dbIdCode,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_dbIdCode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CDBReference_dbIdCode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->dbIdCode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_dbseqBeg_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CDBReference_dbseqBeg_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->dbseqBeg = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_dbseqBeg_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CDBReference_dbseqBeg_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->dbseqBeg);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_dbinsBeg_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CDBReference_dbinsBeg_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->dbinsBeg,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_dbinsBeg_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CDBReference_dbinsBeg_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->dbinsBeg);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_dbseqEnd_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CDBReference_dbseqEnd_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->dbseqEnd = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_dbseqEnd_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CDBReference_dbseqEnd_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->dbseqEnd);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_dbinsEnd_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CDBReference_dbinsEnd_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->dbinsEnd,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_dbinsEnd_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CDBReference_dbinsEnd_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->dbinsEnd);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CDBReference__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CDBReference")) goto fail;
    result = (CDBReference *)new CDBReference();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CDBReference, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CDBReference__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCChain arg1 = (PCChain) 0 ;
    CDBReference *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CDBReference",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CDBReference *)new CDBReference(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CDBReference, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CDBReference__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCChain arg1 = (PCChain) 0 ;
    pstr arg2 ;
    CDBReference *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:new_CDBReference",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CDBReference *)new CDBReference(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CDBReference, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CDBReference__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CDBReference *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CDBReference",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CDBReference *)new CDBReference(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CDBReference, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CDBReference(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CDBReference__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CDBReference__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CDBReference__SWIG_3(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_CDBReference__SWIG_2(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CDBReference'");
    return NULL;
}


static PyObject *_wrap_delete_CDBReference(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CDBReference",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    pstr arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CDBReference_PDBASCIIDump",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PDBASCIIDump(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CDBReference_MakeCIF",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_ConvertPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CDBReference_ConvertPDBASCII",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBASCII(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CDBReference_GetCIF",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetCIF(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_GetClassID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CDBReference_GetClassID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetClassID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CDBReference_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CDBReference *arg1 = (CDBReference *) 0 ;
    PCContainerClass arg2 = (PCContainerClass) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CDBReference_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CDBReference,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CDBReference_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CDBReference, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CSeqAdv_resName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSeqAdv_resName_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->resName,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_resName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSeqAdv_resName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->resName);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_seqNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSeqAdv_seqNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->seqNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_seqNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSeqAdv_seqNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->seqNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_insCode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSeqAdv_insCode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->insCode,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_insCode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSeqAdv_insCode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->insCode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_database_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSeqAdv_database_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->database,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_database_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSeqAdv_database_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->database);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_dbAccession_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSeqAdv_dbAccession_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->dbAccession,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_dbAccession_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSeqAdv_dbAccession_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->dbAccession);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_dbRes_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSeqAdv_dbRes_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->dbRes,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_dbRes_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSeqAdv_dbRes_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->dbRes);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_dbSeq_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSeqAdv_dbSeq_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->dbSeq = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_dbSeq_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSeqAdv_dbSeq_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->dbSeq);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_conflict_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSeqAdv_conflict_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->conflict) delete [] arg1->conflict;
        arg1->conflict = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->conflict,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_conflict_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSeqAdv_conflict_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->conflict);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSeqAdv__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSeqAdv")) goto fail;
    result = (CSeqAdv *)new CSeqAdv();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSeqAdv, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSeqAdv__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCChain arg1 = (PCChain) 0 ;
    CSeqAdv *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSeqAdv",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CSeqAdv *)new CSeqAdv(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSeqAdv, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSeqAdv__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCChain arg1 = (PCChain) 0 ;
    pstr arg2 ;
    CSeqAdv *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:new_CSeqAdv",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CSeqAdv *)new CSeqAdv(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSeqAdv, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSeqAdv__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CSeqAdv *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSeqAdv",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CSeqAdv *)new CSeqAdv(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSeqAdv, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSeqAdv(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CSeqAdv__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSeqAdv__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSeqAdv__SWIG_3(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_CSeqAdv__SWIG_2(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CSeqAdv'");
    return NULL;
}


static PyObject *_wrap_delete_CSeqAdv(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSeqAdv",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    pstr arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CSeqAdv_PDBASCIIDump",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PDBASCIIDump(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_ConvertPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSeqAdv_ConvertPDBASCII",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBASCII(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CSeqAdv_MakeCIF",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CSeqAdv_GetCIF",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetCIF(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_GetClassID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSeqAdv_GetClassID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetClassID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqAdv_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqAdv *arg1 = (CSeqAdv *) 0 ;
    PCContainerClass arg2 = (PCContainerClass) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSeqAdv_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqAdv,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSeqAdv_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSeqAdv, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CSeqRes_numRes_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqRes *arg1 = (CSeqRes *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSeqRes_numRes_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->numRes = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqRes_numRes_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqRes *arg1 = (CSeqRes *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSeqRes_numRes_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->numRes);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqRes_resName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqRes *arg1 = (CSeqRes *) 0 ;
    PResName arg2 = (PResName) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSeqRes_resName_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PResName,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->resName = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqRes_resName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqRes *arg1 = (CSeqRes *) 0 ;
    PResName result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSeqRes_resName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PResName) ((arg1)->resName);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PResName, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSeqRes__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqRes *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSeqRes")) goto fail;
    result = (CSeqRes *)new CSeqRes();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSeqRes, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSeqRes__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CSeqRes *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSeqRes",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CSeqRes *)new CSeqRes(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSeqRes, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSeqRes(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CSeqRes__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSeqRes__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CSeqRes'");
    return NULL;
}


static PyObject *_wrap_delete_CSeqRes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqRes *arg1 = (CSeqRes *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSeqRes",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqRes_SetChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqRes *arg1 = (CSeqRes *) 0 ;
    PCChain arg2 = (PCChain) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSeqRes_SetChain",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetChain(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqRes_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqRes *arg1 = (CSeqRes *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSeqRes_PDBASCIIDump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->PDBASCIIDump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqRes_ConvertPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqRes *arg1 = (CSeqRes *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSeqRes_ConvertPDBASCII",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBASCII(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqRes_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqRes *arg1 = (CSeqRes *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSeqRes_MakeCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqRes_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqRes *arg1 = (CSeqRes *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSeqRes_GetCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCIF(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSeqRes_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSeqRes *arg1 = (CSeqRes *) 0 ;
    PCSeqRes arg2 = (PCSeqRes) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSeqRes_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSeqRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSeqRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSeqRes_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSeqRes, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CModRes_resName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModRes_resName_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->resName,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_resName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModRes_resName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->resName);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_seqNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CModRes_seqNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->seqNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_seqNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModRes_seqNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->seqNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_insCode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CModRes_insCode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->insCode,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_insCode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModRes_insCode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->insCode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_stdRes_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModRes_stdRes_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->stdRes,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_stdRes_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModRes_stdRes_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->stdRes);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_comment_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CModRes_comment_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->comment) delete [] arg1->comment;
        arg1->comment = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->comment,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_comment_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModRes_comment_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->comment);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CModRes__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CModRes")) goto fail;
    result = (CModRes *)new CModRes();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CModRes, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CModRes__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCChain arg1 = (PCChain) 0 ;
    CModRes *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CModRes",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CModRes *)new CModRes(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CModRes, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CModRes__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCChain arg1 = (PCChain) 0 ;
    pstr arg2 ;
    CModRes *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:new_CModRes",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CModRes *)new CModRes(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CModRes, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CModRes__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CModRes *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CModRes",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CModRes *)new CModRes(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CModRes, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CModRes(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CModRes__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CModRes__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CModRes__SWIG_3(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_CModRes__SWIG_2(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CModRes'");
    return NULL;
}


static PyObject *_wrap_delete_CModRes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CModRes",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    pstr arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CModRes_PDBASCIIDump",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PDBASCIIDump(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CModRes_MakeCIF",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_ConvertPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CModRes_ConvertPDBASCII",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBASCII(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CModRes_GetCIF",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetCIF(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_GetClassID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModRes_GetClassID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetClassID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModRes_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModRes *arg1 = (CModRes *) 0 ;
    PCContainerClass arg2 = (PCContainerClass) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModRes_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CModRes_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CModRes, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CHetRec_hetID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetRec_hetID_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->hetID,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_hetID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetRec_hetID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->hetID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_seqNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CHetRec_seqNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->seqNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_seqNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetRec_seqNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->seqNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_insCode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHetRec_insCode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->insCode,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_insCode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetRec_insCode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->insCode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_numHetAtoms_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CHetRec_numHetAtoms_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->numHetAtoms = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_numHetAtoms_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetRec_numHetAtoms_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->numHetAtoms);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_comment_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHetRec_comment_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->comment) delete [] arg1->comment;
        arg1->comment = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->comment,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_comment_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetRec_comment_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->comment);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHetRec__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CHetRec")) goto fail;
    result = (CHetRec *)new CHetRec();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CHetRec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHetRec__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCChain arg1 = (PCChain) 0 ;
    CHetRec *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CHetRec",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CHetRec *)new CHetRec(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CHetRec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHetRec__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCChain arg1 = (PCChain) 0 ;
    pstr arg2 ;
    CHetRec *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:new_CHetRec",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CHetRec *)new CHetRec(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CHetRec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHetRec__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CHetRec *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CHetRec",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CHetRec *)new CHetRec(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CHetRec, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHetRec(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CHetRec__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CHetRec__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CHetRec__SWIG_3(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_CHetRec__SWIG_2(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CHetRec'");
    return NULL;
}


static PyObject *_wrap_delete_CHetRec(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CHetRec",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    pstr arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CHetRec_PDBASCIIDump",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PDBASCIIDump(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CHetRec_MakeCIF",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_ConvertPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHetRec_ConvertPDBASCII",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBASCII(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CHetRec_GetCIF",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetCIF(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_GetClassID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetRec_GetClassID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetClassID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetRec_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetRec *arg1 = (CHetRec *) 0 ;
    PCContainerClass arg2 = (PCContainerClass) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetRec_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetRec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CHetRec_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CHetRec, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_newCChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCChain result;
    
    if(!PyArg_ParseTuple(args,(char *)":newCChain")) goto fail;
    result = (PCChain)newCChain();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCChain, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SetMakersCChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    void *arg1 = (void *) 0 ;
    void *arg2 = (void *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SetMakersCChain",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    SetMakersCChain(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_DBReference_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    CChainContainer *arg2 = (CChainContainer *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_DBReference_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_CChainContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->DBReference = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_DBReference_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    CChainContainer *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_DBReference_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CChainContainer *)& ((arg1)->DBReference);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CChainContainer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_SeqAdv_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    CChainContainer *arg2 = (CChainContainer *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_SeqAdv_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_CChainContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->SeqAdv = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_SeqAdv_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    CChainContainer *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_SeqAdv_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CChainContainer *)& ((arg1)->SeqAdv);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CChainContainer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_SeqRes_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    CSeqRes *arg2 = (CSeqRes *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_SeqRes_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_CSeqRes,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->SeqRes = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_SeqRes_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    CSeqRes *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_SeqRes_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CSeqRes *)& ((arg1)->SeqRes);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSeqRes, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_ModRes_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    CChainContainer *arg2 = (CChainContainer *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_ModRes_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_CChainContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ModRes = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_ModRes_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    CChainContainer *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_ModRes_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CChainContainer *)& ((arg1)->ModRes);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CChainContainer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_Het_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    CChainContainer *arg2 = (CChainContainer *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_Het_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_CChainContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Het = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_Het_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    CChainContainer *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_Het_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CChainContainer *)& ((arg1)->Het);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CChainContainer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CChain__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CChain")) goto fail;
    result = (CChain *)new CChain();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CChain, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CChain__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCProModel arg1 = (PCProModel) 0 ;
    char *arg2 ;
    CChain *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:new_CChain",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCProModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CChain *)new CChain(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CChain, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CChain__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CChain *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CChain",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CChain *)new CChain(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CChain, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CChain(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CChain__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CChain__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCProModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_CChain__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CChain'");
    return NULL;
}


static PyObject *_wrap_delete_CChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CChain",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_FreeAnnotations(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_FreeAnnotations",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FreeAnnotations();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_SetModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PCProModel arg2 = (PCProModel) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_SetModel",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCProModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetModel(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_SetChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CChain_SetChain",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetChain(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetCoordHierarchy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_GetCoordHierarchy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetCoordHierarchy();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_ConvertDBREF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CChain_ConvertDBREF",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertDBREF(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_ConvertSEQADV(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CChain_ConvertSEQADV",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertSEQADV(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_ConvertSEQRES(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CChain_ConvertSEQRES",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertSEQRES(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_ConvertMODRES(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CChain_ConvertMODRES",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertMODRES(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_ConvertHET(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CChain_ConvertHET",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertHET(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_PDBASCIIDump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->PDBASCIIDump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_PDBASCIIAtomDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_PDBASCIIAtomDump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->PDBASCIIAtomDump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_MakeAtomCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_MakeAtomCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeAtomCIF(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetNumberOfResidues(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_GetNumberOfResidues",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfResidues();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetResidue__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CChain_GetResidue",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCResidue)(arg1)->GetResidue(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetResidue__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CChain_GetResidue",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCResidue)(arg1)->GetResidue(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetResidue(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CChain_GetResidue__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CChain_GetResidue__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CChain_GetResidue'");
    return NULL;
}


static PyObject *_wrap_CChain_GetResidueNo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CChain_GetResidueNo",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetResidueNo(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetResidueTable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PPCResidue *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CChain_GetResidueTable",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetResidueTable(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetResidueCreate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    Boolean arg5 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOisO:CChain_GetResidueCreate",&obj0,&obj1,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    arg5 = (Boolean) PyInt_AsLong(obj4);
    if (PyErr_Occurred()) SWIG_fail;
    result = (PCResidue)(arg1)->GetResidueCreate(arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_DeleteResidue__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CChain_DeleteResidue",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteResidue(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_DeleteResidue__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CChain_DeleteResidue",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteResidue(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_DeleteResidue(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CChain_DeleteResidue__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CChain_DeleteResidue__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CChain_DeleteResidue'");
    return NULL;
}


static PyObject *_wrap_CChain_DeleteAllResidues(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_DeleteAllResidues",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllResidues();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_DeleteSolvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_DeleteSolvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteSolvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_TrimResidueTable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_TrimResidueTable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->TrimResidueTable();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_AddResidue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PCResidue arg2 = (PCResidue) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_AddResidue",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddResidue(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_InsResidue__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PCResidue arg2 = (PCResidue) 0 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CChain_InsResidue",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->InsResidue(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_InsResidue__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PCResidue arg2 = (PCResidue) 0 ;
    int arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOis:CChain_InsResidue",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->InsResidue(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_InsResidue(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCResidue, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CChain_InsResidue__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCResidue, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CChain_InsResidue__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CChain_InsResidue'");
    return NULL;
}


static PyObject *_wrap_CChain_GetNumberOfAtoms__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    Boolean arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_GetNumberOfAtoms",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (Boolean) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetNumberOfAtoms__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CChain_GetNumberOfAtoms",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetNumberOfAtoms__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CChain_GetNumberOfAtoms",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetNumberOfAtoms(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CChain_GetNumberOfAtoms__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CChain_GetNumberOfAtoms__SWIG_2(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CChain_GetNumberOfAtoms__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CChain_GetNumberOfAtoms'");
    return NULL;
}


static PyObject *_wrap_CChain_GetAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisOOO:CChain_GetAtom",&obj0,&arg2,&arg3,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj3)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg4 = PyString_AsString(obj3);
    }
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisi:CChain_GetAtom",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetAtom__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    char *arg4 ;
    char *arg5 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOOO:CChain_GetAtom",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj2)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg3 = PyString_AsString(obj2);
    }
    {
        if (!PyString_Check(obj3)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg4 = PyString_AsString(obj3);
    }
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetAtom__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    int arg3 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CChain_GetAtom",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CChain_GetAtom__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CChain_GetAtom__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CChain_GetAtom__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CChain_GetAtom__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CChain_GetAtom'");
    return NULL;
}


static PyObject *_wrap_CChain_GetAtomTable__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    PPCAtom *arg4 = 0 ;
    int *arg5 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisOO:CChain_GetAtomTable",&obj0,&arg2,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(arg2,arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetAtomTable__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    PPCAtom *arg3 = 0 ;
    int *arg4 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOO:CChain_GetAtomTable",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetAtomTable(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CChain_GetAtomTable__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CChain_GetAtomTable__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CChain_GetAtomTable'");
    return NULL;
}


static PyObject *_wrap_CChain_GetAtomTable1__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    PPCAtom *arg4 = 0 ;
    int *arg5 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisOO:CChain_GetAtomTable1",&obj0,&arg2,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable1(arg2,arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetAtomTable1__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    PPCAtom *arg3 = 0 ;
    int *arg4 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOO:CChain_GetAtomTable1",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable1(arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetAtomTable1(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CChain_GetAtomTable1__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CChain_GetAtomTable1__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CChain_GetAtomTable1'");
    return NULL;
}


static PyObject *_wrap_CChain_DeleteAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisOOO:CChain_DeleteAtom",&obj0,&arg2,&arg3,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj3)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg4 = PyString_AsString(obj3);
    }
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_DeleteAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisi:CChain_DeleteAtom",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_DeleteAtom__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    char *arg4 ;
    char *arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOOO:CChain_DeleteAtom",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj2)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg3 = PyString_AsString(obj2);
    }
    {
        if (!PyString_Check(obj3)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg4 = PyString_AsString(obj3);
    }
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_DeleteAtom__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CChain_DeleteAtom",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAtom(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_DeleteAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CChain_DeleteAtom__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CChain_DeleteAtom__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CChain_DeleteAtom__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CChain_DeleteAtom__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CChain_DeleteAtom'");
    return NULL;
}


static PyObject *_wrap_CChain_DeleteAllAtoms__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CChain_DeleteAllAtoms",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_DeleteAllAtoms__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CChain_DeleteAllAtoms",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_DeleteAllAtoms__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_DeleteAllAtoms",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_DeleteAllAtoms(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_CChain_DeleteAllAtoms__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CChain_DeleteAllAtoms__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CChain_DeleteAllAtoms__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CChain_DeleteAllAtoms'");
    return NULL;
}


static PyObject *_wrap_CChain_DeleteAltLocs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_DeleteAltLocs",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAltLocs();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_AddAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    char *arg3 ;
    PCAtom arg4 = (PCAtom) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisO:CChain_AddAtom",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddAtom(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_AddAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    PCAtom arg3 = (PCAtom) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CChain_AddAtom",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddAtom(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_AddAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CChain_AddAtom__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CChain_AddAtom__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CChain_AddAtom'");
    return NULL;
}


static PyObject *_wrap_CChain_ApplyTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    mat44 *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_ApplyTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ApplyTransform(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetModelNum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_GetModelNum",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetModelNum();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PCModel result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_GetModel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCModel)(arg1)->GetModel();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCModel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetChainID__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_GetChainID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetChainID();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_SetChainID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CChain_SetChainID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetChainID(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetChainID__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    pstr arg2 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CChain_GetChainID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetChainID(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetChainID(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_CChain_GetChainID__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CChain_GetChainID__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CChain_GetChainID'");
    return NULL;
}


static PyObject *_wrap_CChain_GetAtomStatistics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    SAtomStat *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_GetAtomStatistics",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        SAtomStat arg;    SAtomStat *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->GetAtomStatistics(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_CalcAtomStatistics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    SAtomStat *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_CalcAtomStatistics",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        SAtomStat arg;    SAtomStat *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->CalcAtomStatistics(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_CheckID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CChain_CheckID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CheckID(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_CheckIDS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CChain_CheckIDS",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CheckIDS(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetEntryID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_GetEntryID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetEntryID();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_SetEntryID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CChain_SetEntryID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetEntryID(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetNumberOfDBRefs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_GetNumberOfDBRefs",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfDBRefs();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetDBRef(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    PCDBReference result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CChain_GetDBRef",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCDBReference)(arg1)->GetDBRef(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCDBReference, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_MaskAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_MaskAtoms",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MaskAtoms(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_MaskResidues(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_MaskResidues",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MaskResidues(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_UnmaskAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_UnmaskAtoms",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnmaskAtoms(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_UnmaskResidues(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_UnmaskResidues",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnmaskResidues(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_SortResidues(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_SortResidues",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SortResidues();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetNofModResidues(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_GetNofModResidues",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNofModResidues();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetModResidue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    PCModRes result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CChain_GetModResidue",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCModRes)(arg1)->GetModResidue(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCModRes, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_isSolventChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_isSolventChain",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isSolventChain();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_isInSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CChain_isInSelection",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isInSelection(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_isAminoacidChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CChain_isAminoacidChain",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isAminoacidChain();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_PutUDData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CChain_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_PutUDData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    realtype arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oid:CChain_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_PutUDData__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CChain_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_PutUDData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CChain_PutUDData__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CChain_PutUDData__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CChain_PutUDData__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CChain_PutUDData'");
    return NULL;
}


static PyObject *_wrap_CChain_GetUDData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    int *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CChain_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetUDData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    realtype *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CChain_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetUDData__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisi:CChain_GetUDData",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetUDData(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetUDData__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    int arg2 ;
    pstr *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CChain_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CChain_GetUDData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CChain_GetUDData__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_realtype, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CChain_GetUDData__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CChain_GetUDData__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CChain_GetUDData__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CChain_GetUDData'");
    return NULL;
}


static PyObject *_wrap_CChain_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CChain *arg1 = (CChain *) 0 ;
    PCChain arg2 = (PCChain) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CChain_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CChain_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CChain, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_ignoreSegID_set(PyObject *_val) {
    {
        long temp = PyInt_AsLong(_val);
        if (PyErr_Occurred()) {
            PyErr_SetString(PyExc_TypeError, "C variable 'ignoreSegID (Boolean)'");
            return 1;
        }
        ignoreSegID = (Boolean) temp;
    }
    return 0;
}


static PyObject *_wrap_ignoreSegID_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)ignoreSegID);
    return pyobj;
}


static int _wrap_ignoreElement_set(PyObject *_val) {
    {
        long temp = PyInt_AsLong(_val);
        if (PyErr_Occurred()) {
            PyErr_SetString(PyExc_TypeError, "C variable 'ignoreElement (Boolean)'");
            return 1;
        }
        ignoreElement = (Boolean) temp;
    }
    return 0;
}


static PyObject *_wrap_ignoreElement_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)ignoreElement);
    return pyobj;
}


static int _wrap_ignoreCharge_set(PyObject *_val) {
    {
        long temp = PyInt_AsLong(_val);
        if (PyErr_Occurred()) {
            PyErr_SetString(PyExc_TypeError, "C variable 'ignoreCharge (Boolean)'");
            return 1;
        }
        ignoreCharge = (Boolean) temp;
    }
    return 0;
}


static PyObject *_wrap_ignoreCharge_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)ignoreCharge);
    return pyobj;
}


static int _wrap_ignoreNonCoorPDBErrors_set(PyObject *_val) {
    {
        long temp = PyInt_AsLong(_val);
        if (PyErr_Occurred()) {
            PyErr_SetString(PyExc_TypeError, "C variable 'ignoreNonCoorPDBErrors (Boolean)'");
            return 1;
        }
        ignoreNonCoorPDBErrors = (Boolean) temp;
    }
    return 0;
}


static PyObject *_wrap_ignoreNonCoorPDBErrors_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)ignoreNonCoorPDBErrors);
    return pyobj;
}


static PyObject *_wrap_SAtomStat_nAtoms_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:SAtomStat_nAtoms_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nAtoms = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_nAtoms_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_nAtoms_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nAtoms);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_xmin_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_xmin_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->xmin = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_xmin_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_xmin_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->xmin);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_ymin_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_ymin_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ymin = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_ymin_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_ymin_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->ymin);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_zmin_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_zmin_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->zmin = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_zmin_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_zmin_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->zmin);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_xmax_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_xmax_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->xmax = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_xmax_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_xmax_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->xmax);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_ymax_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_ymax_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ymax = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_ymax_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_ymax_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->ymax);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_zmax_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_zmax_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->zmax = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_zmax_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_zmax_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->zmax);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_xm_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_xm_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->xm = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_xm_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_xm_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->xm);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_ym_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_ym_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ym = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_ym_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_ym_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->ym);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_zm_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_zm_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->zm = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_zm_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_zm_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->zm);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_xm2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_xm2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->xm2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_xm2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_xm2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->xm2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_ym2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_ym2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ym2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_ym2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_ym2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->ym2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_zm2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_zm2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->zm2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_zm2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_zm2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->zm2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_occ_min_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_occ_min_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->occ_min = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_occ_min_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_occ_min_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->occ_min);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_occ_max_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_occ_max_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->occ_max = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_occ_max_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_occ_max_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->occ_max);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_occ_m_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_occ_m_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->occ_m = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_occ_m_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_occ_m_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->occ_m);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_occ_m2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_occ_m2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->occ_m2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_occ_m2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_occ_m2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->occ_m2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_tFmin_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_tFmin_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->tFmin = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_tFmin_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_tFmin_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->tFmin);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_tFmax_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_tFmax_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->tFmax = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_tFmax_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_tFmax_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->tFmax);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_tFm_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_tFm_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->tFm = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_tFm_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_tFm_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->tFm);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_tFm2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_tFm2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->tFm2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_tFm2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_tFm2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->tFm2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u11_min_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u11_min_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u11_min = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u11_min_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u11_min_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u11_min);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u11_max_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u11_max_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u11_max = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u11_max_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u11_max_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u11_max);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u22_min_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u22_min_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u22_min = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u22_min_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u22_min_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u22_min);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u22_max_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u22_max_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u22_max = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u22_max_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u22_max_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u22_max);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u33_min_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u33_min_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u33_min = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u33_min_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u33_min_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u33_min);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u33_max_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u33_max_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u33_max = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u33_max_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u33_max_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u33_max);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u12_min_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u12_min_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u12_min = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u12_min_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u12_min_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u12_min);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u12_max_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u12_max_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u12_max = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u12_max_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u12_max_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u12_max);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u13_min_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u13_min_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u13_min = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u13_min_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u13_min_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u13_min);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u13_max_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u13_max_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u13_max = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u13_max_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u13_max_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u13_max);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u23_min_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u23_min_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u23_min = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u23_min_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u23_min_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u23_min);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u23_max_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u23_max_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u23_max = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u23_max_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u23_max_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u23_max);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u11_m_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u11_m_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u11_m = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u11_m_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u11_m_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u11_m);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u11_m2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u11_m2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u11_m2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u11_m2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u11_m2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u11_m2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u22_m_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u22_m_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u22_m = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u22_m_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u22_m_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u22_m);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u22_m2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u22_m2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u22_m2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u22_m2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u22_m2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u22_m2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u33_m_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u33_m_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u33_m = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u33_m_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u33_m_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u33_m);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u33_m2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u33_m2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u33_m2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u33_m2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u33_m2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u33_m2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u12_m_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u12_m_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u12_m = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u12_m_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u12_m_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u12_m);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u12_m2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u12_m2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u12_m2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u12_m2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u12_m2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u12_m2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u13_m_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u13_m_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u13_m = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u13_m_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u13_m_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u13_m);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u13_m2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u13_m2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u13_m2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u13_m2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u13_m2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u13_m2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u23_m_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u23_m_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u23_m = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u23_m_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u23_m_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u23_m);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u23_m2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:SAtomStat_u23_m2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u23_m2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_u23_m2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_u23_m2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u23_m2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_WhatIsSet_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    word arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SAtomStat_WhatIsSet_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->WhatIsSet = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_WhatIsSet_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    word result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_WhatIsSet_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (word) ((arg1)->WhatIsSet);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_Init(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_Init",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Init();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_Finish(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_Finish",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Finish();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomStat_GetMaxSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomStat_GetMaxSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype)(arg1)->GetMaxSize();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SAtomStat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_SAtomStat")) goto fail;
    result = (SAtomStat *)new SAtomStat();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_SAtomStat, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_SAtomStat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomStat *arg1 = (SAtomStat *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_SAtomStat",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * SAtomStat_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_SAtomStat, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_SAtomBondI_index_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomBondI *arg1 = (SAtomBondI *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:SAtomBondI_index_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomBondI,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->index = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomBondI_index_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomBondI *arg1 = (SAtomBondI *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomBondI_index_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomBondI,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->index);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomBondI_order_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomBondI *arg1 = (SAtomBondI *) 0 ;
    byte arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SAtomBondI_order_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomBondI,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (byte) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->order = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomBondI_order_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomBondI *arg1 = (SAtomBondI *) 0 ;
    byte result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomBondI_order_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomBondI,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (byte) ((arg1)->order);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SAtomBondI(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomBondI *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_SAtomBondI")) goto fail;
    result = (SAtomBondI *)new SAtomBondI();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_SAtomBondI, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_SAtomBondI(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomBondI *arg1 = (SAtomBondI *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_SAtomBondI",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomBondI,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * SAtomBondI_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_SAtomBondI, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_SAtomBond_atom_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomBond *arg1 = (SAtomBond *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SAtomBond_atom_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->atom = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomBond_atom_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomBond *arg1 = (SAtomBond *) 0 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomBond_atom_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom) ((arg1)->atom);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomBond_order_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomBond *arg1 = (SAtomBond *) 0 ;
    byte arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SAtomBond_order_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (byte) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->order = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SAtomBond_order_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomBond *arg1 = (SAtomBond *) 0 ;
    byte result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:SAtomBond_order_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (byte) ((arg1)->order);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_SAtomBond(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomBond *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_SAtomBond")) goto fail;
    result = (SAtomBond *)new SAtomBond();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_SAtomBond, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_SAtomBond(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SAtomBond *arg1 = (SAtomBond *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_SAtomBond",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_SAtomBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * SAtomBond_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_SAtomBond, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_newCAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCAtom result;
    
    if(!PyArg_ParseTuple(args,(char *)":newCAtom")) goto fail;
    result = (PCAtom)newCAtom();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SetMakersCAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    void *arg1 = (void *) 0 ;
    void *arg2 = (void *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SetMakersCAtom",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    SetMakersCAtom(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_serNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CAtom_serNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->serNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_serNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_serNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->serNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_name_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_name_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->name,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_name_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_name_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->name);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_altLoc_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_altLoc_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->altLoc,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_altLoc_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_altLoc_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->altLoc);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_residue_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PCResidue arg2 = (PCResidue) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_residue_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->residue = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_residue_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_residue_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCResidue) ((arg1)->residue);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_x_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_x_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_x_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_x_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->x);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_y_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_y_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_y_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_y_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->y);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_z_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_z_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->z = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_z_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_z_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->z);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_occupancy_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_occupancy_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->occupancy = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_occupancy_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_occupancy_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->occupancy);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_tempFactor_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_tempFactor_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->tempFactor = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_tempFactor_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_tempFactor_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->tempFactor);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_segID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_segID_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->segID,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_segID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_segID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->segID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_element_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_element_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->element,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_element_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_element_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->element);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_charge_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_charge_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->charge,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_charge_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_charge_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->charge);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_sigX_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_sigX_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->sigX = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_sigX_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_sigX_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->sigX);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_sigY_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_sigY_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->sigY = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_sigY_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_sigY_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->sigY);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_sigZ_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_sigZ_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->sigZ = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_sigZ_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_sigZ_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->sigZ);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_sigOcc_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_sigOcc_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->sigOcc = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_sigOcc_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_sigOcc_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->sigOcc);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_sigTemp_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_sigTemp_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->sigTemp = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_sigTemp_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_sigTemp_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->sigTemp);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_u11_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_u11_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u11 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_u11_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_u11_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u11);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_u22_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_u22_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u22 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_u22_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_u22_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u22);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_u33_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_u33_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u33 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_u33_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_u33_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u33);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_u12_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_u12_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u12 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_u12_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_u12_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u12);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_u13_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_u13_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u13 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_u13_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_u13_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u13);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_u23_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_u23_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->u23 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_u23_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_u23_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->u23);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_su11_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_su11_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->su11 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_su11_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_su11_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->su11);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_su22_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_su22_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->su22 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_su22_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_su22_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->su22);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_su33_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_su33_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->su33 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_su33_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_su33_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->su33);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_su12_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_su12_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->su12 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_su12_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_su12_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->su12);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_su13_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_su13_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->su13 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_su13_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_su13_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->su13);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_su23_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAtom_su23_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->su23 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_su23_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_su23_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->su23);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_Het_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    Boolean arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_Het_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (Boolean) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Het = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_Het_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_Het_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean) ((arg1)->Het);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_Ter_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    Boolean arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_Ter_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (Boolean) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Ter = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_Ter_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_Ter_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean) ((arg1)->Ter);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_WhatIsSet_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    word arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_WhatIsSet_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->WhatIsSet = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_WhatIsSet_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    word result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_WhatIsSet_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (word) ((arg1)->WhatIsSet);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CAtom")) goto fail;
    result = (CAtom *)new CAtom();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CAtom, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCResidue arg1 = (PCResidue) 0 ;
    CAtom *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CAtom",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CAtom *)new CAtom(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CAtom, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CAtom__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CAtom *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CAtom",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CAtom *)new CAtom(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CAtom, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CAtom__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CAtom__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CAtom__SWIG_2(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CAtom'");
    return NULL;
}


static PyObject *_wrap_delete_CAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CAtom",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_SetResidue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PCResidue arg2 = (PCResidue) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_SetResidue",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetResidue(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_PDBASCIIDump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->PDBASCIIDump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_MakeCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_AddBond(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    int arg3 ;
    int arg4 = (int) 1 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi|i:CAtom_AddBond",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddBond(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetNBonds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetNBonds",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNBonds();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetBonds__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PSAtomBondI *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CAtom_GetBonds",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PSAtomBondI arg;    PSAtomBondI *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_PSAtomBondI,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetBonds(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_FreeBonds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_FreeBonds",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FreeBonds();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetBonds__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PSAtomBond *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CAtom_GetBonds",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PSAtomBond arg;    PSAtomBond *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_PSAtomBond,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetBonds(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetBonds__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PSAtomBond arg2 ;
    int *arg3 = 0 ;
    int arg4 ;
    PSAtomBond *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:CAtom_GetBonds",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PSAtomBond,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetBonds(arg2,*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetBonds(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_PSAtomBondI, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CAtom_GetBonds__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_PSAtomBond, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CAtom_GetBonds__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_PSAtomBond, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CAtom_GetBonds__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CAtom_GetBonds'");
    return NULL;
}


static PyObject *_wrap_CAtom_ConvertPDBATOM(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CAtom_ConvertPDBATOM",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBATOM(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_ConvertPDBSIGATM(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CAtom_ConvertPDBSIGATM",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBSIGATM(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_ConvertPDBANISOU(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CAtom_ConvertPDBANISOU",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBANISOU(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_ConvertPDBSIGUIJ(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CAtom_ConvertPDBSIGUIJ",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBSIGUIJ(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_ConvertPDBTER(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CAtom_ConvertPDBTER",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBTER(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_ConvertPDBHETATM(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CAtom_ConvertPDBHETATM",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBHETATM(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    PCMMCIFLoop arg3 = (PCMMCIFLoop) 0 ;
    PCMMCIFLoop arg4 = (PCMMCIFLoop) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOO:CAtom_GetCIF",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PCMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_PCMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCIF(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_MakePDBAtomName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_MakePDBAtomName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->MakePDBAtomName();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_SetAtomName__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    char *arg8 ;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    PyObject * obj7  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiOOOOO:CAtom_SetAtomName",&obj0,&arg2,&arg3,&obj3,&obj4,&obj5,&obj6,&obj7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj3)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg4 = PyString_AsString(obj3);
    }
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    {
        if (!PyString_Check(obj7)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg8 = PyString_AsString(obj7);
    }
    (arg1)->SetAtomName(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_SetAtomName__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_SetAtomName",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->SetAtomName(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_SetAtomName(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[9];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 8); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CAtom_SetAtomName__SWIG_1(self,args);
            }
        }
    }
    if (argc == 8) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    {
                                        void *ptr;
                                        if (SWIG_ConvertPtr(argv[7], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                            _v = 0;
                                            PyErr_Clear();
                                        }else {
                                            _v = 1;
                                        }
                                    }
                                    if (_v) {
                                        return _wrap_CAtom_SetAtomName__SWIG_0(self,args);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CAtom_SetAtomName'");
    return NULL;
}


static PyObject *_wrap_CAtom_SetElementName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_SetElementName",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->SetElementName(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_SetAtomIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CAtom_SetAtomIndex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAtomIndex(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_MakeTer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_MakeTer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeTer();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_SetCoordinates(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype arg5 ;
    realtype arg6 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oddddd:CAtom_SetCoordinates",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCoordinates(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetModelNum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetModelNum",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetModelNum();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetChainID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetChainID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetChainID();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetResName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetResName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetResName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetAASimilarity__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_GetAASimilarity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    result = (int)(arg1)->GetAASimilarity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetAASimilarity__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_GetAASimilarity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetAASimilarity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetAASimilarity(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CAtom_GetAASimilarity__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CAtom_GetAASimilarity__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CAtom_GetAASimilarity'");
    return NULL;
}


static PyObject *_wrap_CAtom_GetAAHydropathy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetAAHydropathy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype)(arg1)->GetAAHydropathy();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetOccupancy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetOccupancy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype)(arg1)->GetOccupancy();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetSeqNum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetSeqNum",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetSeqNum();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetInsCode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetInsCode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetInsCode();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetAtomName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetAtomName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetAtomName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetElementName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetElementName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetElementName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_isTer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_isTer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isTer();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_isMetal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_isMetal",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isMetal();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_isSolvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_isSolvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isSolvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_isInSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CAtom_isInSelection",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isInSelection(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_CalcAtomStatistics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    SAtomStat *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_CalcAtomStatistics",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        SAtomStat arg;    SAtomStat *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->CalcAtomStatistics(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetDist2__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_GetDist2",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype)(arg1)->GetDist2(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetDist2__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oddd:CAtom_GetDist2",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype)(arg1)->GetDist2(arg2,arg3,arg4);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetDist2(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CAtom_GetDist2__SWIG_0(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CAtom_GetDist2__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CAtom_GetDist2'");
    return NULL;
}


static PyObject *_wrap_CAtom_GetResidue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetResidue",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCResidue)(arg1)->GetResidue();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PCChain result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetChain",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCChain)(arg1)->GetChain();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCChain, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PCModel result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetModel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCModel)(arg1)->GetModel();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCModel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetResidueNo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetResidueNo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetResidueNo();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetCoordHierarchy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetCoordHierarchy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetCoordHierarchy();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetAtomID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    pstr arg2 ;
    pstr result;
    char temp2[1024+1] ;
    PyObject * obj0  = 0 ;
    
    {
        arg2 = (pstr) temp2;
    }
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetAtomID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetAtomID(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    {
        PyObject *o;
        arg2[1024] = 0;
        o = PyString_FromString(arg2);
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetAtomIDfmt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    pstr arg2 ;
    pstr result;
    char temp2[1024+1] ;
    PyObject * obj0  = 0 ;
    
    {
        arg2 = (pstr) temp2;
    }
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetAtomIDfmt",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetAtomIDfmt(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    {
        PyObject *o;
        arg2[1024] = 0;
        o = PyString_FromString(arg2);
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_CheckID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    char *arg2 ;
    char *arg3 = (char *) (char *)NULL ;
    char *arg4 = (char *) (char *)pstr("") ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:CAtom_CheckID",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    if (obj2) {
        {
            if (!PyString_Check(obj2)) {
                PyErr_SetString(PyExc_TypeError,"not a string");
                return NULL;
            }
            arg3 = PyString_AsString(obj2);
        }
    }
    if (obj3) {
        {
            if (!PyString_Check(obj3)) {
                PyErr_SetString(PyExc_TypeError,"not a string");
                return NULL;
            }
            arg4 = PyString_AsString(obj3);
        }
    }
    result = (int)(arg1)->CheckID(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_CheckIDS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CAtom_CheckIDS",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CheckIDS(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_Transform__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    mat33 *arg2 = 0 ;
    vect3 *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CAtom_Transform",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat33,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_vect3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Transform(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_Transform__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    mat44 *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_Transform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Transform(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_Transform(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_mat44, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CAtom_Transform__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_mat33, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_vect3, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CAtom_Transform__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CAtom_Transform'");
    return NULL;
}


static PyObject *_wrap_CAtom_TransformCopy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    mat44 *arg2 = 0 ;
    realtype *arg3 = 0 ;
    realtype *arg4 = 0 ;
    realtype *arg5 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:CAtom_TransformCopy",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->TransformCopy(*arg2,*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_TransformSet(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    mat44 *arg2 = 0 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype arg5 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOddd:CAtom_TransformSet",&obj0,&obj1,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->TransformSet(*arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_PutUDData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CAtom_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_PutUDData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    realtype arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oid:CAtom_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_PutUDData__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CAtom_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_PutUDData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CAtom_PutUDData__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CAtom_PutUDData__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CAtom_PutUDData__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CAtom_PutUDData'");
    return NULL;
}


static PyObject *_wrap_CAtom_GetUDData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    int *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CAtom_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetUDData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    realtype *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CAtom_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetUDData__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisi:CAtom_GetUDData",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetUDData(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetUDData__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int arg2 ;
    pstr *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CAtom_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_GetUDData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CAtom_GetUDData__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_realtype, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CAtom_GetUDData__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CAtom_GetUDData__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CAtom, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CAtom_GetUDData__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CAtom_GetUDData'");
    return NULL;
}


static PyObject *_wrap_CAtom_GetIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_GetIndex",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetIndex();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CAtom_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAtom_SetShortBinary(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAtom *arg1 = (CAtom *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAtom_SetShortBinary",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetShortBinary();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CAtom_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CAtom, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_newCResidue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCResidue result;
    
    if(!PyArg_ParseTuple(args,(char *)":newCResidue")) goto fail;
    result = (PCResidue)newCResidue();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SetMakersCResidue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    void *arg1 = (void *) 0 ;
    void *arg2 = (void *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SetMakersCResidue",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    SetMakersCResidue(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_name_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_name_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->name,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_name_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_name_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->name);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_seqNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CResidue_seqNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->seqNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_seqNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_seqNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->seqNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_insCode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CResidue_insCode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->insCode,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_insCode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_insCode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->insCode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_chain_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCChain arg2 = (PCChain) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_chain_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->chain = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_chain_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCChain result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_chain_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCChain) ((arg1)->chain);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCChain, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_index_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CResidue_index_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->index = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_index_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_index_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->index);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_nAtoms_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CResidue_nAtoms_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nAtoms = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_nAtoms_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_nAtoms_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nAtoms);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_atom_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PPCAtom arg2 ;
    PPCAtom *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_atom_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->atom = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_atom_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PPCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_atom_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->atom);
    
    {
        PPCAtom * resultptr;
        resultptr = new PPCAtom((PPCAtom &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCAtom, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_SSE_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    byte arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_SSE_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (byte) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->SSE = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_SSE_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    byte result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_SSE_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (byte) ((arg1)->SSE);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CResidue__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CResidue")) goto fail;
    result = (CResidue *)new CResidue();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CResidue, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CResidue__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCChain arg1 = (PCChain) 0 ;
    CResidue *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CResidue",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CResidue *)new CResidue(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CResidue, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CResidue__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCChain arg1 = (PCChain) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    CResidue *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOis:new_CResidue",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    result = (CResidue *)new CResidue(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CResidue, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CResidue__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CResidue *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CResidue",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CResidue *)new CResidue(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CResidue, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CResidue(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CResidue__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CResidue__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CResidue__SWIG_3(self,args);
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCChain, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_new_CResidue__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CResidue'");
    return NULL;
}


static PyObject *_wrap_delete_CResidue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CResidue",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_SetChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCChain arg2 = (PCChain) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_SetChain",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetChain(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_SetResID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOis:CResidue_SetResID",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->SetResID(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_PDBASCIIAtomDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_PDBASCIIAtomDump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->PDBASCIIAtomDump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_MakeAtomCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_MakeAtomCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeAtomCIF(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCChain result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_GetChain",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCChain)(arg1)->GetChain();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCChain, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCModel result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_GetModel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCModel)(arg1)->GetModel();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCModel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetModelNum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_GetModelNum",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetModelNum();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetChainID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_GetChainID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetChainID();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetResName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_GetResName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetResName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetAASimilarity__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_GetAASimilarity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    result = (int)(arg1)->GetAASimilarity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetAASimilarity__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCResidue arg2 = (PCResidue) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_GetAASimilarity",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetAASimilarity(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetAASimilarity(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CResidue_GetAASimilarity__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCResidue, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CResidue_GetAASimilarity__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CResidue_GetAASimilarity'");
    return NULL;
}


static PyObject *_wrap_CResidue_GetAAHydropathy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_GetAAHydropathy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype)(arg1)->GetAAHydropathy();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_SetResName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_SetResName",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    (arg1)->SetResName(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetSeqNum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_GetSeqNum",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetSeqNum();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetInsCode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_GetInsCode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetInsCode();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetResidueNo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_GetResidueNo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetResidueNo();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetCoordHierarchy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_GetCoordHierarchy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetCoordHierarchy();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetAtomStatistics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    SAtomStat *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_GetAtomStatistics",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        SAtomStat arg;    SAtomStat *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->GetAtomStatistics(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_CalcAtomStatistics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    SAtomStat *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_CalcAtomStatistics",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        SAtomStat arg;    SAtomStat *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->CalcAtomStatistics(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetResidueID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    pstr arg2 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CResidue_GetResidueID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetResidueID(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetAltLocations(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int *arg2 = 0 ;
    PAltLoc *arg3 = 0 ;
    rvector *arg4 = 0 ;
    int *arg5 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:CResidue_GetAltLocations",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PAltLoc,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAltLocations(*arg2,*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetNofAltLocations(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_GetNofAltLocations",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNofAltLocations();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_isAminoacid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_isAminoacid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isAminoacid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_isNucleotide(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_isNucleotide",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isNucleotide();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_isSugar(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_isSugar",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isSugar();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_isSolvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_isSolvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isSolvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_isModRes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_isModRes",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isModRes();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_isInSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int arg2 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CResidue_isInSelection",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isInSelection(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_CheckID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int *arg2 = (int *) 0 ;
    char *arg3 = (char *) (char *)pstr("") ;
    char *arg4 = (char *) (char *)NULL ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|sO:CResidue_CheckID",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        {
            if (!PyString_Check(obj3)) {
                PyErr_SetString(PyExc_TypeError,"not a string");
                return NULL;
            }
            arg4 = PyString_AsString(obj3);
        }
    }
    result = (int)(arg1)->CheckID(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_CheckIDS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CResidue_CheckIDS",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CheckIDS(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetNumberOfAtoms__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_GetNumberOfAtoms",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetNumberOfAtoms__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    Boolean arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_GetNumberOfAtoms",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (Boolean) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetNumberOfAtoms(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_CResidue_GetNumberOfAtoms__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CResidue_GetNumberOfAtoms__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CResidue_GetNumberOfAtoms'");
    return NULL;
}


static PyObject *_wrap_CResidue_GetAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    char *arg2 ;
    char *arg3 = (char *) (char *)NULL ;
    char *arg4 = (char *) (char *)pstr("") ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:CResidue_GetAtom",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    if (obj2) {
        {
            if (!PyString_Check(obj2)) {
                PyErr_SetString(PyExc_TypeError,"not a string");
                return NULL;
            }
            arg3 = PyString_AsString(obj2);
        }
    }
    if (obj3) {
        {
            if (!PyString_Check(obj3)) {
                PyErr_SetString(PyExc_TypeError,"not a string");
                return NULL;
            }
            arg4 = PyString_AsString(obj3);
        }
    }
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int arg2 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CResidue_GetAtom",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom)(arg1)->GetAtom(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_CResidue_GetAtom__SWIG_0(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_CResidue_GetAtom__SWIG_0(self,args);
                    }
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CResidue_GetAtom__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CResidue_GetAtom__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CResidue_GetAtom'");
    return NULL;
}


static PyObject *_wrap_CResidue_GetAtomTable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PPCAtom *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CResidue_GetAtomTable",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetAtomTable1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PPCAtom *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CResidue_GetAtomTable1",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable1(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_DeleteAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    char *arg2 ;
    char *arg3 = (char *) (char *)NULL ;
    char *arg4 = (char *) (char *)pstr("") ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:CResidue_DeleteAtom",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    if (obj2) {
        {
            if (!PyString_Check(obj2)) {
                PyErr_SetString(PyExc_TypeError,"not a string");
                return NULL;
            }
            arg3 = PyString_AsString(obj2);
        }
    }
    if (obj3) {
        {
            if (!PyString_Check(obj3)) {
                PyErr_SetString(PyExc_TypeError,"not a string");
                return NULL;
            }
            arg4 = PyString_AsString(obj3);
        }
    }
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_DeleteAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CResidue_DeleteAtom",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAtom(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_DeleteAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_CResidue_DeleteAtom__SWIG_0(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_CResidue_DeleteAtom__SWIG_0(self,args);
                    }
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CResidue_DeleteAtom__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CResidue_DeleteAtom__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CResidue_DeleteAtom'");
    return NULL;
}


static PyObject *_wrap_CResidue_DeleteAllAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_DeleteAllAtoms",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_DeleteAltLocs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_DeleteAltLocs",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAltLocs();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_TrimAtomTable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CResidue_TrimAtomTable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->TrimAtomTable();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_AddAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_AddAtom",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddAtom(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_InsertAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CResidue_InsertAtom",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->InsertAtom(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_InsertAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    char *arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CResidue_InsertAtom",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj2)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg3 = PyString_AsString(obj2);
    }
    result = (int)(arg1)->InsertAtom(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_InsertAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CResidue_InsertAtom__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CResidue_InsertAtom__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CResidue_InsertAtom'");
    return NULL;
}


static PyObject *_wrap_CResidue_ApplyTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    mat44 *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_ApplyTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ApplyTransform(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_MaskAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_MaskAtoms",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MaskAtoms(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_UnmaskAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_UnmaskAtoms",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnmaskAtoms(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_PutUDData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CResidue_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_PutUDData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int arg2 ;
    realtype arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oid:CResidue_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_PutUDData__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CResidue_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_PutUDData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CResidue_PutUDData__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CResidue_PutUDData__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CResidue_PutUDData__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CResidue_PutUDData'");
    return NULL;
}


static PyObject *_wrap_CResidue_GetUDData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int arg2 ;
    int *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CResidue_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetUDData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int arg2 ;
    realtype *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CResidue_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetUDData__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisi:CResidue_GetUDData",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetUDData(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetUDData__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    int arg2 ;
    pstr *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CResidue_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_GetUDData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CResidue_GetUDData__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_realtype, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CResidue_GetUDData__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CResidue_GetUDData__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CResidue_GetUDData__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CResidue_GetUDData'");
    return NULL;
}


static PyObject *_wrap_CResidue_isHBond(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCResidue arg2 = (PCResidue) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_isHBond",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isHBond(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CResidue_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CResidue *arg1 = (CResidue *) 0 ;
    PCResidue arg2 = (PCResidue) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CResidue_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CResidue_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CResidue, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_BondAngle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCAtom arg1 = (PCAtom) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    PCAtom arg3 = (PCAtom) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:BondAngle",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype)BondAngle(arg1,arg2,arg3);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CIFName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"ii:CIFName",&arg1,&arg2)) goto fail;
    result = (pstr)CIFName(arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMDBFile__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CMMDBFile")) goto fail;
    result = (CMMDBFile *)new CMMDBFile();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMDBFile, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMDBFile__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CMMDBFile *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CMMDBFile",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CMMDBFile *)new CMMDBFile(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMDBFile, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMDBFile(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CMMDBFile__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CMMDBFile__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CMMDBFile'");
    return NULL;
}


static PyObject *_wrap_delete_CMMDBFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMMDBFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_FreeFileMemory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_FreeFileMemory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FreeFileMemory();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_SetFlag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    word arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMDBFile_SetFlag",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetFlag(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_RemoveFlag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    word arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMDBFile_RemoveFlag",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->RemoveFlag(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_ReadPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_ReadPDBASCII",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->ReadPDBASCII(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_ReadPDBASCII1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_ReadPDBASCII1",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->ReadPDBASCII1(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_ReadCIFASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_ReadCIFASCII",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->ReadCIFASCII(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_ReadCIFASCII1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_ReadCIFASCII1",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->ReadCIFASCII1(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_ReadFromCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMDBFile_ReadFromCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ReadFromCIF(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_AddPDBASCII1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_AddPDBASCII1",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->AddPDBASCII1(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_AddPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_AddPDBASCII",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->AddPDBASCII(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_ReadCoorFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_ReadCoorFile",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->ReadCoorFile(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_ReadCoorFile1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_ReadCoorFile1",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->ReadCoorFile1(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_WritePDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_WritePDBASCII",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->WritePDBASCII(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_WritePDBASCII1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_WritePDBASCII1",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->WritePDBASCII1(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_WriteCIFASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_WriteCIFASCII",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->WriteCIFASCII(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_WriteCIFASCII1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_WriteCIFASCII1",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->WriteCIFASCII1(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_ReadMMDBF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_ReadMMDBF",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->ReadMMDBF(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_ReadMMDBF1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_ReadMMDBF1",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->ReadMMDBF1(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_WriteMMDBF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_WriteMMDBF",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->WriteMMDBF(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_WriteMMDBF1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMDBFile_WriteMMDBF1",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->WriteMMDBF1(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetInputBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    char temp2[1024+1] ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    {
        arg2 = (pstr) temp2;
    }
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMDBFile_GetInputBuffer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetInputBuffer(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o;
        arg2[1024] = 0;
        o = PyString_FromString(arg2);
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_PutPDBString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMDBFile_PutPDBString",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutPDBString(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_PDBCleanup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    word arg2 ;
    word result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMDBFile_PDBCleanup",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (word)(arg1)->PDBCleanup(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_MakeHetAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    Boolean arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CMMDBFile_MakeHetAtoms",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (Boolean) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->MakeHetAtoms(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetAtomArray(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    PPCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_GetAtomArray",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetAtomArray();
    
    {
        PPCAtom * resultptr;
        resultptr = new PPCAtom((PPCAtom &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCAtom, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetAtomArrayLength(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_GetAtomArrayLength",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetAtomArrayLength();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetAtomI(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBFile_GetAtomI",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom)(arg1)->GetAtomI(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_PutAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 ;
    int arg7 ;
    char *arg8 ;
    char *arg9 ;
    char *arg10 ;
    char *arg11 ;
    char *arg12 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj8  = 0 ;
    PyObject * obj9  = 0 ;
    PyObject * obj10  = 0 ;
    PyObject * obj11  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiOOsisOOOO:CMMDBFile_PutAtom",&obj0,&arg2,&arg3,&obj3,&obj4,&arg6,&arg7,&arg8,&obj8,&obj9,&obj10,&obj11)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj3)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg4 = PyString_AsString(obj3);
    }
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj8)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg9 = PyString_AsString(obj8);
    }
    {
        if (!PyString_Check(obj9)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg10 = PyString_AsString(obj9);
    }
    {
        if (!PyString_Check(obj10)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg11 = PyString_AsString(obj10);
    }
    {
        if (!PyString_Check(obj11)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg12 = PyString_AsString(obj11);
    }
    result = (int)(arg1)->PutAtom(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_PutAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    PCAtom arg3 = (PCAtom) 0 ;
    int arg4 = (int) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO|i:CMMDBFile_PutAtom",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutAtom(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_PutAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[13];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 12); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_CMMDBFile_PutAtom__SWIG_1(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CMMDBFile_PutAtom__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 12) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    {
                                        void *ptr;
                                        if (SWIG_ConvertPtr(argv[7], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                            _v = 0;
                                            PyErr_Clear();
                                        }else {
                                            _v = 1;
                                        }
                                    }
                                    if (_v) {
                                        {
                                            void *ptr;
                                            if (SWIG_ConvertPtr(argv[8], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                                _v = 0;
                                                PyErr_Clear();
                                            }else {
                                                _v = 1;
                                            }
                                        }
                                        if (_v) {
                                            {
                                                void *ptr;
                                                if (SWIG_ConvertPtr(argv[9], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                                    _v = 0;
                                                    PyErr_Clear();
                                                }else {
                                                    _v = 1;
                                                }
                                            }
                                            if (_v) {
                                                {
                                                    void *ptr;
                                                    if (SWIG_ConvertPtr(argv[10], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                                        _v = 0;
                                                        PyErr_Clear();
                                                    }else {
                                                        _v = 1;
                                                    }
                                                }
                                                if (_v) {
                                                    {
                                                        void *ptr;
                                                        if (SWIG_ConvertPtr(argv[11], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                                            _v = 0;
                                                            PyErr_Clear();
                                                        }else {
                                                            _v = 1;
                                                        }
                                                    }
                                                    if (_v) {
                                                        return _wrap_CMMDBFile_PutAtom__SWIG_0(self,args);
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBFile_PutAtom'");
    return NULL;
}


static PyObject *_wrap_CMMDBFile_RemoveAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBFile_RemoveAtom",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveAtom(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_FinishStructEdit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_FinishStructEdit",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FinishStructEdit();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_TrimModelTable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_TrimModelTable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->TrimModelTable();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_DeleteModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBFile_DeleteModel",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteModel(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_DeleteAllModels(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_DeleteAllModels",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllModels();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetNewChainID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 = (int) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois|i:CMMDBFile_GetNewChainID",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->GetNewChainID(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_CrystReady(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_CrystReady",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CrystReady();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_isCrystInfo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_isCrystInfo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isCrystInfo();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_isSpaceGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_isSpaceGroup",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isSpaceGroup();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_isTransfMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_isTransfMatrix",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isTransfMatrix();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_isScaleMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_isScaleMatrix",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isScaleMatrix();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_isNCSMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_isNCSMatrix",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isNCSMatrix();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetNumberOfSymOps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_GetNumberOfSymOps",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfSymOps();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetSymOp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBFile_GetSymOp",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetSymOp(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_RegisterUDInteger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CMMDBFile_RegisterUDInteger",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->RegisterUDInteger(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_RegisterUDReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CMMDBFile_RegisterUDReal",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->RegisterUDReal(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_RegisterUDString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CMMDBFile_RegisterUDString",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->RegisterUDString(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetUDDHandle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CMMDBFile_GetUDDHandle",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetUDDHandle(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_SetSyminfoLib(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMDBFile_SetSyminfoLib",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetSyminfoLib(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetSyminfoLib(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_GetSyminfoLib",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetSyminfoLib();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_SetSpaceGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMDBFile_SetSpaceGroup",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->SetSpaceGroup(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetSpaceGroup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_GetSpaceGroup",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetSpaceGroup();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetAtomStatistics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    SAtomStat *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMDBFile_GetAtomStatistics",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        SAtomStat arg;    SAtomStat *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->GetAtomStatistics(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_SetCell(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype arg5 ;
    realtype arg6 ;
    realtype arg7 ;
    int arg8 = (int) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Odddddd|i:CMMDBFile_SetCell",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCell(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetCell(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    realtype *arg2 = 0 ;
    realtype *arg3 = 0 ;
    realtype *arg4 = 0 ;
    realtype *arg5 = 0 ;
    realtype *arg6 = 0 ;
    realtype *arg7 = 0 ;
    realtype *arg8 = 0 ;
    int *arg9 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    PyObject * obj7  = 0 ;
    PyObject * obj8  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:CMMDBFile_GetCell",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj7,(void **) &arg8, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg8 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj8,(void **) &arg9, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg9 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetCell(*arg2,*arg3,*arg4,*arg5,*arg6,*arg7,*arg8,*arg9);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetRCell(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    realtype *arg2 = 0 ;
    realtype *arg3 = 0 ;
    realtype *arg4 = 0 ;
    realtype *arg5 = 0 ;
    realtype *arg6 = 0 ;
    realtype *arg7 = 0 ;
    realtype *arg8 = 0 ;
    int *arg9 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    PyObject * obj7  = 0 ;
    PyObject * obj8  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:CMMDBFile_GetRCell",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj7,(void **) &arg8, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg8 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj8,(void **) &arg9, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg9 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetRCell(*arg2,*arg3,*arg4,*arg5,*arg6,*arg7,*arg8,*arg9);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetTMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    mat44 *arg2 = 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiii:CMMDBFile_GetTMatrix",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetTMatrix(*arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_AddNCSMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    mat33 *arg2 = 0 ;
    vect3 *arg3 = 0 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:CMMDBFile_AddNCSMatrix",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat33,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_vect3,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->AddNCSMatrix(*arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GenerateNCSMates(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_GenerateNCSMates",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GenerateNCSMates();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetEntryID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_GetEntryID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetEntryID();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_SetEntryID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMDBFile_SetEntryID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetEntryID(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetNofExpDataRecs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_GetNofExpDataRecs",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNofExpDataRecs();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetExpDataRec(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBFile_GetExpDataRec",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetExpDataRec(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetFileType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_GetFileType",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetFileType();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    PCMMDBFile arg2 = (PCMMDBFile) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMDBFile_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_SetShortBinary(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBFile_SetShortBinary",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetShortBinary();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_PutUDData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CMMDBFile_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_PutUDData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    realtype arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oid:CMMDBFile_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_PutUDData__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CMMDBFile_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_PutUDData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CMMDBFile_PutUDData__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CMMDBFile_PutUDData__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CMMDBFile_PutUDData__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBFile_PutUDData'");
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetUDData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    int *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CMMDBFile_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetUDData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    realtype *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CMMDBFile_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetUDData__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisi:CMMDBFile_GetUDData",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetUDData(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetUDData__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    int arg2 ;
    pstr *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CMMDBFile_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetUDData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBFile_GetUDData__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_realtype, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBFile_GetUDData__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBFile_GetUDData__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CMMDBFile_GetUDData__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBFile_GetUDData'");
    return NULL;
}


static PyObject *_wrap_CMMDBFile_GetStructureTitle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBFile *arg1 = (CMMDBFile *) 0 ;
    pstr *arg2 = 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMDBFile_GetStructureTitle",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)(arg1)->GetStructureTitle(*arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CMMDBFile_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMMDBFile, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_isMMDBBIN(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    byte arg2 = (byte) 0x01 ;
    int result;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"s|O:isMMDBBIN",&arg1,&obj1)) goto fail;
    if (obj1) {
        arg2 = (byte) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)isMMDBBIN(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_isPDB(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    byte arg2 = (byte) 0x01 ;
    Boolean arg3 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"s|OO:isPDB",&arg1,&obj1,&obj2)) goto fail;
    if (obj1) {
        arg2 = (byte) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj2) {
        arg3 = (Boolean) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)isPDB(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBrick_nAtoms_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBrick *arg1 = (CBrick *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CBrick_nAtoms_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nAtoms = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBrick_nAtoms_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBrick *arg1 = (CBrick *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CBrick_nAtoms_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nAtoms);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBrick_Atom_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBrick *arg1 = (CBrick *) 0 ;
    PPCAtom arg2 ;
    PPCAtom *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CBrick_Atom_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->Atom = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBrick_Atom_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBrick *arg1 = (CBrick *) 0 ;
    PPCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CBrick_Atom_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Atom);
    
    {
        PPCAtom * resultptr;
        resultptr = new PPCAtom((PPCAtom &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCAtom, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBrick_id_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBrick *arg1 = (CBrick *) 0 ;
    ivector arg2 = (ivector) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CBrick_id_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->id = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBrick_id_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBrick *arg1 = (CBrick *) 0 ;
    ivector result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CBrick_id_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (ivector) ((arg1)->id);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_ivector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CBrick(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBrick *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CBrick")) goto fail;
    result = (CBrick *)new CBrick();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CBrick, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_CBrick(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBrick *arg1 = (CBrick *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CBrick",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBrick_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBrick *arg1 = (CBrick *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CBrick_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CBrick_AddAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CBrick *arg1 = (CBrick *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CBrick_AddAtom",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddAtom(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CBrick_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CBrick, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CMBrick_nAtoms_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMBrick *arg1 = (CMBrick *) 0 ;
    ivector arg2 = (ivector) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMBrick_nAtoms_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->nAtoms = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMBrick_nAtoms_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMBrick *arg1 = (CMBrick *) 0 ;
    ivector result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMBrick_nAtoms_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (ivector) ((arg1)->nAtoms);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_ivector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMBrick_Atom_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMBrick *arg1 = (CMBrick *) 0 ;
    PPCAtom *arg2 = (PPCAtom *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMBrick_Atom_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->Atom = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMBrick_Atom_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMBrick *arg1 = (CMBrick *) 0 ;
    PPCAtom *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMBrick_Atom_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PPCAtom *) ((arg1)->Atom);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_PPCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMBrick_id_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMBrick *arg1 = (CMBrick *) 0 ;
    imatrix arg2 = (imatrix) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMBrick_id_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_imatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->id = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMBrick_id_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMBrick *arg1 = (CMBrick *) 0 ;
    imatrix result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMBrick_id_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (imatrix) ((arg1)->id);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_imatrix, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMBrick(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    CMBrick *result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:new_CMBrick",&arg1)) goto fail;
    result = (CMBrick *)new CMBrick(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMBrick, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_CMBrick(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMBrick *arg1 = (CMBrick *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMBrick",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMBrick_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMBrick *arg1 = (CMBrick *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMBrick_Clear",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Clear();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMBrick_AddAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMBrick *arg1 = (CMBrick *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:CMBrick_AddAtom",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMBrick,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddAtom(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CMBrick_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMBrick, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CGenSym__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGenSym *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CGenSym")) goto fail;
    result = (CGenSym *)new CGenSym();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CGenSym, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CGenSym__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CGenSym *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CGenSym",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CGenSym *)new CGenSym(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CGenSym, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CGenSym(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CGenSym__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CGenSym__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CGenSym'");
    return NULL;
}


static PyObject *_wrap_delete_CGenSym(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGenSym *arg1 = (CGenSym *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CGenSym",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGenSym,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGenSym_FreeMemory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGenSym *arg1 = (CGenSym *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CGenSym_FreeMemory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGenSym,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FreeMemory();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGenSym_AddSymOp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGenSym *arg1 = (CGenSym *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CGenSym_AddSymOp",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGenSym,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddSymOp(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGenSym_AddRenChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGenSym *arg1 = (CGenSym *) 0 ;
    int arg2 ;
    char *arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiss:CGenSym_AddRenChain",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGenSym,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddRenChain(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGenSym_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGenSym *arg1 = (CGenSym *) 0 ;
    PCSymOps arg2 = (PCSymOps) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CGenSym_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGenSym,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSymOps,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CGenSym_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CGenSym, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CMContact_nStruct_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMContact *arg1 = (CMContact *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMContact_nStruct_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nStruct = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMContact_nStruct_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMContact *arg1 = (CMContact *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMContact_nStruct_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nStruct);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMContact_contactID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMContact *arg1 = (CMContact *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMContact_contactID_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->contactID = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMContact_contactID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMContact *arg1 = (CMContact *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMContact_contactID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->contactID);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMContact_nAtoms_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMContact *arg1 = (CMContact *) 0 ;
    ivector arg2 = (ivector) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMContact_nAtoms_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->nAtoms = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMContact_nAtoms_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMContact *arg1 = (CMContact *) 0 ;
    ivector result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMContact_nAtoms_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (ivector) ((arg1)->nAtoms);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_ivector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMContact_Atom_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMContact *arg1 = (CMContact *) 0 ;
    PPCAtom *arg2 = (PPCAtom *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMContact_Atom_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->Atom = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMContact_Atom_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMContact *arg1 = (CMContact *) 0 ;
    PPCAtom *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMContact_Atom_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PPCAtom *) ((arg1)->Atom);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_PPCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMContact_id_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMContact *arg1 = (CMContact *) 0 ;
    imatrix arg2 = (imatrix) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMContact_id_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_imatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->id = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMContact_id_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMContact *arg1 = (CMContact *) 0 ;
    imatrix result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMContact_id_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (imatrix) ((arg1)->id);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_imatrix, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMContact(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    CMContact *result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:new_CMContact",&arg1)) goto fail;
    result = (CMContact *)new CMContact(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMContact, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_CMContact(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMContact *arg1 = (CMContact *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMContact",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMContact_AddContact(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMContact *arg1 = (CMContact *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:CMContact_AddContact",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddContact(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CMContact_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMContact, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_DeleteMContacts(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PPCMContact *arg1 = 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DeleteMContacts",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_PPCMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    DeleteMContacts(*arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_CoorIDCode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBCoorManager_CoorIDCode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->CoorIDCode = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_CoorIDCode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBCoorManager_CoorIDCode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->CoorIDCode);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMDBCoorManager__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CMMDBCoorManager")) goto fail;
    result = (CMMDBCoorManager *)new CMMDBCoorManager();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMDBCoorManager, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMDBCoorManager__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CMMDBCoorManager *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CMMDBCoorManager",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CMMDBCoorManager *)new CMMDBCoorManager(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMDBCoorManager, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMDBCoorManager(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CMMDBCoorManager__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CMMDBCoorManager__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CMMDBCoorManager'");
    return NULL;
}


static PyObject *_wrap_delete_CMMDBCoorManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMMDBCoorManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_SetDefaultCoorID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMDBCoorManager_SetDefaultCoorID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->SetDefaultCoorID(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_RemoveBricks(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBCoorManager_RemoveBricks",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveBricks();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_MakeBricks(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PPCAtom arg2 ;
    int arg3 ;
    realtype arg4 ;
    realtype arg5 = (realtype) 6.0 ;
    PPCAtom *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOid|d:CMMDBCoorManager_MakeBricks",&obj0,&obj1,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->MakeBricks(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetBrickDimension(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:CMMDBCoorManager_GetBrickDimension",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetBrickDimension(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetBrickCoor__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int *arg5 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:CMMDBCoorManager_GetBrickCoor",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetBrickCoor(arg2,*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetBrickCoor__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    int *arg5 = 0 ;
    int *arg6 = 0 ;
    int *arg7 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OdddOOO:CMMDBCoorManager_GetBrickCoor",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetBrickCoor(arg2,arg3,arg4,*arg5,*arg6,*arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetBrickCoor(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[8];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 7); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_GetBrickCoor__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CMMDBCoorManager_GetBrickCoor__SWIG_1(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetBrickCoor'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetBrick(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PCBrick result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:CMMDBCoorManager_GetBrick",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCBrick)(arg1)->GetBrick(arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCBrick, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_RemoveMBricks(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBCoorManager_RemoveMBricks",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveMBricks();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_MakeMBricks(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PPCAtom *arg2 = (PPCAtom *) 0 ;
    ivector arg3 = (ivector) 0 ;
    int arg4 ;
    realtype arg5 ;
    realtype arg6 = (realtype) 6.0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOid|d:CMMDBCoorManager_MakeMBricks",&obj0,&obj1,&obj2,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeMBricks(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetMBrickDimension(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:CMMDBCoorManager_GetMBrickDimension",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetMBrickDimension(*arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetMBrickCoor__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int *arg5 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:CMMDBCoorManager_GetMBrickCoor",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetMBrickCoor(arg2,*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetMBrickCoor__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    int *arg5 = 0 ;
    int *arg6 = 0 ;
    int *arg7 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OdddOOO:CMMDBCoorManager_GetMBrickCoor",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetMBrickCoor(arg2,arg3,arg4,*arg5,*arg6,*arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetMBrickCoor(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[8];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 7); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_GetMBrickCoor__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CMMDBCoorManager_GetMBrickCoor__SWIG_1(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetMBrickCoor'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetMBrick(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PCMBrick result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:CMMDBCoorManager_GetMBrick",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCMBrick)(arg1)->GetMBrick(arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCMBrick, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfModels(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBCoorManager_GetNumberOfModels",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfModels();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetModel__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    PCModel result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBCoorManager_GetModel",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCModel)(arg1)->GetModel(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCModel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetModel__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    pstr arg2 ;
    PCModel result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMDBCoorManager_GetModel",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCModel)(arg1)->GetModel(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCModel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetModel(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMDBCoorManager_GetModel__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMDBCoorManager_GetModel__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetModel'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetModelTable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PPCModel *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CMMDBCoorManager_GetModelTable",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetModelTable(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMDBCoorManager_DeleteModel",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteModel(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_AddModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PCModel arg2 = (PCModel) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMDBCoorManager_AddModel",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddModel(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_InsModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PCModel arg2 = (PCModel) 0 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CMMDBCoorManager_InsModel",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->InsModel(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_RotateModels(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:CMMDBCoorManager_RotateModels",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RotateModels(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_SwapModels(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CMMDBCoorManager_SwapModels",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SwapModels(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfChains__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBCoorManager_GetNumberOfChains",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfChains(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfChains__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMDBCoorManager_GetNumberOfChains",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfChains(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfChains(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMDBCoorManager_GetNumberOfChains__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMDBCoorManager_GetNumberOfChains__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetNumberOfChains'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetChain__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    PCChain result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CMMDBCoorManager_GetChain",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCChain)(arg1)->GetChain(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCChain, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetChain__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    PCChain result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CMMDBCoorManager_GetChain",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCChain)(arg1)->GetChain(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCChain, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetChain__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    pstr arg2 ;
    PCChain result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMDBCoorManager_GetChain",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCChain)(arg1)->GetChain(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCChain, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetChain(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMDBCoorManager_GetChain__SWIG_2(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBCoorManager_GetChain__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CMMDBCoorManager_GetChain__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetChain'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetChainTable__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    PPCChain *arg3 = 0 ;
    int *arg4 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOO:CMMDBCoorManager_GetChainTable",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PPCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetChainTable(arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetChainTable__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    pstr arg2 ;
    PPCChain *arg3 = 0 ;
    int *arg4 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOO:CMMDBCoorManager_GetChainTable",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PPCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetChainTable(arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetChainTable(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCChain, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_GetChainTable__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCChain, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_GetChainTable__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetChainTable'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteChain__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CMMDBCoorManager_DeleteChain",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteChain(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteChain__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CMMDBCoorManager_DeleteChain",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteChain(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteChain(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBCoorManager_DeleteChain__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CMMDBCoorManager_DeleteChain__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_DeleteChain'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllChains__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBCoorManager_DeleteAllChains",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllChains(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllChains__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBCoorManager_DeleteAllChains",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllChains();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllChains(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_CMMDBCoorManager_DeleteAllChains__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMDBCoorManager_DeleteAllChains__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_DeleteAllChains'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_AddChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    PCChain arg3 = (PCChain) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CMMDBCoorManager_AddChain",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddChain(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfResidues__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CMMDBCoorManager_GetNumberOfResidues",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfResidues(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfResidues__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CMMDBCoorManager_GetNumberOfResidues",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfResidues(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfResidues__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMDBCoorManager_GetNumberOfResidues",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfResidues(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfResidues(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMDBCoorManager_GetNumberOfResidues__SWIG_2(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBCoorManager_GetNumberOfResidues__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CMMDBCoorManager_GetNumberOfResidues__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetNumberOfResidues'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidue__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisis:CMMDBCoorManager_GetResidue",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCResidue)(arg1)->GetResidue(arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidue__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiis:CMMDBCoorManager_GetResidue",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCResidue)(arg1)->GetResidue(arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidue__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisi:CMMDBCoorManager_GetResidue",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCResidue)(arg1)->GetResidue(arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidue__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:CMMDBCoorManager_GetResidue",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCResidue)(arg1)->GetResidue(arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidue__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    pstr arg2 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMDBCoorManager_GetResidue",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCResidue)(arg1)->GetResidue(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidue(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMDBCoorManager_GetResidue__SWIG_4(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_GetResidue__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_GetResidue__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_GetResidue__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_GetResidue__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetResidue'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidueNo__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisis:CMMDBCoorManager_GetResidueNo",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetResidueNo(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidueNo__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiis:CMMDBCoorManager_GetResidueNo",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetResidueNo(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidueNo(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_GetResidueNo__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_GetResidueNo__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetResidueNo'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidueTable__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PPCResidue *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CMMDBCoorManager_GetResidueTable",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetResidueTable(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidueTable__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    PPCResidue *arg4 = 0 ;
    int *arg5 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisOO:CMMDBCoorManager_GetResidueTable",&obj0,&arg2,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_PPCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetResidueTable(arg2,arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidueTable__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    PPCResidue *arg4 = 0 ;
    int *arg5 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiOO:CMMDBCoorManager_GetResidueTable",&obj0,&arg2,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_PPCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetResidueTable(arg2,arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidueTable__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    pstr arg2 ;
    PPCResidue *arg3 = 0 ;
    int *arg4 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOO:CMMDBCoorManager_GetResidueTable",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PPCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetResidueTable(arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetResidueTable(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_PPCResidue, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBCoorManager_GetResidueTable__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCResidue, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_GetResidueTable__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_PPCResidue, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_GetResidueTable__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_PPCResidue, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_GetResidueTable__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetResidueTable'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteResidue__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisis:CMMDBCoorManager_DeleteResidue",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteResidue(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteResidue__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisi:CMMDBCoorManager_DeleteResidue",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteResidue(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteResidue__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiis:CMMDBCoorManager_DeleteResidue",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteResidue(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteResidue__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:CMMDBCoorManager_DeleteResidue",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteResidue(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteResidue(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_DeleteResidue__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_DeleteResidue__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_DeleteResidue__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_DeleteResidue__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_DeleteResidue'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllResidues__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CMMDBCoorManager_DeleteAllResidues",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllResidues(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllResidues__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CMMDBCoorManager_DeleteAllResidues",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllResidues(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllResidues__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBCoorManager_DeleteAllResidues",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllResidues(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllResidues__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBCoorManager_DeleteAllResidues",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllResidues();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllResidues(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_CMMDBCoorManager_DeleteAllResidues__SWIG_3(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMDBCoorManager_DeleteAllResidues__SWIG_2(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBCoorManager_DeleteAllResidues__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CMMDBCoorManager_DeleteAllResidues__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_DeleteAllResidues'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteSolvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBCoorManager_DeleteSolvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteSolvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_AddResidue__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    PCResidue arg4 = (PCResidue) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisO:CMMDBCoorManager_AddResidue",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddResidue(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_AddResidue__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    PCResidue arg4 = (PCResidue) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiO:CMMDBCoorManager_AddResidue",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddResidue(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_AddResidue(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_PCResidue, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_AddResidue__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_PCResidue, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_AddResidue__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_AddResidue'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfAtoms__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBCoorManager_GetNumberOfAtoms",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfAtoms__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisis:CMMDBCoorManager_GetNumberOfAtoms",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfAtoms__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiis:CMMDBCoorManager_GetNumberOfAtoms",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfAtoms__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisi:CMMDBCoorManager_GetNumberOfAtoms",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfAtoms__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:CMMDBCoorManager_GetNumberOfAtoms",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfAtoms__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMDBCoorManager_GetNumberOfAtoms",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetNumberOfAtoms(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_CMMDBCoorManager_GetNumberOfAtoms__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMDBCoorManager_GetNumberOfAtoms__SWIG_5(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_GetNumberOfAtoms__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_GetNumberOfAtoms__SWIG_4(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_GetNumberOfAtoms__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_GetNumberOfAtoms__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetNumberOfAtoms'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    char *arg8 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    PyObject * obj7  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisisOOO:CMMDBCoorManager_GetAtom",&obj0,&arg2,&arg3,&arg4,&arg5,&obj5,&obj6,&obj7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    {
        if (!PyString_Check(obj7)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg8 = PyString_AsString(obj7);
    }
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    int arg6 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisisi:CMMDBCoorManager_GetAtom",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtom__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisiOOO:CMMDBCoorManager_GetAtom",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtom__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    int arg5 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisii:CMMDBCoorManager_GetAtom",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtom__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    char *arg8 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    PyObject * obj7  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiisOOO:CMMDBCoorManager_GetAtom",&obj0,&arg2,&arg3,&arg4,&arg5,&obj5,&obj6,&obj7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    {
        if (!PyString_Check(obj7)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg8 = PyString_AsString(obj7);
    }
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtom__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    int arg6 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiisi:CMMDBCoorManager_GetAtom",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtom__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiiOOO:CMMDBCoorManager_GetAtom",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtom__SWIG_7(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:CMMDBCoorManager_GetAtom",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtom__SWIG_8(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    pstr arg2 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMDBCoorManager_GetAtom",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom)(arg1)->GetAtom(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[9];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 8); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMDBCoorManager_GetAtom__SWIG_8(self,args);
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_GetAtom__SWIG_3(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_GetAtom__SWIG_7(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_CMMDBCoorManager_GetAtom__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_CMMDBCoorManager_GetAtom__SWIG_5(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CMMDBCoorManager_GetAtom__SWIG_2(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CMMDBCoorManager_GetAtom__SWIG_6(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 8) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    {
                                        void *ptr;
                                        if (SWIG_ConvertPtr(argv[7], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                            _v = 0;
                                            PyErr_Clear();
                                        }else {
                                            _v = 1;
                                        }
                                    }
                                    if (_v) {
                                        return _wrap_CMMDBCoorManager_GetAtom__SWIG_0(self,args);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 8) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    {
                                        void *ptr;
                                        if (SWIG_ConvertPtr(argv[7], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                            _v = 0;
                                            PyErr_Clear();
                                        }else {
                                            _v = 1;
                                        }
                                    }
                                    if (_v) {
                                        return _wrap_CMMDBCoorManager_GetAtom__SWIG_4(self,args);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetAtom'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PPCAtom *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CMMDBCoorManager_GetAtomTable",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    PPCAtom *arg6 = 0 ;
    int *arg7 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisisOO:CMMDBCoorManager_GetAtomTable",&obj0,&arg2,&arg3,&arg4,&arg5,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(arg2,arg3,arg4,arg5,*arg6,*arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    PPCAtom *arg6 = 0 ;
    int *arg7 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiisOO:CMMDBCoorManager_GetAtomTable",&obj0,&arg2,&arg3,&arg4,&arg5,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(arg2,arg3,arg4,arg5,*arg6,*arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    PPCAtom *arg5 = 0 ;
    int *arg6 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisiOO:CMMDBCoorManager_GetAtomTable",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(arg2,arg3,arg4,*arg5,*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PPCAtom *arg5 = 0 ;
    int *arg6 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiiOO:CMMDBCoorManager_GetAtomTable",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(arg2,arg3,arg4,*arg5,*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    pstr arg2 ;
    PPCAtom *arg3 = 0 ;
    int *arg4 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOO:CMMDBCoorManager_GetAtomTable",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[8];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 7); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBCoorManager_GetAtomTable__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_GetAtomTable__SWIG_5(self,args);
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CMMDBCoorManager_GetAtomTable__SWIG_3(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CMMDBCoorManager_GetAtomTable__SWIG_4(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CMMDBCoorManager_GetAtomTable__SWIG_1(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CMMDBCoorManager_GetAtomTable__SWIG_2(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetAtomTable'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable1__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PPCAtom *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CMMDBCoorManager_GetAtomTable1",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable1(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable1__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    PPCAtom *arg6 = 0 ;
    int *arg7 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisisOO:CMMDBCoorManager_GetAtomTable1",&obj0,&arg2,&arg3,&arg4,&arg5,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable1(arg2,arg3,arg4,arg5,*arg6,*arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable1__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    PPCAtom *arg6 = 0 ;
    int *arg7 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiisOO:CMMDBCoorManager_GetAtomTable1",&obj0,&arg2,&arg3,&arg4,&arg5,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable1(arg2,arg3,arg4,arg5,*arg6,*arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable1__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    PPCAtom *arg5 = 0 ;
    int *arg6 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisiOO:CMMDBCoorManager_GetAtomTable1",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable1(arg2,arg3,arg4,*arg5,*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable1__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PPCAtom *arg5 = 0 ;
    int *arg6 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiiOO:CMMDBCoorManager_GetAtomTable1",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable1(arg2,arg3,arg4,*arg5,*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable1__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    pstr arg2 ;
    PPCAtom *arg3 = 0 ;
    int *arg4 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOO:CMMDBCoorManager_GetAtomTable1",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable1(arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GetAtomTable1(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[8];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 7); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBCoorManager_GetAtomTable1__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_GetAtomTable1__SWIG_5(self,args);
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CMMDBCoorManager_GetAtomTable1__SWIG_3(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CMMDBCoorManager_GetAtomTable1__SWIG_4(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CMMDBCoorManager_GetAtomTable1__SWIG_1(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CMMDBCoorManager_GetAtomTable1__SWIG_2(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_GetAtomTable1'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    char *arg8 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    PyObject * obj7  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisisOOO:CMMDBCoorManager_DeleteAtom",&obj0,&arg2,&arg3,&arg4,&arg5,&obj5,&obj6,&obj7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    {
        if (!PyString_Check(obj7)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg8 = PyString_AsString(obj7);
    }
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    int arg6 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisisi:CMMDBCoorManager_DeleteAtom",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAtom__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisiOOO:CMMDBCoorManager_DeleteAtom",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAtom__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    int arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisii:CMMDBCoorManager_DeleteAtom",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAtom__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    char *arg8 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    PyObject * obj7  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiisOOO:CMMDBCoorManager_DeleteAtom",&obj0,&arg2,&arg3,&arg4,&arg5,&obj5,&obj6,&obj7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    {
        if (!PyString_Check(obj7)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg8 = PyString_AsString(obj7);
    }
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAtom__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    int arg6 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiisi:CMMDBCoorManager_DeleteAtom",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAtom__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiiOOO:CMMDBCoorManager_DeleteAtom",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAtom__SWIG_7(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:CMMDBCoorManager_DeleteAtom",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[9];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 8); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_DeleteAtom__SWIG_3(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_DeleteAtom__SWIG_7(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_CMMDBCoorManager_DeleteAtom__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_CMMDBCoorManager_DeleteAtom__SWIG_5(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CMMDBCoorManager_DeleteAtom__SWIG_2(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CMMDBCoorManager_DeleteAtom__SWIG_6(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 8) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    {
                                        void *ptr;
                                        if (SWIG_ConvertPtr(argv[7], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                            _v = 0;
                                            PyErr_Clear();
                                        }else {
                                            _v = 1;
                                        }
                                    }
                                    if (_v) {
                                        return _wrap_CMMDBCoorManager_DeleteAtom__SWIG_0(self,args);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 8) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    {
                                        void *ptr;
                                        if (SWIG_ConvertPtr(argv[7], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                            _v = 0;
                                            PyErr_Clear();
                                        }else {
                                            _v = 1;
                                        }
                                    }
                                    if (_v) {
                                        return _wrap_CMMDBCoorManager_DeleteAtom__SWIG_4(self,args);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_DeleteAtom'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisis:CMMDBCoorManager_DeleteAllAtoms",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisi:CMMDBCoorManager_DeleteAllAtoms",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CMMDBCoorManager_DeleteAllAtoms",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiis:CMMDBCoorManager_DeleteAllAtoms",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:CMMDBCoorManager_DeleteAllAtoms",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CMMDBCoorManager_DeleteAllAtoms",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBCoorManager_DeleteAllAtoms",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_7(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBCoorManager_DeleteAllAtoms",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAllAtoms(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_7(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_6(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_5(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_4(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_DeleteAllAtoms__SWIG_3(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_DeleteAllAtoms'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_DeleteAltLocs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBCoorManager_DeleteAltLocs",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAltLocs();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_AddAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    char *arg5 ;
    PCAtom arg6 = (PCAtom) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisisO:CMMDBCoorManager_AddAtom",&obj0,&arg2,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddAtom(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_AddAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    char *arg3 ;
    int arg4 ;
    PCAtom arg5 = (PCAtom) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OisiO:CMMDBCoorManager_AddAtom",&obj0,&arg2,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddAtom(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_AddAtom__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    char *arg5 ;
    PCAtom arg6 = (PCAtom) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiisO:CMMDBCoorManager_AddAtom",&obj0,&arg2,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddAtom(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_AddAtom__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PCAtom arg5 = (PCAtom) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiiO:CMMDBCoorManager_AddAtom",&obj0,&arg2,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddAtom(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_AddAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_AddAtom__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMDBCoorManager_AddAtom__SWIG_3(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CMMDBCoorManager_AddAtom__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CMMDBCoorManager_AddAtom__SWIG_2(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_AddAtom'");
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_GenerateSymMates(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PCGenSym arg2 = (PCGenSym) NULL ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:CMMDBCoorManager_GenerateSymMates",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCGenSym,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (int)(arg1)->GenerateSymMates(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_ApplyTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    mat44 *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMDBCoorManager_ApplyTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ApplyTransform(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_Frac2Orth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype *arg5 = 0 ;
    realtype *arg6 = 0 ;
    realtype *arg7 = 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OdddOOO:CMMDBCoorManager_Frac2Orth",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->Frac2Orth(arg2,arg3,arg4,*arg5,*arg6,*arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_Orth2Frac(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype *arg5 = 0 ;
    realtype *arg6 = 0 ;
    realtype *arg7 = 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OdddOOO:CMMDBCoorManager_Orth2Frac",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Boolean)(arg1)->Orth2Frac(arg2,arg3,arg4,*arg5,*arg6,*arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_SeekContacts__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PPCAtom arg2 ;
    int arg3 ;
    int arg4 ;
    realtype arg5 ;
    realtype arg6 ;
    int arg7 ;
    PSContact *arg8 = 0 ;
    int *arg9 = 0 ;
    int arg10 = (int) 0 ;
    long arg11 = (long) 0 ;
    PPCAtom *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj7  = 0 ;
    PyObject * obj8  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiddiOO|il:CMMDBCoorManager_SeekContacts",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6,&arg7,&obj7,&obj8,&arg10,&arg11)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    {
        PSContact arg;    PSContact *argp;    if ((SWIG_ConvertPtr(obj7,(void **) &argp, SWIGTYPE_p_PSContact,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg8 = &arg;  
    }
    if ((SWIG_ConvertPtr(obj8,(void **) &arg9, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg9 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SeekContacts(arg2,arg3,arg4,arg5,arg6,arg7,*arg8,*arg9,arg10,arg11);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_SeekContacts__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PCAtom arg2 = (PCAtom) 0 ;
    PPCAtom arg3 ;
    int arg4 ;
    realtype arg5 ;
    realtype arg6 ;
    int arg7 ;
    PSContact *arg8 = 0 ;
    int *arg9 = 0 ;
    int arg10 = (int) 0 ;
    long arg11 = (long) 0 ;
    PPCAtom *argp3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj7  = 0 ;
    PyObject * obj8  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOiddiOO|il:CMMDBCoorManager_SeekContacts",&obj0,&obj1,&obj2,&arg4,&arg5,&arg6,&arg7,&obj7,&obj8,&arg10,&arg11)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        PSContact arg;    PSContact *argp;    if ((SWIG_ConvertPtr(obj7,(void **) &argp, SWIGTYPE_p_PSContact,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg8 = &arg;  
    }
    if ((SWIG_ConvertPtr(obj8,(void **) &arg9, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg9 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SeekContacts(arg2,arg3,arg4,arg5,arg6,arg7,*arg8,*arg9,arg10,arg11);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_SeekContacts__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PPCAtom arg2 ;
    int arg3 ;
    PPCAtom arg4 ;
    int arg5 ;
    realtype arg6 ;
    realtype arg7 ;
    int arg8 ;
    PSContact *arg9 = 0 ;
    int *arg10 = 0 ;
    int arg11 = (int) 0 ;
    mat44 *arg12 = (mat44 *) NULL ;
    long arg13 = (long) 0 ;
    int arg14 = (int) 0 ;
    PPCAtom *argp2 ;
    PPCAtom *argp4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj8  = 0 ;
    PyObject * obj9  = 0 ;
    PyObject * obj11  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiOiddiOO|iOli:CMMDBCoorManager_SeekContacts",&obj0,&obj1,&arg3,&obj3,&arg5,&arg6,&arg7,&arg8,&obj8,&obj9,&arg11,&obj11,&arg13,&arg14)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj3,(void **) &argp4, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg4 = *argp4; 
    {
        PSContact arg;    PSContact *argp;    if ((SWIG_ConvertPtr(obj8,(void **) &argp, SWIGTYPE_p_PSContact,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg9 = &arg;  
    }
    if ((SWIG_ConvertPtr(obj9,(void **) &arg10, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg10 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj11) {
        if ((SWIG_ConvertPtr(obj11,(void **) &arg12, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    (arg1)->SeekContacts(arg2,arg3,arg4,arg5,arg6,arg7,arg8,*arg9,*arg10,arg11,arg12,arg13,arg14);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_SeekContacts__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBCoorManager *arg1 = (CMMDBCoorManager *) 0 ;
    PPCAtom arg2 ;
    int arg3 ;
    PPCAtom *arg4 = (PPCAtom *) 0 ;
    ivector arg5 = (ivector) 0 ;
    int arg6 ;
    realtype arg7 ;
    realtype arg8 ;
    PPCMContact *arg9 = 0 ;
    int arg10 = (int) 0 ;
    PPCAtom *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj8  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiOOiddO|i:CMMDBCoorManager_SeekContacts",&obj0,&obj1,&arg3,&obj3,&obj4,&arg6,&arg7,&arg8,&obj8,&arg10)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBCoorManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj8,(void **) &arg9, SWIGTYPE_p_PPCMContact,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg9 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SeekContacts(arg2,arg3,arg4,arg5,arg6,arg7,arg8,*arg9,arg10);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBCoorManager_SeekContacts(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[15];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 14); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 9) && (argc <= 10)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_ivector, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyFloat_Check(argv[6]) || PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    {
                                        _v = (PyFloat_Check(argv[7]) || PyInt_Check(argv[7]) || PyLong_Check(argv[7])) ? 1 : 0;
                                    }
                                    if (_v) {
                                        {
                                            void *ptr;
                                            if (SWIG_ConvertPtr(argv[8], (void **) &ptr, SWIGTYPE_p_PPCMContact, 0) == -1) {
                                                _v = 0;
                                                PyErr_Clear();
                                            }else {
                                                _v = 1;
                                            }
                                        }
                                        if (_v) {
                                            if (argc <= 9) {
                                                return _wrap_CMMDBCoorManager_SeekContacts__SWIG_3(self,args);
                                            }
                                            {
                                                _v = (PyInt_Check(argv[9]) || PyLong_Check(argv[9])) ? 1 : 0;
                                            }
                                            if (_v) {
                                                return _wrap_CMMDBCoorManager_SeekContacts__SWIG_3(self,args);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 9) && (argc <= 11)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyFloat_Check(argv[4]) || PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyFloat_Check(argv[5]) || PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    {
                                        void *ptr;
                                        if (SWIG_ConvertPtr(argv[7], (void **) &ptr, SWIGTYPE_p_PSContact, 0) == -1) {
                                            _v = 0;
                                            PyErr_Clear();
                                        }else {
                                            _v = 1;
                                        }
                                    }
                                    if (_v) {
                                        {
                                            void *ptr;
                                            if (SWIG_ConvertPtr(argv[8], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                                _v = 0;
                                                PyErr_Clear();
                                            }else {
                                                _v = 1;
                                            }
                                        }
                                        if (_v) {
                                            if (argc <= 9) {
                                                return _wrap_CMMDBCoorManager_SeekContacts__SWIG_1(self,args);
                                            }
                                            {
                                                _v = (PyInt_Check(argv[9]) || PyLong_Check(argv[9])) ? 1 : 0;
                                            }
                                            if (_v) {
                                                if (argc <= 10) {
                                                    return _wrap_CMMDBCoorManager_SeekContacts__SWIG_1(self,args);
                                                }
                                                {
                                                    _v = (PyInt_Check(argv[10]) || PyLong_Check(argv[10])) ? 1 : 0;
                                                }
                                                if (_v) {
                                                    return _wrap_CMMDBCoorManager_SeekContacts__SWIG_1(self,args);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 9) && (argc <= 11)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyFloat_Check(argv[4]) || PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyFloat_Check(argv[5]) || PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    {
                                        void *ptr;
                                        if (SWIG_ConvertPtr(argv[7], (void **) &ptr, SWIGTYPE_p_PSContact, 0) == -1) {
                                            _v = 0;
                                            PyErr_Clear();
                                        }else {
                                            _v = 1;
                                        }
                                    }
                                    if (_v) {
                                        {
                                            void *ptr;
                                            if (SWIG_ConvertPtr(argv[8], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                                _v = 0;
                                                PyErr_Clear();
                                            }else {
                                                _v = 1;
                                            }
                                        }
                                        if (_v) {
                                            if (argc <= 9) {
                                                return _wrap_CMMDBCoorManager_SeekContacts__SWIG_0(self,args);
                                            }
                                            {
                                                _v = (PyInt_Check(argv[9]) || PyLong_Check(argv[9])) ? 1 : 0;
                                            }
                                            if (_v) {
                                                if (argc <= 10) {
                                                    return _wrap_CMMDBCoorManager_SeekContacts__SWIG_0(self,args);
                                                }
                                                {
                                                    _v = (PyInt_Check(argv[10]) || PyLong_Check(argv[10])) ? 1 : 0;
                                                }
                                                if (_v) {
                                                    return _wrap_CMMDBCoorManager_SeekContacts__SWIG_0(self,args);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 10) && (argc <= 14)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBCoorManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyFloat_Check(argv[5]) || PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyFloat_Check(argv[6]) || PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    {
                                        _v = (PyInt_Check(argv[7]) || PyLong_Check(argv[7])) ? 1 : 0;
                                    }
                                    if (_v) {
                                        {
                                            void *ptr;
                                            if (SWIG_ConvertPtr(argv[8], (void **) &ptr, SWIGTYPE_p_PSContact, 0) == -1) {
                                                _v = 0;
                                                PyErr_Clear();
                                            }else {
                                                _v = 1;
                                            }
                                        }
                                        if (_v) {
                                            {
                                                void *ptr;
                                                if (SWIG_ConvertPtr(argv[9], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                                    _v = 0;
                                                    PyErr_Clear();
                                                }else {
                                                    _v = 1;
                                                }
                                            }
                                            if (_v) {
                                                if (argc <= 10) {
                                                    return _wrap_CMMDBCoorManager_SeekContacts__SWIG_2(self,args);
                                                }
                                                {
                                                    _v = (PyInt_Check(argv[10]) || PyLong_Check(argv[10])) ? 1 : 0;
                                                }
                                                if (_v) {
                                                    if (argc <= 11) {
                                                        return _wrap_CMMDBCoorManager_SeekContacts__SWIG_2(self,args);
                                                    }
                                                    {
                                                        void *ptr;
                                                        if (SWIG_ConvertPtr(argv[11], (void **) &ptr, SWIGTYPE_p_mat44, 0) == -1) {
                                                            _v = 0;
                                                            PyErr_Clear();
                                                        }else {
                                                            _v = 1;
                                                        }
                                                    }
                                                    if (_v) {
                                                        if (argc <= 12) {
                                                            return _wrap_CMMDBCoorManager_SeekContacts__SWIG_2(self,args);
                                                        }
                                                        {
                                                            _v = (PyInt_Check(argv[12]) || PyLong_Check(argv[12])) ? 1 : 0;
                                                        }
                                                        if (_v) {
                                                            if (argc <= 13) {
                                                                return _wrap_CMMDBCoorManager_SeekContacts__SWIG_2(self,args);
                                                            }
                                                            {
                                                                _v = (PyInt_Check(argv[13]) || PyLong_Check(argv[13])) ? 1 : 0;
                                                            }
                                                            if (_v) {
                                                                return _wrap_CMMDBCoorManager_SeekContacts__SWIG_2(self,args);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBCoorManager_SeekContacts'");
    return NULL;
}


static PyObject * CMMDBCoorManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMMDBCoorManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_GetEulerRotMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat33 *arg1 = 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oddd:GetEulerRotMatrix",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat33,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    GetEulerRotMatrix(*arg1,arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetEulerTMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat44 *arg1 = 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype arg5 ;
    realtype arg6 ;
    realtype arg7 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Odddddd:GetEulerTMatrix",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    GetEulerTMatrix(*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_EulerRotation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PPCAtom arg1 ;
    int arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype arg5 ;
    realtype arg6 ;
    realtype arg7 ;
    realtype arg8 ;
    PPCAtom *argp1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oidddddd:EulerRotation",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    EulerRotation(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetVecRotMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat33 *arg1 = 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype arg5 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Odddd:GetVecRotMatrix",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat33,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    GetVecRotMatrix(*arg1,arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetRotParameters(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat33 *arg1 = 0 ;
    realtype *arg2 = 0 ;
    realtype *arg3 = 0 ;
    realtype *arg4 = 0 ;
    realtype *arg5 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:GetRotParameters",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat33,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    GetRotParameters(*arg1,*arg2,*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetVecTMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat44 *arg1 = 0 ;
    realtype arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype arg5 ;
    realtype arg6 ;
    realtype arg7 ;
    realtype arg8 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oddddddd:GetVecTMatrix",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    GetVecTMatrix(*arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_VectorRotation(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PPCAtom arg1 ;
    int arg2 ;
    realtype arg3 ;
    realtype arg4 ;
    realtype arg5 ;
    realtype arg6 ;
    realtype arg7 ;
    realtype arg8 ;
    realtype arg9 ;
    PPCAtom *argp1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiddddddd:VectorRotation",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    VectorRotation(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetMassCenter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PPCAtom arg1 ;
    int arg2 ;
    realtype *arg3 = 0 ;
    realtype *arg4 = 0 ;
    realtype *arg5 = 0 ;
    PPCAtom *argp1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOOO:GetMassCenter",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    GetMassCenter(arg1,arg2,*arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SuperposeAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat44 *arg1 = 0 ;
    PPCAtom arg2 ;
    int arg3 ;
    PPCAtom arg4 ;
    ivector arg5 = (ivector) NULL ;
    int result;
    PPCAtom *argp2 ;
    PPCAtom *argp4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiO|O:SuperposeAtoms",&obj0,&obj1,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj3,(void **) &argp4, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg4 = *argp4; 
    if (obj4) {
        if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (int)SuperposeAtoms(*arg1,arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SortContacts(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PSContact arg1 ;
    int arg2 ;
    int arg3 ;
    PSContact *argp1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:SortContacts",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_PSContact,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    SortContacts(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMDBSelManager__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CMMDBSelManager")) goto fail;
    result = (CMMDBSelManager *)new CMMDBSelManager();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMDBSelManager, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMDBSelManager__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CMMDBSelManager *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CMMDBSelManager",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CMMDBSelManager *)new CMMDBSelManager(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMDBSelManager, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMDBSelManager(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CMMDBSelManager__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CMMDBSelManager__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CMMDBSelManager'");
    return NULL;
}


static PyObject *_wrap_delete_CMMDBSelManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMMDBSelManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_NewSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBSelManager_NewSelection",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->NewSelection();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_DeleteSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBSelManager_DeleteSelection",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DeleteSelection(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_DeleteAllSelections(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBSelManager_DeleteAllSelections",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DeleteAllSelections();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectAtoms__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 = (int) 1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii|i:CMMDBSelManager_SelectAtoms",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SelectAtoms(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_UnselectAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:CMMDBSelManager_UnselectAtoms",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnselectAtoms(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    PCAtom arg3 = (PCAtom) 0 ;
    int arg4 = (int) 1 ;
    Boolean arg5 = (Boolean) Boolean(1) ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO|iO:CMMDBSelManager_SelectAtom",&obj0,&arg2,&obj2,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj4) {
        arg5 = (Boolean) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->SelectAtom(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_MakeSelIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBSelManager_MakeSelIndex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->MakeSelIndex(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectAtoms__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    pstr arg4 ;
    int arg5 ;
    pstr arg6 ;
    int arg7 ;
    pstr arg8 ;
    pstr arg9 ;
    pstr arg10 ;
    pstr arg11 ;
    pstr arg12 ;
    pstr arg13 ;
    pstr arg14 ;
    realtype arg15 ;
    realtype arg16 ;
    realtype arg17 ;
    realtype arg18 ;
    realtype arg19 ;
    realtype arg20 ;
    int arg21 = (int) 1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiisisisssssssdddddd|i:CMMDBSelManager_SelectAtoms",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9,&arg10,&arg11,&arg12,&arg13,&arg14,&arg15,&arg16,&arg17,&arg18,&arg19,&arg20,&arg21)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SelectAtoms(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectAtoms__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    pstr arg4 ;
    int arg5 ;
    pstr arg6 ;
    int arg7 ;
    pstr arg8 ;
    pstr arg9 ;
    pstr arg10 ;
    pstr arg11 ;
    pstr arg12 ;
    int arg13 = (int) 1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiisisisssss|i:CMMDBSelManager_SelectAtoms",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9,&arg10,&arg11,&arg12,&arg13)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SelectAtoms(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectAtoms(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[22];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 21); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 4) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_CMMDBSelManager_SelectAtoms__SWIG_0(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CMMDBSelManager_SelectAtoms__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 12) && (argc <= 13)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = PyString_Check(argv[5]) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    {
                                        _v = PyString_Check(argv[7]) ? 1 : 0;
                                    }
                                    if (_v) {
                                        {
                                            _v = PyString_Check(argv[8]) ? 1 : 0;
                                        }
                                        if (_v) {
                                            {
                                                _v = PyString_Check(argv[9]) ? 1 : 0;
                                            }
                                            if (_v) {
                                                {
                                                    _v = PyString_Check(argv[10]) ? 1 : 0;
                                                }
                                                if (_v) {
                                                    {
                                                        _v = PyString_Check(argv[11]) ? 1 : 0;
                                                    }
                                                    if (_v) {
                                                        if (argc <= 12) {
                                                            return _wrap_CMMDBSelManager_SelectAtoms__SWIG_2(self,args);
                                                        }
                                                        {
                                                            _v = (PyInt_Check(argv[12]) || PyLong_Check(argv[12])) ? 1 : 0;
                                                        }
                                                        if (_v) {
                                                            return _wrap_CMMDBSelManager_SelectAtoms__SWIG_2(self,args);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 20) && (argc <= 21)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = PyString_Check(argv[5]) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    {
                                        _v = PyString_Check(argv[7]) ? 1 : 0;
                                    }
                                    if (_v) {
                                        {
                                            _v = PyString_Check(argv[8]) ? 1 : 0;
                                        }
                                        if (_v) {
                                            {
                                                _v = PyString_Check(argv[9]) ? 1 : 0;
                                            }
                                            if (_v) {
                                                {
                                                    _v = PyString_Check(argv[10]) ? 1 : 0;
                                                }
                                                if (_v) {
                                                    {
                                                        _v = PyString_Check(argv[11]) ? 1 : 0;
                                                    }
                                                    if (_v) {
                                                        {
                                                            _v = PyString_Check(argv[12]) ? 1 : 0;
                                                        }
                                                        if (_v) {
                                                            {
                                                                _v = PyString_Check(argv[13]) ? 1 : 0;
                                                            }
                                                            if (_v) {
                                                                {
                                                                    _v = (PyFloat_Check(argv[14]) || PyInt_Check(argv[14]) || PyLong_Check(argv[14])) ? 1 : 0;
                                                                }
                                                                if (_v) {
                                                                    {
                                                                        _v = (PyFloat_Check(argv[15]) || PyInt_Check(argv[15]) || PyLong_Check(argv[15])) ? 1 : 0;
                                                                    }
                                                                    if (_v) {
                                                                        {
                                                                            _v = (PyFloat_Check(argv[16]) || PyInt_Check(argv[16]) || PyLong_Check(argv[16])) ? 1 : 0;
                                                                        }
                                                                        if (_v) {
                                                                            {
                                                                                _v = (PyFloat_Check(argv[17]) || PyInt_Check(argv[17]) || PyLong_Check(argv[17])) ? 1 : 0;
                                                                            }
                                                                            if (_v) {
                                                                                {
                                                                                    _v = (PyFloat_Check(argv[18]) || PyInt_Check(argv[18]) || PyLong_Check(argv[18])) ? 1 : 0;
                                                                                }
                                                                                if (_v) {
                                                                                    {
                                                                                        _v = (PyFloat_Check(argv[19]) || PyInt_Check(argv[19]) || PyLong_Check(argv[19])) ? 1 : 0;
                                                                                    }
                                                                                    if (_v) {
                                                                                        if (argc <= 20) {
                                                                                            return _wrap_CMMDBSelManager_SelectAtoms__SWIG_1(self,args);
                                                                                        }
                                                                                        {
                                                                                            _v = (PyInt_Check(argv[20]) || PyLong_Check(argv[20])) ? 1 : 0;
                                                                                        }
                                                                                        if (_v) {
                                                                                            return _wrap_CMMDBSelManager_SelectAtoms__SWIG_1(self,args);
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBSelManager_SelectAtoms'");
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectUDD__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    int arg7 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiiiii:CMMDBSelManager_SelectUDD",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SelectUDD(arg2,arg3,arg4,arg5,arg6,arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectUDD__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    realtype arg5 ;
    realtype arg6 ;
    int arg7 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiiddi:CMMDBSelManager_SelectUDD",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SelectUDD(arg2,arg3,arg4,arg5,arg6,arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectUDD__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    pstr arg5 ;
    int arg6 ;
    int arg7 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiisii:CMMDBSelManager_SelectUDD",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SelectUDD(arg2,arg3,arg4,arg5,arg6,arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectUDD(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[8];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 7); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_CMMDBSelManager_SelectUDD__SWIG_0(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyFloat_Check(argv[4]) || PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyFloat_Check(argv[5]) || PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_CMMDBSelManager_SelectUDD__SWIG_1(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = PyString_Check(argv[4]) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    return _wrap_CMMDBSelManager_SelectUDD__SWIG_2(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBSelManager_SelectUDD'");
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectSphere(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    realtype arg4 ;
    realtype arg5 ;
    realtype arg6 ;
    realtype arg7 ;
    int arg8 = (int) 1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiidddd|i:CMMDBSelManager_SelectSphere",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SelectSphere(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectCylinder(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    realtype arg4 ;
    realtype arg5 ;
    realtype arg6 ;
    realtype arg7 ;
    realtype arg8 ;
    realtype arg9 ;
    realtype arg10 ;
    int arg11 = (int) 1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiddddddd|i:CMMDBSelManager_SelectCylinder",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9,&arg10,&arg11)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SelectCylinder(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectSlab(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    realtype arg4 ;
    realtype arg5 ;
    realtype arg6 ;
    realtype arg7 ;
    realtype arg8 ;
    int arg9 = (int) 1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiddddd|i:CMMDBSelManager_SelectSlab",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SelectSlab(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectNeighbours(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    PPCAtom arg4 ;
    int arg5 ;
    realtype arg6 ;
    realtype arg7 ;
    int arg8 = (int) 1 ;
    PPCAtom *argp4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiOidd|i:CMMDBSelManager_SelectNeighbours",&obj0,&arg2,&arg3,&obj3,&arg5,&arg6,&arg7,&arg8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &argp4, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg4 = *argp4; 
    (arg1)->SelectNeighbours(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_GetSelLength(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBSelManager_GetSelLength",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetSelLength(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_GetSelIndex__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    PPCAtom *arg3 = 0 ;
    int *arg4 = 0 ;
    int temp4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"OiO:CMMDBSelManager_GetSelIndex",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetSelIndex(arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_GetSelIndex__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    PPCResidue *arg3 = 0 ;
    int *arg4 = 0 ;
    int temp4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"OiO:CMMDBSelManager_GetSelIndex",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PPCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetSelIndex(arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_GetSelIndex__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    PPCChain *arg3 = 0 ;
    int *arg4 = 0 ;
    int temp4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"OiO:CMMDBSelManager_GetSelIndex",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PPCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetSelIndex(arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_GetSelIndex__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    PPCModel *arg3 = 0 ;
    int *arg4 = 0 ;
    int temp4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    arg4 = &temp4;
    if(!PyArg_ParseTuple(args,(char *)"OiO:CMMDBSelManager_GetSelIndex",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PPCModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetSelIndex(arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    {
        PyObject *o = PyInt_FromLong((long) (*arg4));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_GetSelIndex(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBSelManager_GetSelIndex__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCResidue, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBSelManager_GetSelIndex__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCChain, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBSelManager_GetSelIndex__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCModel, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMDBSelManager_GetSelIndex__SWIG_3(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBSelManager_GetSelIndex'");
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_GetAtomStatistics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    SAtomStat *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CMMDBSelManager_GetAtomStatistics",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        SAtomStat arg;    SAtomStat *argp;    if ((SWIG_ConvertPtr(obj2,(void **) &argp, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg3 = &arg;  
    }
    (arg1)->GetAtomStatistics(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_Select__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    pstr arg5 ;
    int arg6 ;
    pstr arg7 ;
    int arg8 ;
    pstr arg9 ;
    pstr arg10 ;
    pstr arg11 ;
    pstr arg12 ;
    pstr arg13 ;
    pstr arg14 ;
    pstr arg15 ;
    realtype arg16 ;
    realtype arg17 ;
    realtype arg18 ;
    realtype arg19 ;
    realtype arg20 ;
    realtype arg21 ;
    int arg22 = (int) 1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiisisisssssssdddddd|i:CMMDBSelManager_Select",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9,&arg10,&arg11,&arg12,&arg13,&arg14,&arg15,&arg16,&arg17,&arg18,&arg19,&arg20,&arg21,&arg22)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Select(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_Select__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    pstr arg5 ;
    int arg6 ;
    pstr arg7 ;
    int arg8 ;
    pstr arg9 ;
    pstr arg10 ;
    pstr arg11 ;
    pstr arg12 ;
    pstr arg13 ;
    int arg14 = (int) 1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiisisisssss|i:CMMDBSelManager_Select",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9,&arg10,&arg11,&arg12,&arg13,&arg14)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Select(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_Select__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    pstr arg4 ;
    int arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiisi:CMMDBSelManager_Select",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Select(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_Select__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 = (int) 1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii|i:CMMDBSelManager_Select",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Select(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_Select(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[23];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 22); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 4) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_CMMDBSelManager_Select__SWIG_3(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CMMDBSelManager_Select__SWIG_3(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CMMDBSelManager_Select__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 13) && (argc <= 14)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = PyString_Check(argv[4]) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = PyString_Check(argv[6]) ? 1 : 0;
                                }
                                if (_v) {
                                    {
                                        _v = (PyInt_Check(argv[7]) || PyLong_Check(argv[7])) ? 1 : 0;
                                    }
                                    if (_v) {
                                        {
                                            _v = PyString_Check(argv[8]) ? 1 : 0;
                                        }
                                        if (_v) {
                                            {
                                                _v = PyString_Check(argv[9]) ? 1 : 0;
                                            }
                                            if (_v) {
                                                {
                                                    _v = PyString_Check(argv[10]) ? 1 : 0;
                                                }
                                                if (_v) {
                                                    {
                                                        _v = PyString_Check(argv[11]) ? 1 : 0;
                                                    }
                                                    if (_v) {
                                                        {
                                                            _v = PyString_Check(argv[12]) ? 1 : 0;
                                                        }
                                                        if (_v) {
                                                            if (argc <= 13) {
                                                                return _wrap_CMMDBSelManager_Select__SWIG_1(self,args);
                                                            }
                                                            {
                                                                _v = (PyInt_Check(argv[13]) || PyLong_Check(argv[13])) ? 1 : 0;
                                                            }
                                                            if (_v) {
                                                                return _wrap_CMMDBSelManager_Select__SWIG_1(self,args);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((argc >= 21) && (argc <= 22)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMDBSelManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = PyString_Check(argv[4]) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                {
                                    _v = PyString_Check(argv[6]) ? 1 : 0;
                                }
                                if (_v) {
                                    {
                                        _v = (PyInt_Check(argv[7]) || PyLong_Check(argv[7])) ? 1 : 0;
                                    }
                                    if (_v) {
                                        {
                                            _v = PyString_Check(argv[8]) ? 1 : 0;
                                        }
                                        if (_v) {
                                            {
                                                _v = PyString_Check(argv[9]) ? 1 : 0;
                                            }
                                            if (_v) {
                                                {
                                                    _v = PyString_Check(argv[10]) ? 1 : 0;
                                                }
                                                if (_v) {
                                                    {
                                                        _v = PyString_Check(argv[11]) ? 1 : 0;
                                                    }
                                                    if (_v) {
                                                        {
                                                            _v = PyString_Check(argv[12]) ? 1 : 0;
                                                        }
                                                        if (_v) {
                                                            {
                                                                _v = PyString_Check(argv[13]) ? 1 : 0;
                                                            }
                                                            if (_v) {
                                                                {
                                                                    _v = PyString_Check(argv[14]) ? 1 : 0;
                                                                }
                                                                if (_v) {
                                                                    {
                                                                        _v = (PyFloat_Check(argv[15]) || PyInt_Check(argv[15]) || PyLong_Check(argv[15])) ? 1 : 0;
                                                                    }
                                                                    if (_v) {
                                                                        {
                                                                            _v = (PyFloat_Check(argv[16]) || PyInt_Check(argv[16]) || PyLong_Check(argv[16])) ? 1 : 0;
                                                                        }
                                                                        if (_v) {
                                                                            {
                                                                                _v = (PyFloat_Check(argv[17]) || PyInt_Check(argv[17]) || PyLong_Check(argv[17])) ? 1 : 0;
                                                                            }
                                                                            if (_v) {
                                                                                {
                                                                                    _v = (PyFloat_Check(argv[18]) || PyInt_Check(argv[18]) || PyLong_Check(argv[18])) ? 1 : 0;
                                                                                }
                                                                                if (_v) {
                                                                                    {
                                                                                        _v = (PyFloat_Check(argv[19]) || PyInt_Check(argv[19]) || PyLong_Check(argv[19])) ? 1 : 0;
                                                                                    }
                                                                                    if (_v) {
                                                                                        {
                                                                                            _v = (PyFloat_Check(argv[20]) || PyInt_Check(argv[20]) || PyLong_Check(argv[20])) ? 1 : 0;
                                                                                        }
                                                                                        if (_v) {
                                                                                            if (argc <= 21) {
                                                                                                return _wrap_CMMDBSelManager_Select__SWIG_0(self,args);
                                                                                            }
                                                                                            {
                                                                                                _v = (PyInt_Check(argv[21]) || PyLong_Check(argv[21])) ? 1 : 0;
                                                                                            }
                                                                                            if (_v) {
                                                                                                return _wrap_CMMDBSelManager_Select__SWIG_0(self,args);
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMDBSelManager_Select'");
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_SelectDomain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 = (int) 1 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisii|i:CMMDBSelManager_SelectDomain",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->SelectDomain(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBSelManager_DeleteSelObjects(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBSelManager *arg1 = (CMMDBSelManager *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMDBSelManager_DeleteSelObjects",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBSelManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DeleteSelObjects(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CMMDBSelManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMMDBSelManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CMMDBBondManager__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBBondManager *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CMMDBBondManager")) goto fail;
    result = (CMMDBBondManager *)new CMMDBBondManager();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMDBBondManager, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMDBBondManager__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CMMDBBondManager *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CMMDBBondManager",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CMMDBBondManager *)new CMMDBBondManager(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMDBBondManager, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMDBBondManager(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CMMDBBondManager__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CMMDBBondManager__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CMMDBBondManager'");
    return NULL;
}


static PyObject *_wrap_delete_CMMDBBondManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBBondManager *arg1 = (CMMDBBondManager *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMMDBBondManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBBondManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBBondManager_MakeBonds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBBondManager *arg1 = (CMMDBBondManager *) 0 ;
    Boolean arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMDBBondManager_MakeBonds",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBBondManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (Boolean) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->MakeBonds(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBBondManager_RemoveBonds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBBondManager *arg1 = (CMMDBBondManager *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMDBBondManager_RemoveBonds",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBBondManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveBonds();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CMMDBBondManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMMDBBondManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CMMDBManager__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBManager *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CMMDBManager")) goto fail;
    result = (CMMDBManager *)new CMMDBManager();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMDBManager, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMDBManager__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CMMDBManager *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CMMDBManager",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CMMDBManager *)new CMMDBManager(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMDBManager, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMDBManager(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CMMDBManager__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CMMDBManager__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CMMDBManager'");
    return NULL;
}


static PyObject *_wrap_delete_CMMDBManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBManager *arg1 = (CMMDBManager *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMMDBManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBManager_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBManager *arg1 = (CMMDBManager *) 0 ;
    PCMMDBManager arg2 = (PCMMDBManager) 0 ;
    word arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CMMDBManager_Copy",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMDBManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (word) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Copy(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMDBManager_Delete(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMDBManager *arg1 = (CMMDBManager *) 0 ;
    word arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMDBManager_Delete",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMDBManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Delete(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CMMDBManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMMDBManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CMMCIFCategory__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CMMCIFCategory")) goto fail;
    result = (CMMCIFCategory *)new CMMCIFCategory();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFCategory, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFCategory__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    CMMCIFCategory *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:new_CMMCIFCategory",&arg1)) goto fail;
    result = (CMMCIFCategory *)new CMMCIFCategory(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFCategory, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFCategory__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CMMCIFCategory *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CMMCIFCategory",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CMMCIFCategory *)new CMMCIFCategory(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFCategory, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFCategory(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CMMCIFCategory__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CMMCIFCategory__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_CMMCIFCategory__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CMMCIFCategory'");
    return NULL;
}


static PyObject *_wrap_delete_CMMCIFCategory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *arg1 = (CMMCIFCategory *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMMCIFCategory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFCategory_GetCategoryName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *arg1 = (CMMCIFCategory *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFCategory_GetCategoryName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetCategoryName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFCategory_GetCategoryID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *arg1 = (CMMCIFCategory *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFCategory_GetCategoryID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCategoryID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFCategory_WriteMMCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *arg1 = (CMMCIFCategory *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFCategory_WriteMMCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->WriteMMCIF(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFCategory_Optimize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *arg1 = (CMMCIFCategory *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFCategory_Optimize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Optimize();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFCategory_Sort(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *arg1 = (CMMCIFCategory *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFCategory_Sort",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Sort();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFCategory_GetTagNo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *arg1 = (CMMCIFCategory *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFCategory_GetTagNo",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetTagNo(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFCategory_AddTag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *arg1 = (CMMCIFCategory *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFCategory_AddTag",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddTag(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFCategory_GetNofTags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *arg1 = (CMMCIFCategory *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFCategory_GetNofTags",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNofTags();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFCategory_GetTag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *arg1 = (CMMCIFCategory *) 0 ;
    int arg2 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMCIFCategory_GetTag",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetTag(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFCategory_PrintTags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *arg1 = (CMMCIFCategory *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFCategory_PrintTags",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrintTags();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFCategory_CheckTags(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *arg1 = (CMMCIFCategory *) 0 ;
    pstr *arg2 = (pstr *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFCategory_CheckTags",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->CheckTags(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFCategory_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFCategory *arg1 = (CMMCIFCategory *) 0 ;
    PCMMCIFCategory arg2 = (PCMMCIFCategory) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFCategory_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CMMCIFCategory_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMMCIFCategory, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CMMCIFStruct_field_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    psvector arg2 = (psvector) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFStruct_field_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_psvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->field = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_field_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    psvector result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFStruct_field_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (psvector) ((arg1)->field);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_psvector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFStruct__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CMMCIFStruct")) goto fail;
    result = (CMMCIFStruct *)new CMMCIFStruct();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFStruct, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFStruct__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    CMMCIFStruct *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:new_CMMCIFStruct",&arg1)) goto fail;
    result = (CMMCIFStruct *)new CMMCIFStruct(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFStruct, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFStruct__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CMMCIFStruct *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CMMCIFStruct",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CMMCIFStruct *)new CMMCIFStruct(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFStruct, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFStruct(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CMMCIFStruct__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CMMCIFStruct__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_CMMCIFStruct__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CMMCIFStruct'");
    return NULL;
}


static PyObject *_wrap_delete_CMMCIFStruct(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMMCIFStruct",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_AddField(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    Boolean arg4 = (Boolean) Boolean(0) ;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss|O:CMMCIFStruct_AddField",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        arg4 = (Boolean) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->AddField(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_GetCategoryID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFStruct_GetCategoryID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCategoryID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_Optimize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFStruct_Optimize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Optimize();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_GetField(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    int arg2 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMCIFStruct_GetField",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetField(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_GetString__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    pstr *arg2 = 0 ;
    pstr arg3 ;
    Boolean arg4 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs|O:CMMCIFStruct_GetString",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj3) {
        arg4 = (Boolean) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetString(*arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_GetString__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CMMCIFStruct_GetString",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)(arg1)->GetString(arg2,*arg3);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_GetString(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFStruct, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_CMMCIFStruct_GetString__SWIG_0(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CMMCIFStruct_GetString__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFStruct, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CMMCIFStruct_GetString__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMCIFStruct_GetString'");
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_DeleteField(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFStruct_DeleteField",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteField(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_GetReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    realtype *arg2 = 0 ;
    pstr arg3 ;
    Boolean arg4 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs|O:CMMCIFStruct_GetReal",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj3) {
        arg4 = (Boolean) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetReal(*arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_GetInteger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    int *arg2 = 0 ;
    pstr arg3 ;
    Boolean arg4 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs|O:CMMCIFStruct_GetInteger",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj3) {
        arg4 = (Boolean) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetInteger(*arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_PutString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    Boolean arg4 = (Boolean) Boolean(0) ;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss|O:CMMCIFStruct_PutString",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        arg4 = (Boolean) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->PutString(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_PutDate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFStruct_PutDate",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutDate(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_PutNoData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    int arg2 ;
    pstr arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CMMCIFStruct_PutNoData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutNoData(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_PutReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    realtype arg2 ;
    pstr arg3 ;
    int arg4 = (int) 8 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ods|i:CMMCIFStruct_PutReal",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutReal(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_PutInteger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    int arg2 ;
    pstr arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CMMCIFStruct_PutInteger",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutInteger(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_WriteMMCIFStruct(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMCIFStruct_WriteMMCIFStruct",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)(arg1)->WriteMMCIFStruct(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_WriteMMCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFStruct_WriteMMCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->WriteMMCIF(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFStruct_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFStruct *arg1 = (CMMCIFStruct *) 0 ;
    PCMMCIFCategory arg2 = (PCMMCIFCategory) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFStruct_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CMMCIFStruct_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMMCIFStruct, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CMMCIFLoop__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CMMCIFLoop")) goto fail;
    result = (CMMCIFLoop *)new CMMCIFLoop();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFLoop, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFLoop__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    CMMCIFLoop *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:new_CMMCIFLoop",&arg1)) goto fail;
    result = (CMMCIFLoop *)new CMMCIFLoop(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFLoop, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFLoop__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CMMCIFLoop *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CMMCIFLoop",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CMMCIFLoop *)new CMMCIFLoop(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFLoop, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFLoop(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CMMCIFLoop__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CMMCIFLoop__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_CMMCIFLoop__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CMMCIFLoop'");
    return NULL;
}


static PyObject *_wrap_delete_CMMCIFLoop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMMCIFLoop",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_AddLoopTag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    pstr arg2 ;
    Boolean arg3 = (Boolean) Boolean(1) ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMCIFLoop_AddLoopTag",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (Boolean) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->AddLoopTag(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_AddString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    pstr arg2 ;
    Boolean arg3 = (Boolean) Boolean(0) ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMCIFLoop_AddString",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (Boolean) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->AddString(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_AddNoData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMCIFLoop_AddNoData",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddNoData(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_AddReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    realtype arg2 ;
    int arg3 = (int) 8 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od|i:CMMCIFLoop_AddReal",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddReal(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_AddInteger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMCIFLoop_AddInteger",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddInteger(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_GetLoopLength(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFLoop_GetLoopLength",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetLoopLength();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_GetField(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    int arg2 ;
    int arg3 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CMMCIFLoop_GetField",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetField(arg2,arg3);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_GetString__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    pstr *arg2 = 0 ;
    pstr arg3 ;
    int arg4 ;
    Boolean arg5 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOsi|O:CMMCIFLoop_GetString",&obj0,&obj1,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        arg5 = (Boolean) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetString(*arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_GetString__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    pstr arg2 ;
    int arg3 ;
    int *arg4 = 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsiO:CMMCIFLoop_GetString",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)(arg1)->GetString(arg2,arg3,*arg4);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_GetString(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 4) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFLoop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_CMMCIFLoop_GetString__SWIG_0(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CMMCIFLoop_GetString__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFLoop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CMMCIFLoop_GetString__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMCIFLoop_GetString'");
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_DeleteField(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    pstr arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CMMCIFLoop_DeleteField",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteField(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_DeleteRow(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMCIFLoop_DeleteRow",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteRow(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_GetReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    realtype *arg2 = 0 ;
    pstr arg3 ;
    int arg4 ;
    Boolean arg5 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOsi|O:CMMCIFLoop_GetReal",&obj0,&obj1,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        arg5 = (Boolean) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetReal(*arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_GetInteger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    int *arg2 = 0 ;
    pstr arg3 ;
    int arg4 ;
    Boolean arg5 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOsi|O:CMMCIFLoop_GetInteger",&obj0,&obj1,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        arg5 = (Boolean) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetInteger(*arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_GetSVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    psvector *arg2 = 0 ;
    pstr arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 2147483647 ;
    Boolean arg6 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs|iiO:CMMCIFLoop_GetSVector",&obj0,&obj1,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_psvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj5) {
        arg6 = (Boolean) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetSVector(*arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_GetRVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    rvector *arg2 = 0 ;
    pstr arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 2147483647 ;
    Boolean arg6 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs|iiO:CMMCIFLoop_GetRVector",&obj0,&obj1,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj5) {
        arg6 = (Boolean) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetRVector(*arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_GetIVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    ivector *arg2 = 0 ;
    pstr arg3 ;
    int arg4 = (int) 0 ;
    int arg5 = (int) 2147483647 ;
    Boolean arg6 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs|iiO:CMMCIFLoop_GetIVector",&obj0,&obj1,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj5) {
        arg6 = (Boolean) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetIVector(*arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_PutString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossi:CMMCIFLoop_PutString",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutString(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_PutNoData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisi:CMMCIFLoop_PutNoData",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutNoData(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_PutReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    realtype arg2 ;
    pstr arg3 ;
    int arg4 ;
    int arg5 = (int) 8 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Odsi|i:CMMCIFLoop_PutReal",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutReal(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_PutInteger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisi:CMMCIFLoop_PutInteger",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutInteger(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_PutSVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    psvector arg2 = (psvector) 0 ;
    pstr arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOsii:CMMCIFLoop_PutSVector",&obj0,&obj1,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_psvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutSVector(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_PutRVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    rvector arg2 = (rvector) 0 ;
    pstr arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 = (int) 8 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOsii|i:CMMCIFLoop_PutRVector",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutRVector(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_PutIVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    ivector arg2 = (ivector) 0 ;
    pstr arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOsii:CMMCIFLoop_PutIVector",&obj0,&obj1,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutIVector(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_GetCategoryID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFLoop_GetCategoryID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCategoryID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_Optimize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFLoop_Optimize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Optimize();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_WriteMMCIFLoop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMCIFLoop_WriteMMCIFLoop",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)(arg1)->WriteMMCIFLoop(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_WriteMMCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFLoop_WriteMMCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->WriteMMCIF(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFLoop_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFLoop *arg1 = (CMMCIFLoop *) 0 ;
    PCMMCIFCategory arg2 = (PCMMCIFCategory) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFLoop_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFCategory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CMMCIFLoop_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMMCIFLoop, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CMMCIFData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CMMCIFData")) goto fail;
    result = (CMMCIFData *)new CMMCIFData();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFData, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    CMMCIFData *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:new_CMMCIFData",&arg1)) goto fail;
    result = (CMMCIFData *)new CMMCIFData(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFData, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFData__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CMMCIFData *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CMMCIFData",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CMMCIFData *)new CMMCIFData(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFData, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CMMCIFData__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CMMCIFData__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_CMMCIFData__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CMMCIFData'");
    return NULL;
}


static PyObject *_wrap_delete_CMMCIFData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMMCIFData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_SetPrintWarnings(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    Boolean arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFData_SetPrintWarnings",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (Boolean) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetPrintWarnings(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_SetStopOnWarning(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    Boolean arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFData_SetStopOnWarning",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (Boolean) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetStopOnWarning(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_SetFlag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMCIFData_SetFlag",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetFlag(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_RemoveFlag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMCIFData_RemoveFlag",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveFlag(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetWarnings(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFData_GetWarnings",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetWarnings();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_SetWrongFields(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr *arg2 = (pstr *) 0 ;
    pstr *arg3 = (pstr *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CMMCIFData_SetWrongFields",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetWrongFields(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_ReadMMCIFData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMCIFData_ReadMMCIFData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->ReadMMCIFData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_ReadMMCIFData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    CFile *arg2 = 0 ;
    pstr arg3 ;
    int *arg4 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOsO:CMMCIFData_ReadMMCIFData",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->ReadMMCIFData(*arg2,arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_ReadMMCIFData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFData, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_CMMCIFData_ReadMMCIFData__SWIG_0(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CMMCIFData_ReadMMCIFData__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFData, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_CFile, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CMMCIFData_ReadMMCIFData__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMCIFData_ReadMMCIFData'");
    return NULL;
}


static PyObject *_wrap_CMMCIFData_WriteMMCIFData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMCIFData_WriteMMCIFData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (Boolean)(arg1)->WriteMMCIFData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_WriteMMCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFData_WriteMMCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->WriteMMCIF(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetNumberOfCategories(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFData_GetNumberOfCategories",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfCategories();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetCategory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    int arg2 ;
    PCMMCIFCategory result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMCIFData_GetCategory",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCMMCIFCategory)(arg1)->GetCategory(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCMMCIFCategory, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetStructure(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    PCMMCIFStruct result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFData_GetStructure",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCMMCIFStruct)(arg1)->GetStructure(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCMMCIFStruct, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetLoop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    PCMMCIFLoop result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFData_GetLoop",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCMMCIFLoop)(arg1)->GetLoop(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCMMCIFLoop, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_FindLoop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr *arg2 = (pstr *) 0 ;
    PCMMCIFLoop result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFData_FindLoop",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCMMCIFLoop)(arg1)->FindLoop(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCMMCIFLoop, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetDataName__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr *arg2 = 0 ;
    Boolean arg3 = (Boolean) Boolean(0) ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:CMMCIFData_GetDataName",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = (Boolean) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->GetDataName(*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetDataName__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFData_GetDataName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetDataName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetDataName(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFData, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_CMMCIFData_GetDataName__SWIG_1(self,args);
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFData, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_CMMCIFData_GetDataName__SWIG_0(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CMMCIFData_GetDataName__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMCIFData_GetDataName'");
    return NULL;
}


static PyObject *_wrap_CMMCIFData_CheckData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:CMMCIFData_CheckData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CheckData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_DeleteCategory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFData_DeleteCategory",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteCategory(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_DeleteStructure(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFData_DeleteStructure",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteStructure(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_DeleteLoop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFData_DeleteLoop",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteLoop(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_Optimize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFData_Optimize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Optimize();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetString__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr *arg2 = 0 ;
    pstr arg3 ;
    pstr arg4 ;
    Boolean arg5 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOss|O:CMMCIFData_GetString",&obj0,&obj1,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        arg5 = (Boolean) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetString(*arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetString__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    int *arg4 = 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OssO:CMMCIFData_GetString",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)(arg1)->GetString(arg2,arg3,*arg4);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetString(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 4) && (argc <= 5)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFData, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_CMMCIFData_GetString__SWIG_0(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CMMCIFData_GetString__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFData, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CMMCIFData_GetString__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMCIFData_GetString'");
    return NULL;
}


static PyObject *_wrap_CMMCIFData_DeleteField(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:CMMCIFData_DeleteField",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteField(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    realtype *arg2 = 0 ;
    pstr arg3 ;
    pstr arg4 ;
    Boolean arg5 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOss|O:CMMCIFData_GetReal",&obj0,&obj1,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        arg5 = (Boolean) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetReal(*arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetInteger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    int *arg2 = 0 ;
    pstr arg3 ;
    pstr arg4 ;
    Boolean arg5 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOss|O:CMMCIFData_GetInteger",&obj0,&obj1,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        arg5 = (Boolean) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetInteger(*arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetLoopLength(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFData_GetLoopLength",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetLoopLength(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetLoopString__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr *arg2 = 0 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 ;
    Boolean arg6 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOssi|O:CMMCIFData_GetLoopString",&obj0,&obj1,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj5) {
        arg6 = (Boolean) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetLoopString(*arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetLoopString__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    int arg4 ;
    int *arg5 = 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OssiO:CMMCIFData_GetLoopString",&obj0,&arg2,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)(arg1)->GetLoopString(arg2,arg3,arg4,*arg5);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetLoopString(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 5) && (argc <= 6)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFData, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_CMMCIFData_GetLoopString__SWIG_0(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_CMMCIFData_GetLoopString__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFData, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CMMCIFData_GetLoopString__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMCIFData_GetLoopString'");
    return NULL;
}


static PyObject *_wrap_CMMCIFData_DeleteLoopField(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossi:CMMCIFData_DeleteLoopField",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteLoopField(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetLoopReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    realtype *arg2 = 0 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 ;
    Boolean arg6 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOssi|O:CMMCIFData_GetLoopReal",&obj0,&obj1,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj5) {
        arg6 = (Boolean) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetLoopReal(*arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetLoopInteger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    int *arg2 = 0 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 ;
    Boolean arg6 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOssi|O:CMMCIFData_GetLoopInteger",&obj0,&obj1,&arg3,&arg4,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj5) {
        arg6 = (Boolean) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetLoopInteger(*arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetLoopSVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    psvector *arg2 = 0 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 2147483647 ;
    Boolean arg7 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOss|iiO:CMMCIFData_GetLoopSVector",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_psvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj6) {
        arg7 = (Boolean) PyInt_AsLong(obj6);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetLoopSVector(*arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetLoopRVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    rvector *arg2 = 0 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 2147483647 ;
    Boolean arg7 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOss|iiO:CMMCIFData_GetLoopRVector",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj6) {
        arg7 = (Boolean) PyInt_AsLong(obj6);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetLoopRVector(*arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_GetLoopIVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    ivector *arg2 = 0 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 = (int) 0 ;
    int arg6 = (int) 2147483647 ;
    Boolean arg7 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOss|iiO:CMMCIFData_GetLoopIVector",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj6) {
        arg7 = (Boolean) PyInt_AsLong(obj6);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->GetLoopIVector(*arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_FreeMemory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    int arg2 = (int) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|i:CMMCIFData_FreeMemory",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FreeMemory(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PutDataName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFData_PutDataName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutDataName(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PutNoData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    int arg2 ;
    pstr arg3 ;
    pstr arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiss:CMMCIFData_PutNoData",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutNoData(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PutString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    pstr arg4 ;
    Boolean arg5 = (Boolean) Boolean(0) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osss|O:CMMCIFData_PutString",&obj0,&arg2,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj4) {
        arg5 = (Boolean) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->PutString(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PutDate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:CMMCIFData_PutDate",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutDate(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PutReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    realtype arg2 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 = (int) 8 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Odss|i:CMMCIFData_PutReal",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutReal(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PutInteger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    int arg2 ;
    pstr arg3 ;
    pstr arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiss:CMMCIFData_PutInteger",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutInteger(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_AddLoop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    PCMMCIFLoop *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CMMCIFData_AddLoop",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PCMMCIFLoop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->AddLoop(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_AddStructure(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    PCMMCIFStruct *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CMMCIFData_AddStructure",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PCMMCIFStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->AddStructure(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PutLoopNoData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    int arg2 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oissi:CMMCIFData_PutLoopNoData",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutLoopNoData(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PutLoopString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osssi:CMMCIFData_PutLoopString",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutLoopString(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PutLoopReal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    realtype arg2 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 ;
    int arg6 = (int) 8 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Odssi|i:CMMCIFData_PutLoopReal",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutLoopReal(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PutLoopInteger(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    int arg2 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oissi:CMMCIFData_PutLoopInteger",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutLoopInteger(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PutLoopSVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    psvector arg2 = (psvector) 0 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 ;
    int arg6 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOssii:CMMCIFData_PutLoopSVector",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_psvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutLoopSVector(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PutLoopRVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    rvector arg2 = (rvector) 0 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 ;
    int arg6 ;
    int arg7 = (int) 8 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOssii|i:CMMCIFData_PutLoopRVector",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_rvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutLoopRVector(arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PutLoopIVector(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    ivector arg2 = (ivector) 0 ;
    pstr arg3 ;
    pstr arg4 ;
    int arg5 ;
    int arg6 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOssii:CMMCIFData_PutLoopIVector",&obj0,&obj1,&arg3,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutLoopIVector(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_RenameCategory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:CMMCIFData_RenameCategory",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->RenameCategory(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFData_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_CopyCategory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    pstr arg3 ;
    pstr arg4 = (pstr) (pstr)NULL ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs|s:CMMCIFData_CopyCategory",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CopyCategory(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFData_PrintCategories(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFData *arg1 = (CMMCIFData *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFData_PrintCategories",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrintCategories();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CMMCIFData_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMMCIFData, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CMMCIFFile_nData_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMCIFFile_nData_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nData = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_nData_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFFile_nData_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nData);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_index_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    ivector arg2 = (ivector) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFFile_index_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->index = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_index_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    ivector result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFFile_index_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (ivector) ((arg1)->index);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_ivector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_data_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    PPCMMCIFData arg2 ;
    PPCMMCIFData *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFFile_data_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCMMCIFData,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->data = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_data_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    PPCMMCIFData result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFFile_data_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->data);
    
    {
        PPCMMCIFData * resultptr;
        resultptr = new PPCMMCIFData((PPCMMCIFData &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCMMCIFData, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFFile__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CMMCIFFile")) goto fail;
    result = (CMMCIFFile *)new CMMCIFFile();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFFile, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFFile__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    byte arg2 = (byte) 0x01 ;
    CMMCIFFile *result;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"s|O:new_CMMCIFFile",&arg1,&obj1)) goto fail;
    if (obj1) {
        arg2 = (byte) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (CMMCIFFile *)new CMMCIFFile(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFFile, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFFile__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CMMCIFFile *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CMMCIFFile",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CMMCIFFile *)new CMMCIFFile(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMMCIFFile, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMMCIFFile(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CMMCIFFile__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CMMCIFFile__SWIG_2(self,args);
        }
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_new_CMMCIFFile__SWIG_1(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_CMMCIFFile__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CMMCIFFile'");
    return NULL;
}


static PyObject *_wrap_delete_CMMCIFFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMMCIFFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_SetPrintWarnings(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    Boolean arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFFile_SetPrintWarnings",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (Boolean) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetPrintWarnings(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_SetStopOnWarning(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    Boolean arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFFile_SetStopOnWarning",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (Boolean) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetStopOnWarning(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_ReadMMCIFFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMCIFFile_ReadMMCIFFile",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->ReadMMCIFFile(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_WriteMMCIFFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    pstr arg2 ;
    byte arg3 = (byte) 0x01 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:CMMCIFFile_WriteMMCIFFile",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (byte) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->WriteMMCIFFile(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_GetNofData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CMMCIFFile_GetNofData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNofData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_GetCIFData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    int arg2 ;
    PCMMCIFData result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CMMCIFFile_GetCIFData",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCMMCIFData)(arg1)->GetCIFData(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCMMCIFData, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_GetCIFData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    pstr arg2 ;
    PCMMCIFData result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFFile_GetCIFData",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCMMCIFData)(arg1)->GetCIFData(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCMMCIFData, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_GetCIFData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMCIFFile_GetCIFData__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CMMCIFFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CMMCIFFile_GetCIFData__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CMMCIFFile_GetCIFData'");
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_AddMMCIFData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFFile_AddMMCIFData",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddMMCIFData(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_GetCIFDataNo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CMMCIFFile_GetCIFDataNo",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCIFDataNo(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_WriteMMCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFFile_WriteMMCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->WriteMMCIF(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMMCIFFile_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMMCIFFile *arg1 = (CMMCIFFile *) 0 ;
    PCMMCIFFile arg2 = (PCMMCIFFile) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CMMCIFFile_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CMMCIFFile_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMMCIFFile, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_GetMMCIFInputBuffer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int *arg1 = 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:GetMMCIFInputBuffer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)GetMMCIFInputBuffer(*arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_isCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    byte arg2 = (byte) 0x01 ;
    int result;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"s|O:isCIF",&arg1,&obj1)) goto fail;
    if (obj1) {
        arg2 = (byte) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)isCIF(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetCIFMessage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int arg2 ;
    pstr result;
    
    if(!PyArg_ParseTuple(args,(char *)"si:GetCIFMessage",&arg1,&arg2)) goto fail;
    result = (pstr)GetCIFMessage(arg1,arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_hetID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompound_hetID_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->hetID,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_hetID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetCompound_hetID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->hetID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_comment_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHetCompound_comment_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->comment) delete [] arg1->comment;
        arg1->comment = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->comment,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_comment_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetCompound_comment_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->comment);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_nSynonyms_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CHetCompound_nSynonyms_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nSynonyms = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_nSynonyms_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetCompound_nSynonyms_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nSynonyms);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_hetSynonym_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    psvector arg2 = (psvector) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompound_hetSynonym_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_psvector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->hetSynonym = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_hetSynonym_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    psvector result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetCompound_hetSynonym_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (psvector) ((arg1)->hetSynonym);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_psvector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_compNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CHetCompound_compNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->compNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_compNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetCompound_compNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->compNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_wc_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    char arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oc:CHetCompound_wc_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->wc = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_wc_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    char result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetCompound_wc_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char) ((arg1)->wc);
    
    resultobj = Py_BuildValue((char*)"c",result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_Formula_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHetCompound_Formula_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->Formula) delete [] arg1->Formula;
        arg1->Formula = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->Formula,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_Formula_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetCompound_Formula_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->Formula);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHetCompound__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    CHetCompound *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:new_CHetCompound",&arg1)) goto fail;
    result = (CHetCompound *)new CHetCompound(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CHetCompound, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHetCompound__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CHetCompound *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CHetCompound",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CHetCompound *)new CHetCompound(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CHetCompound, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHetCompound(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CHetCompound__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_CHetCompound__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CHetCompound'");
    return NULL;
}


static PyObject *_wrap_delete_CHetCompound(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CHetCompound",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_AddKeyWord(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    pstr arg2 ;
    Boolean arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CHetCompound_AddKeyWord",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = (Boolean) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->AddKeyWord(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_HETNAM_PDBDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompound_HETNAM_PDBDump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->HETNAM_PDBDump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_HETSYN_PDBDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompound_HETSYN_PDBDump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->HETSYN_PDBDump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_FORMUL_PDBDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompound_FORMUL_PDBDump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->FORMUL_PDBDump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_FormComString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    pstr *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompound_FormComString",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->FormComString(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_FormSynString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    pstr *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompound_FormSynString",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->FormSynString(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_FormForString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    pstr *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompound_FormForString",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->FormForString(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompound_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompound *arg1 = (CHetCompound *) 0 ;
    PCHetCompound arg2 = (PCHetCompound) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompound_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCHetCompound,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CHetCompound_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CHetCompound, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CSSContainer__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSSContainer *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSSContainer")) goto fail;
    result = (CSSContainer *)new CSSContainer();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSSContainer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSSContainer__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CSSContainer *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSSContainer",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CSSContainer *)new CSSContainer(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSSContainer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSSContainer(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CSSContainer__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSSContainer__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CSSContainer'");
    return NULL;
}


static PyObject *_wrap_delete_CSSContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSSContainer *arg1 = (CSSContainer *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSSContainer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSSContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSSContainer_MakeContainerClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSSContainer *arg1 = (CSSContainer *) 0 ;
    int arg2 ;
    PCContainerClass result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSSContainer_MakeContainerClass",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSSContainer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCContainerClass)(arg1)->MakeContainerClass(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCContainerClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSSContainer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSSContainer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CHelix_serNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CHelix_serNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->serNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_serNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_serNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->serNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_helixID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHelix_helixID_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->helixID,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_helixID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_helixID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->helixID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_initResName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHelix_initResName_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->initResName,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_initResName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_initResName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->initResName);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_initChainID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHelix_initChainID_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->initChainID,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_initChainID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_initChainID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->initChainID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_initSeqNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CHelix_initSeqNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->initSeqNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_initSeqNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_initSeqNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->initSeqNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_initICode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHelix_initICode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->initICode,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_initICode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_initICode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->initICode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_endResName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHelix_endResName_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->endResName,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_endResName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_endResName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->endResName);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_endChainID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHelix_endChainID_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->endChainID,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_endChainID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_endChainID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->endChainID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_endSeqNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CHelix_endSeqNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->endSeqNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_endSeqNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_endSeqNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->endSeqNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_endICode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHelix_endICode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->endICode,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_endICode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_endICode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->endICode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_helixClass_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CHelix_helixClass_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->helixClass = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_helixClass_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_helixClass_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->helixClass);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_comment_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHelix_comment_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->comment) delete [] arg1->comment;
        arg1->comment = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->comment,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_comment_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_comment_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->comment);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_length_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CHelix_length_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->length = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_length_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_length_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->length);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHelix__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CHelix")) goto fail;
    result = (CHelix *)new CHelix();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CHelix, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHelix__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    CHelix *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:new_CHelix",&arg1)) goto fail;
    result = (CHelix *)new CHelix(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CHelix, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHelix__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CHelix *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CHelix",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CHelix *)new CHelix(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CHelix, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHelix(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CHelix__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CHelix__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_CHelix__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CHelix'");
    return NULL;
}


static PyObject *_wrap_delete_CHelix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CHelix",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    pstr arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CHelix_PDBASCIIDump",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PDBASCIIDump(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CHelix_MakeCIF",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_ConvertPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHelix_ConvertPDBASCII",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBASCII(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CHelix_GetCIF",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetCIF(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_GetClassID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHelix_GetClassID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetClassID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHelix_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHelix *arg1 = (CHelix *) 0 ;
    PCContainerClass arg2 = (PCContainerClass) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHelix_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHelix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CHelix_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CHelix, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CStrand_sheetID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CStrand_sheetID_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->sheetID,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_sheetID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_sheetID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->sheetID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_strandNo_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CStrand_strandNo_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->strandNo = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_strandNo_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_strandNo_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->strandNo);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_initResName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CStrand_initResName_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->initResName,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_initResName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_initResName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->initResName);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_initChainID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CStrand_initChainID_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->initChainID,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_initChainID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_initChainID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->initChainID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_initSeqNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CStrand_initSeqNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->initSeqNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_initSeqNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_initSeqNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->initSeqNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_initICode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CStrand_initICode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->initICode,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_initICode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_initICode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->initICode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_endResName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CStrand_endResName_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->endResName,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_endResName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_endResName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->endResName);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_endChainID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CStrand_endChainID_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->endChainID,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_endChainID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_endChainID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->endChainID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_endSeqNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CStrand_endSeqNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->endSeqNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_endSeqNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_endSeqNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->endSeqNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_endICode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CStrand_endICode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->endICode,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_endICode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_endICode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->endICode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_sense_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CStrand_sense_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->sense = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_sense_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_sense_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->sense);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_curAtom_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CStrand_curAtom_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->curAtom,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_curAtom_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_curAtom_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->curAtom);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_curResName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CStrand_curResName_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->curResName,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_curResName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_curResName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->curResName);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_curChainID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CStrand_curChainID_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->curChainID,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_curChainID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_curChainID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->curChainID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_curResSeq_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CStrand_curResSeq_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->curResSeq = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_curResSeq_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_curResSeq_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->curResSeq);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_curICode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CStrand_curICode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->curICode,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_curICode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_curICode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->curICode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_prevAtom_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CStrand_prevAtom_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->prevAtom,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_prevAtom_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_prevAtom_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->prevAtom);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_prevResName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CStrand_prevResName_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->prevResName,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_prevResName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_prevResName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->prevResName);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_prevChainID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CStrand_prevChainID_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->prevChainID,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_prevChainID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_prevChainID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->prevChainID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_prevResSeq_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CStrand_prevResSeq_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->prevResSeq = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_prevResSeq_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_prevResSeq_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->prevResSeq);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_prevICode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CStrand_prevICode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->prevICode,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_prevICode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CStrand_prevICode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->prevICode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CStrand__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CStrand")) goto fail;
    result = (CStrand *)new CStrand();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CStrand, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CStrand__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CStrand *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CStrand",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CStrand *)new CStrand(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CStrand, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CStrand(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CStrand__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CStrand__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CStrand'");
    return NULL;
}


static PyObject *_wrap_delete_CStrand(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CStrand",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CStrand_PDBASCIIDump",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PDBASCIIDump(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CStrand_MakeCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_ConvertPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CStrand_ConvertPDBASCII",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBASCII(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:CStrand_GetCIF",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCIF(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CStrand_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CStrand *arg1 = (CStrand *) 0 ;
    PCStrand arg2 = (PCStrand) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CStrand_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCStrand,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CStrand_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CStrand, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CSheet_sheetID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSheet_sheetID_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->sheetID,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheet_sheetID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSheet_sheetID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->sheetID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheet_nStrands_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSheet_nStrands_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nStrands = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheet_nStrands_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSheet_nStrands_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nStrands);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheet_Strand_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    PPCStrand arg2 ;
    PPCStrand *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSheet_Strand_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCStrand,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->Strand = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheet_Strand_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    PPCStrand result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSheet_Strand_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Strand);
    
    {
        PPCStrand * resultptr;
        resultptr = new PPCStrand((PPCStrand &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCStrand, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSheet__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSheet")) goto fail;
    result = (CSheet *)new CSheet();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSheet, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSheet__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CSheet *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSheet",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CSheet *)new CSheet(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSheet, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSheet(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CSheet__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSheet__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CSheet'");
    return NULL;
}


static PyObject *_wrap_delete_CSheet(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSheet",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheet_FreeMemory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSheet_FreeMemory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FreeMemory();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheet_OrderSheet(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSheet_OrderSheet",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->OrderSheet();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheet_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSheet_PDBASCIIDump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->PDBASCIIDump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheet_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSheet_MakeCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheet_ConvertPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSheet_ConvertPDBASCII",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBASCII(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheet_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSheet_GetCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCIF(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheet_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheet *arg1 = (CSheet *) 0 ;
    PCSheet arg2 = (PCSheet) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSheet_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSheet,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSheet_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSheet, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CSheets_nSheets_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheets *arg1 = (CSheets *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSheets_nSheets_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheets,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nSheets = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheets_nSheets_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheets *arg1 = (CSheets *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSheets_nSheets_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheets,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nSheets);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheets_Sheet_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheets *arg1 = (CSheets *) 0 ;
    PPCSheet arg2 ;
    PPCSheet *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSheets_Sheet_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheets,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCSheet,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->Sheet = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheets_Sheet_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheets *arg1 = (CSheets *) 0 ;
    PPCSheet result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSheets_Sheet_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheets,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Sheet);
    
    {
        PPCSheet * resultptr;
        resultptr = new PPCSheet((PPCSheet &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSheet, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSheets__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheets *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSheets")) goto fail;
    result = (CSheets *)new CSheets();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSheets, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSheets__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CSheets *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSheets",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CSheets *)new CSheets(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSheets, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSheets(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CSheets__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSheets__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CSheets'");
    return NULL;
}


static PyObject *_wrap_delete_CSheets(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheets *arg1 = (CSheets *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSheets",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheets,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheets_FreeMemory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheets *arg1 = (CSheets *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSheets_FreeMemory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheets,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FreeMemory();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheets_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheets *arg1 = (CSheets *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSheets_PDBASCIIDump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheets,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->PDBASCIIDump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheets_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheets *arg1 = (CSheets *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSheets_MakeCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheets,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheets_ConvertPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheets *arg1 = (CSheets *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSheets_ConvertPDBASCII",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheets,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBASCII(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheets_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheets *arg1 = (CSheets *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSheets_GetCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheets,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCIF(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSheets_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSheets *arg1 = (CSheets *) 0 ;
    PCSheets arg2 = (PCSheets) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSheets_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSheets,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSheets,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSheets_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSheets, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CTurn_serNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CTurn_serNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->serNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_serNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CTurn_serNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->serNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_turnID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CTurn_turnID_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->turnID,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_turnID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CTurn_turnID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->turnID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_initResName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CTurn_initResName_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->initResName,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_initResName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CTurn_initResName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->initResName);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_initChainID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CTurn_initChainID_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->initChainID,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_initChainID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CTurn_initChainID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->initChainID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_initSeqNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CTurn_initSeqNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->initSeqNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_initSeqNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CTurn_initSeqNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->initSeqNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_initICode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CTurn_initICode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->initICode,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_initICode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CTurn_initICode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->initICode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_endResName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CTurn_endResName_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    {
        strncpy(arg1->endResName,arg2,20);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_endResName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CTurn_endResName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->endResName);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_endChainID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CTurn_endChainID_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->endChainID,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_endChainID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CTurn_endChainID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->endChainID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_endSeqNum_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CTurn_endSeqNum_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->endSeqNum = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_endSeqNum_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CTurn_endSeqNum_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->endSeqNum);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_endICode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CTurn_endICode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->endICode,arg2,10);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_endICode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CTurn_endICode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->endICode);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_comment_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CTurn_comment_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->comment) delete [] arg1->comment;
        arg1->comment = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->comment,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_comment_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CTurn_comment_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->comment);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CTurn__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CTurn")) goto fail;
    result = (CTurn *)new CTurn();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CTurn, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CTurn__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    CTurn *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:new_CTurn",&arg1)) goto fail;
    result = (CTurn *)new CTurn(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CTurn, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CTurn__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CTurn *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CTurn",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CTurn *)new CTurn(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CTurn, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CTurn(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CTurn__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CTurn__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_CTurn__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CTurn'");
    return NULL;
}


static PyObject *_wrap_delete_CTurn(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CTurn",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    pstr arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CTurn_PDBASCIIDump",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PDBASCIIDump(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CTurn_MakeCIF",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_ConvertPDBASCII(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CTurn_ConvertPDBASCII",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBASCII(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CTurn_GetCIF",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetCIF(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_GetClassID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CTurn_GetClassID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetClassID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CTurn_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CTurn *arg1 = (CTurn *) 0 ;
    PCContainerClass arg2 = (PCContainerClass) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CTurn_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CTurn,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCContainerClass,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CTurn_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CTurn, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CHetCompounds_nHets_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *arg1 = (CHetCompounds *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CHetCompounds_nHets_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nHets = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompounds_nHets_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *arg1 = (CHetCompounds *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetCompounds_nHets_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nHets);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompounds_hetCompound_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *arg1 = (CHetCompounds *) 0 ;
    PPCHetCompound arg2 ;
    PPCHetCompound *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompounds_hetCompound_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCHetCompound,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->hetCompound = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompounds_hetCompound_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *arg1 = (CHetCompounds *) 0 ;
    PPCHetCompound result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetCompounds_hetCompound_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->hetCompound);
    
    {
        PPCHetCompound * resultptr;
        resultptr = new PPCHetCompound((PPCHetCompound &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCHetCompound, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHetCompounds__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CHetCompounds")) goto fail;
    result = (CHetCompounds *)new CHetCompounds();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CHetCompounds, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHetCompounds__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CHetCompounds *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CHetCompounds",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CHetCompounds *)new CHetCompounds(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CHetCompounds, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CHetCompounds(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CHetCompounds__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CHetCompounds__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CHetCompounds'");
    return NULL;
}


static PyObject *_wrap_delete_CHetCompounds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *arg1 = (CHetCompounds *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CHetCompounds",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompounds_FreeMemory(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *arg1 = (CHetCompounds *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CHetCompounds_FreeMemory",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->FreeMemory();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompounds_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *arg1 = (CHetCompounds *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompounds_PDBASCIIDump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->PDBASCIIDump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompounds_ConvertHETNAM(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *arg1 = (CHetCompounds *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHetCompounds_ConvertHETNAM",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ConvertHETNAM(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompounds_ConvertHETSYN(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *arg1 = (CHetCompounds *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHetCompounds_ConvertHETSYN",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ConvertHETSYN(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompounds_ConvertFORMUL(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *arg1 = (CHetCompounds *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CHetCompounds_ConvertFORMUL",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ConvertFORMUL(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompounds_MakeCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *arg1 = (CHetCompounds *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompounds_MakeCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeCIF(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompounds_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *arg1 = (CHetCompounds *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompounds_GetCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->GetCIF(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CHetCompounds_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CHetCompounds *arg1 = (CHetCompounds *) 0 ;
    PCHetCompounds arg2 = (PCHetCompounds) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CHetCompounds_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCHetCompounds,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CHetCompounds_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CHetCompounds, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_newCModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCModel result;
    
    if(!PyArg_ParseTuple(args,(char *)":newCModel")) goto fail;
    result = (PCModel)newCModel();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCModel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_SetMakersCModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    void *arg1 = (void *) 0 ;
    void *arg2 = (void *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:SetMakersCModel",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    SetMakersCModel(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CModel__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CModel")) goto fail;
    result = (CModel *)new CModel();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CModel, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CModel__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCMMDBManager arg1 = (PCMMDBManager) 0 ;
    int arg2 ;
    CModel *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:new_CModel",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCMMDBManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CModel *)new CModel(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CModel, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CModel__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CModel *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CModel",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CModel *)new CModel(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CModel, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CModel(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CModel__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CModel__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCMMDBManager, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_CModel__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CModel'");
    return NULL;
}


static PyObject *_wrap_delete_CModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CModel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_SetMMDBManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCMMDBManager arg2 = (PCMMDBManager) 0 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CModel_SetMMDBManager",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMDBManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMMDBManager(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetCoordHierarchy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    void *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_GetCoordHierarchy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetCoordHierarchy();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetChainCreate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    PCChain result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CModel_GetChainCreate",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCChain)(arg1)->GetChainCreate(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCChain, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetEntryID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_GetEntryID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetEntryID();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_SetEntryID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CModel_SetEntryID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetEntryID(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetSerNum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_GetSerNum",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetSerNum();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetModelID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    pstr arg2 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CModel_GetModelID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetModelID(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfModels(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_GetNumberOfModels",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfModels();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfAtoms__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    Boolean arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_GetNumberOfAtoms",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (Boolean) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfResidues__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_GetNumberOfResidues",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfResidues();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfChains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_GetNumberOfChains",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfChains();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNewChainID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 = (int) 1 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|i:CModel_GetNewChainID",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->GetNewChainID(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetChain__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    PCChain result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CModel_GetChain",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCChain)(arg1)->GetChain(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCChain, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetChain__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    PCChain result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CModel_GetChain",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCChain)(arg1)->GetChain(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCChain, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetChain(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CModel_GetChain__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CModel_GetChain__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_GetChain'");
    return NULL;
}


static PyObject *_wrap_CModel_GetChainTable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PPCChain *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CModel_GetChainTable",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetChainTable(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteChain__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CModel_DeleteChain",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteChain(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteChain__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CModel_DeleteChain",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteChain(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteChain(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CModel_DeleteChain__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CModel_DeleteChain__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_DeleteChain'");
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAllChains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_DeleteAllChains",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllChains();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteSolventChains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_DeleteSolventChains",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteSolventChains();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_TrimChainTable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_TrimChainTable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->TrimChainTable();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_AddChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCChain arg2 = (PCChain) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_AddChain",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddChain(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfResidues__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CModel_GetNumberOfResidues",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfResidues(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfResidues__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CModel_GetNumberOfResidues",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfResidues(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfResidues(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_CModel_GetNumberOfResidues__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CModel_GetNumberOfResidues__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CModel_GetNumberOfResidues__SWIG_2(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_GetNumberOfResidues'");
    return NULL;
}


static PyObject *_wrap_CModel_GetResidue__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osis:CModel_GetResidue",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCResidue)(arg1)->GetResidue(arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetResidue__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CModel_GetResidue",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCResidue)(arg1)->GetResidue(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetResidue__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiis:CModel_GetResidue",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCResidue)(arg1)->GetResidue(arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetResidue__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    PCResidue result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CModel_GetResidue",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCResidue)(arg1)->GetResidue(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetResidue(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CModel_GetResidue__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CModel_GetResidue__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_GetResidue__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_GetResidue__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_GetResidue'");
    return NULL;
}


static PyObject *_wrap_CModel_GetResidueNo__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osis:CModel_GetResidueNo",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetResidueNo(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetResidueNo__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiis:CModel_GetResidueNo",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetResidueNo(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetResidueNo(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_GetResidueNo__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_GetResidueNo__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_GetResidueNo'");
    return NULL;
}


static PyObject *_wrap_CModel_GetResidueTable__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PPCResidue *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CModel_GetResidueTable",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetResidueTable(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetResidueTable__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    PPCResidue *arg3 = 0 ;
    int *arg4 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOO:CModel_GetResidueTable",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PPCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetResidueTable(arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetResidueTable__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    PPCResidue *arg3 = 0 ;
    int *arg4 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOO:CModel_GetResidueTable",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_PPCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetResidueTable(arg2,*arg3,*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetResidueTable(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_PPCResidue, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CModel_GetResidueTable__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCResidue, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_GetResidueTable__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PPCResidue, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_GetResidueTable__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_GetResidueTable'");
    return NULL;
}


static PyObject *_wrap_CModel_DeleteResidue__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osis:CModel_DeleteResidue",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteResidue(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteResidue__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CModel_DeleteResidue",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteResidue(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteResidue__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiis:CModel_DeleteResidue",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteResidue(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteResidue__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CModel_DeleteResidue",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteResidue(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteResidue(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CModel_DeleteResidue__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CModel_DeleteResidue__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_DeleteResidue__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_DeleteResidue__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_DeleteResidue'");
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAllResidues__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CModel_DeleteAllResidues",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllResidues(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAllResidues__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CModel_DeleteAllResidues",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllResidues(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteSolvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_DeleteSolvent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteSolvent();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAllResidues__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_DeleteAllResidues",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllResidues();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAllResidues(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_CModel_DeleteAllResidues__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CModel_DeleteAllResidues__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CModel_DeleteAllResidues__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_DeleteAllResidues'");
    return NULL;
}


static PyObject *_wrap_CModel_AddResidue__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    PCResidue arg3 = (PCResidue) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CModel_AddResidue",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddResidue(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_AddResidue__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    PCResidue arg3 = (PCResidue) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CModel_AddResidue",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddResidue(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_AddResidue(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_PCResidue, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CModel_AddResidue__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_PCResidue, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CModel_AddResidue__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_AddResidue'");
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfAllAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_GetNumberOfAllAtoms",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAllAtoms();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAllAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PPCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_GetAllAtoms",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetAllAtoms();
    
    {
        PPCAtom * resultptr;
        resultptr = new PPCAtom((PPCAtom &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCAtom, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfAtoms__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osis:CModel_GetNumberOfAtoms",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfAtoms__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiis:CModel_GetNumberOfAtoms",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfAtoms__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CModel_GetNumberOfAtoms",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfAtoms__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CModel_GetNumberOfAtoms",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfAtoms(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfAtoms(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CModel_GetNumberOfAtoms__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CModel_GetNumberOfAtoms__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CModel_GetNumberOfAtoms__SWIG_4(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_GetNumberOfAtoms__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_GetNumberOfAtoms__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_GetNumberOfAtoms'");
    return NULL;
}


static PyObject *_wrap_CModel_GetAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsisOOO:CModel_GetAtom",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    int arg5 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osisi:CModel_GetAtom",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtom__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsiOOO:CModel_GetAtom",&obj0,&arg2,&arg3,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj3)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg4 = PyString_AsString(obj3);
    }
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtom__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    int arg4 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osii:CModel_GetAtom",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtom__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiisOOO:CModel_GetAtom",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtom__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    int arg5 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiisi:CModel_GetAtom",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtom__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiOOO:CModel_GetAtom",&obj0,&arg2,&arg3,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj3)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg4 = PyString_AsString(obj3);
    }
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtom__SWIG_7(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:CModel_GetAtom",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCAtom)(arg1)->GetAtom(arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[8];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 7); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CModel_GetAtom__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CModel_GetAtom__SWIG_7(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CModel_GetAtom__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CModel_GetAtom__SWIG_5(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CModel_GetAtom__SWIG_2(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CModel_GetAtom__SWIG_6(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CModel_GetAtom__SWIG_0(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CModel_GetAtom__SWIG_4(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_GetAtom'");
    return NULL;
}


static PyObject *_wrap_CModel_GetAtomTable__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    PPCAtom *arg5 = 0 ;
    int *arg6 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsisOO:CModel_GetAtomTable",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(arg2,arg3,arg4,*arg5,*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtomTable__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    PPCAtom *arg5 = 0 ;
    int *arg6 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiisOO:CModel_GetAtomTable",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(arg2,arg3,arg4,*arg5,*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtomTable__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    PPCAtom *arg4 = 0 ;
    int *arg5 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsiOO:CModel_GetAtomTable",&obj0,&arg2,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(arg2,arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtomTable__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    PPCAtom *arg4 = 0 ;
    int *arg5 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiOO:CModel_GetAtomTable",&obj0,&arg2,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(arg2,arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtomTable(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CModel_GetAtomTable__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CModel_GetAtomTable__SWIG_3(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CModel_GetAtomTable__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CModel_GetAtomTable__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_GetAtomTable'");
    return NULL;
}


static PyObject *_wrap_CModel_GetAtomTable1__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    PPCAtom *arg5 = 0 ;
    int *arg6 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsisOO:CModel_GetAtomTable1",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable1(arg2,arg3,arg4,*arg5,*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtomTable1__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    PPCAtom *arg5 = 0 ;
    int *arg6 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiisOO:CModel_GetAtomTable1",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable1(arg2,arg3,arg4,*arg5,*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtomTable1__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    PPCAtom *arg4 = 0 ;
    int *arg5 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsiOO:CModel_GetAtomTable1",&obj0,&arg2,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable1(arg2,arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtomTable1__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    PPCAtom *arg4 = 0 ;
    int *arg5 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiOO:CModel_GetAtomTable1",&obj0,&arg2,&arg3,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable1(arg2,arg3,*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAtomTable1(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CModel_GetAtomTable1__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CModel_GetAtomTable1__SWIG_3(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CModel_GetAtomTable1__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_PPCAtom, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CModel_GetAtomTable1__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_GetAtomTable1'");
    return NULL;
}


static PyObject *_wrap_CModel_GetAtomStatistics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    SAtomStat *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_GetAtomStatistics",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        SAtomStat arg;    SAtomStat *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->GetAtomStatistics(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_CalcAtomStatistics(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    SAtomStat *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_CalcAtomStatistics",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        SAtomStat arg;    SAtomStat *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_SAtomStat,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->CalcAtomStatistics(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsisOOO:CModel_DeleteAtom",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    int arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osisi:CModel_DeleteAtom",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAtom__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsiOOO:CModel_DeleteAtom",&obj0,&arg2,&arg3,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj3)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg4 = PyString_AsString(obj3);
    }
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAtom__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osii:CModel_DeleteAtom",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAtom__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiisOOO:CModel_DeleteAtom",&obj0,&arg2,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    {
        if (!PyString_Check(obj6)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg7 = PyString_AsString(obj6);
    }
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAtom__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    int arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiisi:CModel_DeleteAtom",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAtom__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiOOO:CModel_DeleteAtom",&obj0,&arg2,&arg3,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj3)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg4 = PyString_AsString(obj3);
    }
    {
        if (!PyString_Check(obj4)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg5 = PyString_AsString(obj4);
    }
    {
        if (!PyString_Check(obj5)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg6 = PyString_AsString(obj5);
    }
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAtom__SWIG_7(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:CModel_DeleteAtom",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAtom(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[8];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 7); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CModel_DeleteAtom__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CModel_DeleteAtom__SWIG_7(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CModel_DeleteAtom__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CModel_DeleteAtom__SWIG_5(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CModel_DeleteAtom__SWIG_2(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CModel_DeleteAtom__SWIG_6(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CModel_DeleteAtom__SWIG_0(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 7) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                {
                                    void *ptr;
                                    if (SWIG_ConvertPtr(argv[6], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                                        _v = 0;
                                        PyErr_Clear();
                                    }else {
                                        _v = 1;
                                    }
                                }
                                if (_v) {
                                    return _wrap_CModel_DeleteAtom__SWIG_4(self,args);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_DeleteAtom'");
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAllAtoms__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osis:CModel_DeleteAllAtoms",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAllAtoms__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:CModel_DeleteAllAtoms",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAllAtoms__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CModel_DeleteAllAtoms",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAllAtoms__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiis:CModel_DeleteAllAtoms",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAllAtoms__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CModel_DeleteAllAtoms",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAllAtoms__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CModel_DeleteAllAtoms",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAllAtoms__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_DeleteAllAtoms",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAllAtoms();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAllAtoms(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_CModel_DeleteAllAtoms__SWIG_6(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CModel_DeleteAllAtoms__SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CModel_DeleteAllAtoms__SWIG_5(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CModel_DeleteAllAtoms__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CModel_DeleteAllAtoms__SWIG_4(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_DeleteAllAtoms__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_DeleteAllAtoms__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_DeleteAllAtoms'");
    return NULL;
}


static PyObject *_wrap_CModel_DeleteAltLocs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_DeleteAltLocs",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DeleteAltLocs();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_AddAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    PCAtom arg5 = (PCAtom) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsisO:CModel_AddAtom",&obj0,&arg2,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddAtom(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_AddAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    PCAtom arg4 = (PCAtom) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsiO:CModel_AddAtom",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddAtom(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_AddAtom__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    char *arg4 ;
    PCAtom arg5 = (PCAtom) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiisO:CModel_AddAtom",&obj0,&arg2,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddAtom(arg2,arg3,arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_AddAtom__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    PCAtom arg4 = (PCAtom) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiiO:CModel_AddAtom",&obj0,&arg2,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->AddAtom(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_AddAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_AddAtom__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CModel_AddAtom__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CModel_AddAtom__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_PCAtom, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CModel_AddAtom__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_AddAtom'");
    return NULL;
}


static PyObject *_wrap_CModel_ConvertPDBString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CModel_ConvertPDBString",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->ConvertPDBString(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_PDBASCIIDumpPS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_PDBASCIIDumpPS",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->PDBASCIIDumpPS(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_PDBASCIIDump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    CFile *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_PDBASCIIDump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->PDBASCIIDump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_MakeAtomCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_MakeAtomCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeAtomCIF(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_MakePSCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_MakePSCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakePSCIF(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetCIF(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCMMCIFData arg2 = (PCMMCIFData) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_GetCIF",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMCIFData,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetCIF(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_MoveChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCChain *arg2 = 0 ;
    PPCAtom arg3 ;
    PPCAtom arg4 ;
    int *arg5 = 0 ;
    int arg6 ;
    PPCAtom *argp3 ;
    PPCAtom *argp4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOi:CModel_MoveChain",&obj0,&obj1,&obj2,&obj3,&obj4,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    if ((SWIG_ConvertPtr(obj3,(void **) &argp4, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg4 = *argp4; 
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveChain(*arg2,arg3,arg4,*arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetAIndexRange(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CModel_GetAIndexRange",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAIndexRange(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_MaskAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_MaskAtoms",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MaskAtoms(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_MaskResidues(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_MaskResidues",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MaskResidues(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_MaskChains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_MaskChains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MaskChains(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_UnmaskAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_UnmaskAtoms",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnmaskAtoms(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_UnmaskResidues(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_UnmaskResidues",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnmaskResidues(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_UnmaskChains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCMask arg2 = (PCMask) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_UnmaskChains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->UnmaskChains(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfHelices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_GetNumberOfHelices",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfHelices();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfSheets(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_GetNumberOfSheets",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfSheets();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetHelix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    PCHelix result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CModel_GetHelix",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCHelix)(arg1)->GetHelix(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCHelix, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetSheetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    char *arg3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CModel_GetSheetID",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj2)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg3 = PyString_AsString(obj2);
    }
    (arg1)->GetSheetID(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetSheet__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    PCSheet result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CModel_GetSheet",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCSheet)(arg1)->GetSheet(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSheet, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetSheet__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    PCSheet result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_GetSheet",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    result = (PCSheet)(arg1)->GetSheet(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSheet, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetSheet(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CModel_GetSheet__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CModel_GetSheet__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_GetSheet'");
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfStrands__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CModel_GetNumberOfStrands",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNumberOfStrands(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfStrands__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_GetNumberOfStrands",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    result = (int)(arg1)->GetNumberOfStrands(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetNumberOfStrands(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_CModel_GetNumberOfStrands__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CModel_GetNumberOfStrands__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_GetNumberOfStrands'");
    return NULL;
}


static PyObject *_wrap_CModel_GetStrand__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    PCStrand result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CModel_GetStrand",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCStrand)(arg1)->GetStrand(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCStrand, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetStrand__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    char *arg2 ;
    int arg3 ;
    PCStrand result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CModel_GetStrand",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (!PyString_Check(obj1)) {
            PyErr_SetString(PyExc_TypeError,"not a string");
            return NULL;
        }
        arg2 = PyString_AsString(obj1);
    }
    result = (PCStrand)(arg1)->GetStrand(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCStrand, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetStrand(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_char, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CModel_GetStrand__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CModel_GetStrand__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_GetStrand'");
    return NULL;
}


static PyObject *_wrap_CModel_GetHelices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCSSContainer result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_GetHelices",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCSSContainer)(arg1)->GetHelices();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSSContainer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetSheets(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCSheets result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_GetSheets",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCSheets)(arg1)->GetSheets();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSheets, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_RemoveSecStructure(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_RemoveSecStructure",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveSecStructure();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_CalcSecStructure(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    Boolean arg2 = (Boolean) Boolean(1) ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:CModel_CalcSecStructure",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = (Boolean) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (int)(arg1)->CalcSecStructure(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_RemoveHetInfo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CModel_RemoveHetInfo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveHetInfo();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_ApplyTransform(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    mat44 *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_ApplyTransform",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_mat44,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->ApplyTransform(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_isInSelection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CModel_isInSelection",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isInSelection(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_PutUDData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:CModel_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_PutUDData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    realtype arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oid:CModel_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_PutUDData__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CModel_PutUDData",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->PutUDData(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_PutUDData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CModel_PutUDData__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CModel_PutUDData__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CModel_PutUDData__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_PutUDData'");
    return NULL;
}


static PyObject *_wrap_CModel_GetUDData__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    int *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CModel_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetUDData__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    realtype *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CModel_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetUDData__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    pstr arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oisi:CModel_GetUDData",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetUDData(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetUDData__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    int arg2 ;
    pstr *arg3 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:CModel_GetUDData",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetUDData(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CModel_GetUDData(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CModel_GetUDData__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_realtype, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CModel_GetUDData__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_pstr, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CModel_GetUDData__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CModel, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CModel_GetUDData__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CModel_GetUDData'");
    return NULL;
}


static PyObject *_wrap_CModel_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CModel *arg1 = (CModel *) 0 ;
    PCModel arg2 = (PCModel) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CModel_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CModel_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CModel, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CVertex__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CVertex")) goto fail;
    result = (CVertex *)new CVertex();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CVertex, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CVertex__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CVertex *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CVertex",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CVertex *)new CVertex(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CVertex, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CVertex__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    pstr arg2 ;
    CVertex *result;
    
    if(!PyArg_ParseTuple(args,(char *)"is:new_CVertex",&arg1,&arg2)) goto fail;
    result = (CVertex *)new CVertex(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CVertex, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CVertex__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    CVertex *result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:new_CVertex",&arg1)) goto fail;
    result = (CVertex *)new CVertex(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CVertex, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CVertex__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    CVertex *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:new_CVertex",&arg1)) goto fail;
    result = (CVertex *)new CVertex(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CVertex, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CVertex__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    CVertex *result;
    
    if(!PyArg_ParseTuple(args,(char *)"ss:new_CVertex",&arg1,&arg2)) goto fail;
    result = (CVertex *)new CVertex(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CVertex, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CVertex(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CVertex__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CVertex__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_CVertex__SWIG_3(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_CVertex__SWIG_4(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_CVertex__SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_CVertex__SWIG_5(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CVertex'");
    return NULL;
}


static PyObject *_wrap_delete_CVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CVertex",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_SetVertex__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CVertex_SetVertex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetVertex(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_SetVertex__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    int arg2 ;
    pstr arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ois:CVertex_SetVertex",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetVertex(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_SetVertex__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CVertex_SetVertex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetVertex(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_SetVertex(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CVertex, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CVertex_SetVertex__SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CVertex, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CVertex_SetVertex__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CVertex, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_CVertex_SetVertex__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CVertex_SetVertex'");
    return NULL;
}


static PyObject *_wrap_CVertex_RemoveChirality(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CVertex_RemoveChirality",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveChirality();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_LeaveChirality(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CVertex_LeaveChirality",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->LeaveChirality(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CVertex_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_SetProperty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CVertex_SetProperty",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetProperty(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_SetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CVertex_SetID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetID(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_AddBond(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CVertex_AddBond",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddBond();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_CopyNBonds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    PCVertex arg2 = (PCVertex) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CVertex_CopyNBonds",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CopyNBonds(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_GetProperty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CVertex_GetProperty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetProperty();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_GetID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CVertex_GetID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_GetUserID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CVertex_GetUserID",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetUserID();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CVertex_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_GetType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CVertex_GetType",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetType();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_GetNBonds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CVertex_GetNBonds",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNBonds();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_Print(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CVertex_Print",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Print(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    PCVertex arg2 = (PCVertex) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CVertex_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_mem_read(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CVertex_mem_read",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->mem_read(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CVertex_mem_write(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CVertex *arg1 = (CVertex *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CVertex_mem_write",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->mem_write(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CVertex_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CVertex, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CEdge__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CEdge *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CEdge")) goto fail;
    result = (CEdge *)new CEdge();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CEdge, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CEdge__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CEdge *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CEdge",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CEdge *)new CEdge(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CEdge, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CEdge__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int arg3 ;
    CEdge *result;
    
    if(!PyArg_ParseTuple(args,(char *)"iii:new_CEdge",&arg1,&arg2,&arg3)) goto fail;
    result = (CEdge *)new CEdge(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CEdge, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CEdge(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CEdge__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CEdge__SWIG_1(self,args);
        }
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_new_CEdge__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CEdge'");
    return NULL;
}


static PyObject *_wrap_delete_CEdge(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CEdge *arg1 = (CEdge *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CEdge",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CEdge_SetEdge__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CEdge *arg1 = (CEdge *) 0 ;
    int arg2 ;
    int arg3 ;
    pstr arg4 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiis:CEdge_SetEdge",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetEdge(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CEdge_SetEdge__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CEdge *arg1 = (CEdge *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:CEdge_SetEdge",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetEdge(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CEdge_SetEdge(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CEdge, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CEdge_SetEdge__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CEdge, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CEdge_SetEdge__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CEdge_SetEdge'");
    return NULL;
}


static PyObject *_wrap_CEdge_SetProperty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CEdge *arg1 = (CEdge *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CEdge_SetProperty",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetProperty(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CEdge_GetVertex1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CEdge *arg1 = (CEdge *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CEdge_GetVertex1",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetVertex1();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CEdge_GetVertex2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CEdge *arg1 = (CEdge *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CEdge_GetVertex2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetVertex2();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CEdge_GetType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CEdge *arg1 = (CEdge *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CEdge_GetType",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetType();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CEdge_GetProperty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CEdge *arg1 = (CEdge *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CEdge_GetProperty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetProperty();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CEdge_Print(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CEdge *arg1 = (CEdge *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CEdge_Print",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Print(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CEdge_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CEdge *arg1 = (CEdge *) 0 ;
    PCEdge arg2 = (PCEdge) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CEdge_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CEdge_mem_read(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CEdge *arg1 = (CEdge *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CEdge_mem_read",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->mem_read(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CEdge_mem_write(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CEdge *arg1 = (CEdge *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CEdge_mem_write",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->mem_write(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CEdge_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CEdge, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CGraph__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CGraph")) goto fail;
    result = (CGraph *)new CGraph();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CGraph, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CGraph__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCResidue arg1 = (PCResidue) 0 ;
    pstr arg2 = (pstr) (pstr)NULL ;
    CGraph *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|s:new_CGraph",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CGraph *)new CGraph(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CGraph, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CGraph__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CGraph *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CGraph",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CGraph *)new CGraph(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CGraph, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CGraph(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CGraph__SWIG_0(self,args);
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_PCResidue, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_new_CGraph__SWIG_1(self,args);
            }
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_CGraph__SWIG_1(self,args);
            }
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CGraph__SWIG_2(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CGraph'");
    return NULL;
}


static PyObject *_wrap_delete_CGraph(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CGraph",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_Reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CGraph_Reset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_SetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CGraph_SetName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetName(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_GetName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CGraph_GetName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_AddVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PCVertex arg2 = (PCVertex) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CGraph_AddVertex",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddVertex(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_AddEdge(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PCEdge arg2 = (PCEdge) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CGraph_AddEdge",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddEdge(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_SetVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PPCVertex arg2 ;
    int arg3 ;
    PPCVertex *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CGraph_SetVertices",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCVertex,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->SetVertices(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_SetEdges(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PPCEdge arg2 ;
    int arg3 ;
    PPCEdge *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:CGraph_SetEdges",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCEdge,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->SetEdges(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_RemoveChirality(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CGraph_RemoveChirality",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveChirality();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_LeaveChirality(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CGraph_LeaveChirality",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->LeaveChirality(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_MakeGraph(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PCResidue arg2 = (PCResidue) 0 ;
    pstr arg3 = (pstr) (pstr)NULL ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|s:CGraph_MakeGraph",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->MakeGraph(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_HideType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CGraph_HideType",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->HideType(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_ExcludeType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CGraph_ExcludeType",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ExcludeType(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_Build(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    Boolean arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CGraph_Build",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (Boolean) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)(arg1)->Build(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_MakeVertexIDs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CGraph_MakeVertexIDs",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeVertexIDs();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_GetVertexID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CGraph_GetVertexID",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetVertexID(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_GetNBondedVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CGraph_GetNBondedVertices",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNBondedVertices(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_GetBondedVertexID(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:CGraph_GetBondedVertexID",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetBondedVertexID(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_GetVertex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    int arg2 ;
    PCVertex result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CGraph_GetVertex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCVertex)(arg1)->GetVertex(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCVertex, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_GetNofVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CGraph_GetNofVertices",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNofVertices();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_GetEdge(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    int arg2 ;
    PCEdge result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CGraph_GetEdge",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCEdge)(arg1)->GetEdge(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCEdge, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_GetNofEdges(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CGraph_GetNofEdges",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNofEdges();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_GetVertices(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PPCVertex *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CGraph_GetVertices",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCVertex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetVertices(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_GetEdges(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PPCEdge *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CGraph_GetEdges",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCEdge,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetEdges(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_Print(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CGraph_Print",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Print();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_Print1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CGraph_Print1",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Print1();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    PCGraph arg2 = (PCGraph) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CGraph_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_mem_read(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CGraph_mem_read",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->mem_read(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraph_mem_write(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraph *arg1 = (CGraph *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CGraph_mem_write",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->mem_write(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CGraph_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CGraph, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CMatch__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMatch *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CMatch")) goto fail;
    result = (CMatch *)new CMatch();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMatch, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMatch__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CMatch *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CMatch",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CMatch *)new CMatch(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMatch, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMatch__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    ivector arg1 = (ivector) 0 ;
    ivector arg2 = (ivector) 0 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    CMatch *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiii:new_CMatch",&obj0,&obj1,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (CMatch *)new CMatch(arg1,arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CMatch, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CMatch(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CMatch__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CMatch__SWIG_1(self,args);
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_ivector, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_ivector, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_new_CMatch__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CMatch'");
    return NULL;
}


static PyObject *_wrap_delete_CMatch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMatch *arg1 = (CMatch *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CMatch",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMatch_SetMatch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMatch *arg1 = (CMatch *) 0 ;
    ivector arg2 = (ivector) 0 ;
    ivector arg3 = (ivector) 0 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOiii:CMatch_SetMatch",&obj0,&obj1,&obj2,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMatch(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMatch_isMatch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMatch *arg1 = (CMatch *) 0 ;
    ivector arg2 = (ivector) 0 ;
    ivector arg3 = (ivector) 0 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:CMatch_isMatch",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isMatch(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMatch_isCombination(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMatch *arg1 = (CMatch *) 0 ;
    ivector arg2 = (ivector) 0 ;
    ivector arg3 = (ivector) 0 ;
    int arg4 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:CMatch_isCombination",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->isCombination(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMatch_GetMatch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMatch *arg1 = (CMatch *) 0 ;
    ivector *arg2 = 0 ;
    ivector *arg3 = 0 ;
    int *arg4 = 0 ;
    realtype *arg5 = 0 ;
    realtype *arg6 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOO:CMatch_GetMatch",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetMatch(*arg2,*arg3,*arg4,*arg5,*arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMatch_mem_read(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMatch *arg1 = (CMatch *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CMatch_mem_read",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->mem_read(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CMatch_mem_write(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CMatch *arg1 = (CMatch *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CMatch_mem_write",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->mem_write(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CMatch_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CMatch, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CGraphMatch__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraphMatch *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CGraphMatch")) goto fail;
    result = (CGraphMatch *)new CGraphMatch();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CGraphMatch, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CGraphMatch__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CGraphMatch *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CGraphMatch",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CGraphMatch *)new CGraphMatch(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CGraphMatch, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CGraphMatch(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CGraphMatch__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CGraphMatch__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CGraphMatch'");
    return NULL;
}


static PyObject *_wrap_delete_CGraphMatch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraphMatch *arg1 = (CGraphMatch *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CGraphMatch",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraphMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraphMatch_SetFlag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraphMatch *arg1 = (CGraphMatch *) 0 ;
    word arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CGraphMatch_SetFlag",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraphMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetFlag(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraphMatch_RemoveFlag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraphMatch *arg1 = (CGraphMatch *) 0 ;
    word arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CGraphMatch_RemoveFlag",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraphMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (word) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->RemoveFlag(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraphMatch_SetMaxNofMatches(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraphMatch *arg1 = (CGraphMatch *) 0 ;
    int arg2 = (int) -1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|i:CGraphMatch_SetMaxNofMatches",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraphMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetMaxNofMatches(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraphMatch_SetTimeLimit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraphMatch *arg1 = (CGraphMatch *) 0 ;
    int arg2 = (int) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|i:CGraphMatch_SetTimeLimit",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraphMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetTimeLimit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraphMatch_GetStopSignal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraphMatch *arg1 = (CGraphMatch *) 0 ;
    Boolean result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CGraphMatch_GetStopSignal",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraphMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Boolean)(arg1)->GetStopSignal();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraphMatch_MatchGraphs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraphMatch *arg1 = (CGraphMatch *) 0 ;
    PCGraph arg2 = (PCGraph) 0 ;
    PCGraph arg3 = (PCGraph) 0 ;
    int arg4 ;
    Boolean arg5 = (Boolean) Boolean(1) ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi|O:CGraphMatch_MatchGraphs",&obj0,&obj1,&obj2,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraphMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PCGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj4) {
        arg5 = (Boolean) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->MatchGraphs(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraphMatch_PrintMatches(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraphMatch *arg1 = (CGraphMatch *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CGraphMatch_PrintMatches",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraphMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrintMatches();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraphMatch_GetNofMatches(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraphMatch *arg1 = (CGraphMatch *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CGraphMatch_GetNofMatches",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraphMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNofMatches();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraphMatch_GetMatch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraphMatch *arg1 = (CGraphMatch *) 0 ;
    int arg2 ;
    ivector *arg3 = 0 ;
    ivector *arg4 = 0 ;
    int *arg5 = 0 ;
    realtype *arg6 = 0 ;
    realtype *arg7 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOOOOO:CGraphMatch_GetMatch",&obj0,&arg2,&obj2,&obj3,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraphMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_realtype,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetMatch(arg2,*arg3,*arg4,*arg5,*arg6,*arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraphMatch_mem_read(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraphMatch *arg1 = (CGraphMatch *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CGraphMatch_mem_read",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraphMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->mem_read(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CGraphMatch_mem_write(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CGraphMatch *arg1 = (CGraphMatch *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CGraphMatch_mem_write",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CGraphMatch,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->mem_write(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CGraphMatch_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CGraphMatch, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CAlignParams_gapWeight_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignParams *arg1 = (CAlignParams *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAlignParams_gapWeight_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignParams,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->gapWeight = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignParams_gapWeight_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignParams *arg1 = (CAlignParams *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAlignParams_gapWeight_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignParams,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->gapWeight);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignParams_spaceWeight_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignParams *arg1 = (CAlignParams *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAlignParams_spaceWeight_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignParams,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->spaceWeight = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignParams_spaceWeight_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignParams *arg1 = (CAlignParams *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAlignParams_spaceWeight_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignParams,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->spaceWeight);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignParams_equalScore_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignParams *arg1 = (CAlignParams *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAlignParams_equalScore_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignParams,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->equalScore = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignParams_equalScore_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignParams *arg1 = (CAlignParams *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAlignParams_equalScore_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignParams,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->equalScore);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignParams_nequalScore_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignParams *arg1 = (CAlignParams *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CAlignParams_nequalScore_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignParams,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nequalScore = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignParams_nequalScore_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignParams *arg1 = (CAlignParams *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAlignParams_nequalScore_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignParams,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->nequalScore);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignParams_method_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignParams *arg1 = (CAlignParams *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CAlignParams_method_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignParams,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->method = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignParams_method_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignParams *arg1 = (CAlignParams *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAlignParams_method_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignParams,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->method);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CAlignParams__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignParams *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CAlignParams")) goto fail;
    result = (CAlignParams *)new CAlignParams();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CAlignParams, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CAlignParams__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CAlignParams *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CAlignParams",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CAlignParams *)new CAlignParams(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CAlignParams, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CAlignParams(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CAlignParams__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CAlignParams__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CAlignParams'");
    return NULL;
}


static PyObject *_wrap_delete_CAlignParams(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignParams *arg1 = (CAlignParams *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CAlignParams",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignParams,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CAlignParams_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CAlignParams, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CAlignment__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CAlignment")) goto fail;
    result = (CAlignment *)new CAlignment();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CAlignment, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CAlignment__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CAlignment *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CAlignment",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CAlignment *)new CAlignment(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CAlignment, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CAlignment(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CAlignment__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CAlignment__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CAlignment'");
    return NULL;
}


static PyObject *_wrap_delete_CAlignment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment *arg1 = (CAlignment *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CAlignment",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment_SetAffineModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment *arg1 = (CAlignment *) 0 ;
    realtype arg2 ;
    realtype arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Odd:CAlignment_SetAffineModel",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAffineModel(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment_SetScores(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment *arg1 = (CAlignment *) 0 ;
    realtype arg2 ;
    realtype arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Odd:CAlignment_SetScores",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetScores(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment_Align(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment *arg1 = (CAlignment *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    int arg4 = (int) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss|i:CAlignment_Align",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Align(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment_GetAlignedS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment *arg1 = (CAlignment *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAlignment_GetAlignedS",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetAlignedS();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment_GetAlignedT(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment *arg1 = (CAlignment *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAlignment_GetAlignedT",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr)(arg1)->GetAlignedT();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment_GetScore(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment *arg1 = (CAlignment *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAlignment_GetScore",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype)(arg1)->GetScore();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment_OutputResults(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment *arg1 = (CAlignment *) 0 ;
    CFile *arg2 = 0 ;
    pstr arg3 ;
    pstr arg4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOss:CAlignment_OutputResults",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->OutputResults(*arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CAlignment_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CAlignment, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_CAlignment1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment1 *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CAlignment1")) goto fail;
    result = (CAlignment1 *)new CAlignment1();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CAlignment1, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_CAlignment1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment1 *arg1 = (CAlignment1 *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CAlignment1",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment1,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment1_SetAffineModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment1 *arg1 = (CAlignment1 *) 0 ;
    realtype arg2 ;
    realtype arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Odd:CAlignment1_SetAffineModel",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment1,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetAffineModel(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment1_SetScores(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment1 *arg1 = (CAlignment1 *) 0 ;
    realtype arg2 ;
    realtype arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Odd:CAlignment1_SetScores",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment1,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetScores(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment1_Align(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment1 *arg1 = (CAlignment1 *) 0 ;
    ivector arg2 = (ivector) 0 ;
    int arg3 ;
    ivector arg4 = (ivector) 0 ;
    int arg5 ;
    int arg6 = (int) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiOi|i:CAlignment1_Align",&obj0,&obj1,&arg3,&obj3,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment1,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Align(arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment1_GetAlignedS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment1 *arg1 = (CAlignment1 *) 0 ;
    ivector result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAlignment1_GetAlignedS",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment1,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (ivector)(arg1)->GetAlignedS();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_ivector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment1_GetAlignedT(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment1 *arg1 = (CAlignment1 *) 0 ;
    ivector result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAlignment1_GetAlignedT",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment1,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (ivector)(arg1)->GetAlignedT();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_ivector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment1_GetAlignLength(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment1 *arg1 = (CAlignment1 *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAlignment1_GetAlignLength",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment1,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetAlignLength();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment1_GetScore(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment1 *arg1 = (CAlignment1 *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CAlignment1_GetScore",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment1,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype)(arg1)->GetScore();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CAlignment1_OutputResults(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CAlignment1 *arg1 = (CAlignment1 *) 0 ;
    CFile *arg2 = 0 ;
    ivector arg3 = (ivector) 0 ;
    int arg4 ;
    ivector arg5 = (ivector) 0 ;
    int arg6 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOiOi:CAlignment1_OutputResults",&obj0,&obj1,&obj2,&arg4,&obj4,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CAlignment1,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        CFile arg;    CFile *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_CFile,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->OutputResults(*arg2,arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CAlignment1_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CAlignment1, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CSBAtom_sca_name_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBAtom_sca_name_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg2) strncpy(arg1->sca_name,arg2,20+1);
        else arg1->sca_name[0] = 0;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_sca_name_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAtom_sca_name_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(char *) ((arg1)->sca_name);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_pdb_name_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBAtom_pdb_name_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg2) strncpy(arg1->pdb_name,arg2,20+1);
        else arg1->pdb_name[0] = 0;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_pdb_name_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAtom_pdb_name_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(char *) ((arg1)->pdb_name);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_element_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBAtom_element_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg2) strncpy(arg1->element,arg2,5+1);
        else arg1->element[0] = 0;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_element_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAtom_element_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(char *) ((arg1)->element);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_energyType_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBAtom_energyType_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg2) strncpy(arg1->energyType,arg2,8+1);
        else arg1->energyType[0] = 0;
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_energyType_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAtom_energyType_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(char *) ((arg1)->energyType);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_x_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CSBAtom_x_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->x = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_x_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAtom_x_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->x);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_y_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CSBAtom_y_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->y = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_y_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAtom_y_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->y);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_z_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CSBAtom_z_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->z = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_z_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAtom_z_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->z);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_x_esd_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CSBAtom_x_esd_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->x_esd = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_x_esd_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAtom_x_esd_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->x_esd);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_y_esd_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CSBAtom_y_esd_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->y_esd = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_y_esd_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAtom_y_esd_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->y_esd);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_z_esd_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CSBAtom_z_esd_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->z_esd = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_z_esd_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAtom_z_esd_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->z_esd);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_chirality_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    char arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oc:CSBAtom_chirality_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->chirality = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_chirality_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    char result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAtom_chirality_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char) ((arg1)->chirality);
    
    resultobj = Py_BuildValue((char*)"c",result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_leaving_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    char arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oc:CSBAtom_leaving_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->leaving = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_leaving_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    char result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAtom_leaving_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char) ((arg1)->leaving);
    
    resultobj = Py_BuildValue((char*)"c",result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBAtom__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSBAtom")) goto fail;
    result = (CSBAtom *)new CSBAtom();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSBAtom, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBAtom__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CSBAtom *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSBAtom",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CSBAtom *)new CSBAtom(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSBAtom, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBAtom(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CSBAtom__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSBAtom__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CSBAtom'");
    return NULL;
}


static PyObject *_wrap_delete_CSBAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSBAtom",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_makeCAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    PCAtom *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBAtom_makeCAtom",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PCAtom arg;    PCAtom *argp;    if ((SWIG_ConvertPtr(obj1,(void **) &argp, SWIGTYPE_p_PCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg2 = &arg;  
    }
    (arg1)->makeCAtom(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAtom_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAtom *arg1 = (CSBAtom *) 0 ;
    PCSBAtom arg2 = (PCSBAtom) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBAtom_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSBAtom_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSBAtom, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CSBBond_atom1_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *arg1 = (CSBBond *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBBond_atom1_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->atom1 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBBond_atom1_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *arg1 = (CSBBond *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBBond_atom1_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->atom1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBBond_atom2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *arg1 = (CSBBond *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBBond_atom2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->atom2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBBond_atom2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *arg1 = (CSBBond *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBBond_atom2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->atom2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBBond_order_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *arg1 = (CSBBond *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBBond_order_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->order = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBBond_order_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *arg1 = (CSBBond *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBBond_order_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->order);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBBond_length_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *arg1 = (CSBBond *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CSBBond_length_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->length = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBBond_length_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *arg1 = (CSBBond *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBBond_length_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->length);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBBond_length_esd_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *arg1 = (CSBBond *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CSBBond_length_esd_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->length_esd = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBBond_length_esd_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *arg1 = (CSBBond *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBBond_length_esd_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->length_esd);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBBond__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSBBond")) goto fail;
    result = (CSBBond *)new CSBBond();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSBBond, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBBond__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CSBBond *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSBBond",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CSBBond *)new CSBBond(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSBBond, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBBond(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CSBBond__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSBBond__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CSBBond'");
    return NULL;
}


static PyObject *_wrap_delete_CSBBond(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *arg1 = (CSBBond *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSBBond",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBBond_SetBond(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *arg1 = (CSBBond *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:CSBBond_SetBond",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetBond(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBBond_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBBond *arg1 = (CSBBond *) 0 ;
    PCSBBond arg2 = (PCSBBond) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBBond_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSBBond_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSBBond, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CSBAngle_atom1_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAngle *arg1 = (CSBAngle *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBAngle_atom1_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->atom1 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAngle_atom1_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAngle *arg1 = (CSBAngle *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAngle_atom1_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->atom1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAngle_atom2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAngle *arg1 = (CSBAngle *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBAngle_atom2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->atom2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAngle_atom2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAngle *arg1 = (CSBAngle *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAngle_atom2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->atom2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAngle_atom3_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAngle *arg1 = (CSBAngle *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBAngle_atom3_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->atom3 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAngle_atom3_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAngle *arg1 = (CSBAngle *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAngle_atom3_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->atom3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAngle_angle_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAngle *arg1 = (CSBAngle *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CSBAngle_angle_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->angle = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAngle_angle_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAngle *arg1 = (CSBAngle *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAngle_angle_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->angle);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAngle_angle_esd_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAngle *arg1 = (CSBAngle *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CSBAngle_angle_esd_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->angle_esd = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAngle_angle_esd_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAngle *arg1 = (CSBAngle *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBAngle_angle_esd_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->angle_esd);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBAngle__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAngle *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSBAngle")) goto fail;
    result = (CSBAngle *)new CSBAngle();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSBAngle, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBAngle__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CSBAngle *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSBAngle",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CSBAngle *)new CSBAngle(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSBAngle, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBAngle(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CSBAngle__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSBAngle__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CSBAngle'");
    return NULL;
}


static PyObject *_wrap_delete_CSBAngle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAngle *arg1 = (CSBAngle *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSBAngle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBAngle_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBAngle *arg1 = (CSBAngle *) 0 ;
    PCSBAngle arg2 = (PCSBAngle) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBAngle_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSBAngle_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSBAngle, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CSBTorsion_atom1_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBTorsion_atom1_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->atom1 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBTorsion_atom1_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBTorsion_atom1_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->atom1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBTorsion_atom2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBTorsion_atom2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->atom2 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBTorsion_atom2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBTorsion_atom2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->atom2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBTorsion_atom3_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBTorsion_atom3_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->atom3 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBTorsion_atom3_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBTorsion_atom3_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->atom3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBTorsion_atom4_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBTorsion_atom4_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->atom4 = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBTorsion_atom4_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBTorsion_atom4_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->atom4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBTorsion_torsion_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CSBTorsion_torsion_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->torsion = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBTorsion_torsion_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBTorsion_torsion_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->torsion);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBTorsion_torsion_esd_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    realtype arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:CSBTorsion_torsion_esd_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->torsion_esd = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBTorsion_torsion_esd_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    realtype result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBTorsion_torsion_esd_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (realtype) ((arg1)->torsion_esd);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBTorsion__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSBTorsion")) goto fail;
    result = (CSBTorsion *)new CSBTorsion();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSBTorsion, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBTorsion__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CSBTorsion *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSBTorsion",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CSBTorsion *)new CSBTorsion(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSBTorsion, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBTorsion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CSBTorsion__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSBTorsion__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CSBTorsion'");
    return NULL;
}


static PyObject *_wrap_delete_CSBTorsion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSBTorsion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBTorsion_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBTorsion *arg1 = (CSBTorsion *) 0 ;
    PCSBTorsion arg2 = (PCSBTorsion) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBTorsion_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSBTorsion_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSBTorsion, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CSBStructure_compoundID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBStructure_compoundID_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->compoundID,arg2,11);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_compoundID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_compoundID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->compoundID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Formula_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBStructure_Formula_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->Formula) delete [] arg1->Formula;
        arg1->Formula = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->Formula,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Formula_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_Formula_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->Formula);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Name_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBStructure_Name_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->Name) delete [] arg1->Name;
        arg1->Name = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->Name,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Name_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_Name_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->Name);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Synonym_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBStructure_Synonym_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->Synonym) delete [] arg1->Synonym;
        arg1->Synonym = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->Synonym,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Synonym_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_Synonym_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->Synonym);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Charge_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBStructure_Charge_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->Charge) delete [] arg1->Charge;
        arg1->Charge = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->Charge,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Charge_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_Charge_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->Charge);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_nAtoms_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBStructure_nAtoms_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nAtoms = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_nAtoms_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_nAtoms_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nAtoms);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_nBonds_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBStructure_nBonds_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nBonds = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_nBonds_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_nBonds_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nBonds);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_nAngles_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBStructure_nAngles_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nAngles = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_nAngles_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_nAngles_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nAngles);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_nTorsions_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBStructure_nTorsions_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nTorsions = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_nTorsions_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_nTorsions_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nTorsions);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Atom_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PPCSBAtom arg2 ;
    PPCSBAtom *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBStructure_Atom_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCSBAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->Atom = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Atom_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PPCSBAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_Atom_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Atom);
    
    {
        PPCSBAtom * resultptr;
        resultptr = new PPCSBAtom((PPCSBAtom &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSBAtom, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Bond_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PPCSBBond arg2 ;
    PPCSBBond *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBStructure_Bond_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCSBBond,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->Bond = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Bond_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PPCSBBond result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_Bond_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Bond);
    
    {
        PPCSBBond * resultptr;
        resultptr = new PPCSBBond((PPCSBBond &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSBBond, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Angle_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PPCSBAngle arg2 ;
    PPCSBAngle *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBStructure_Angle_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCSBAngle,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->Angle = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Angle_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PPCSBAngle result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_Angle_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Angle);
    
    {
        PPCSBAngle * resultptr;
        resultptr = new PPCSBAngle((PPCSBAngle &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSBAngle, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Torsion_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PPCSBTorsion arg2 ;
    PPCSBTorsion *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBStructure_Torsion_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PPCSBTorsion,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->Torsion = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Torsion_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PPCSBTorsion result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_Torsion_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Torsion);
    
    {
        PPCSBTorsion * resultptr;
        resultptr = new PPCSBTorsion((PPCSBTorsion &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSBTorsion, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_nLeavingAtoms_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBStructure_nLeavingAtoms_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nLeavingAtoms = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_nLeavingAtoms_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_nLeavingAtoms_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nLeavingAtoms);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_leavingAtom_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    ivector arg2 = (ivector) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBStructure_leavingAtom_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->leavingAtom = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_leavingAtom_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    ivector result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_leavingAtom_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (ivector) ((arg1)->leavingAtom);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_ivector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_bondedAtom_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    ivector arg2 = (ivector) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBStructure_bondedAtom_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->bondedAtom = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_bondedAtom_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    ivector result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_bondedAtom_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (ivector) ((arg1)->bondedAtom);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_ivector, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_xyz_source_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    char arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oc:CSBStructure_xyz_source_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->xyz_source = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_xyz_source_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    char result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_xyz_source_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char) ((arg1)->xyz_source);
    
    resultobj = Py_BuildValue((char*)"c",result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBStructure__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSBStructure")) goto fail;
    result = (CSBStructure *)new CSBStructure();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSBStructure, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBStructure__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CSBStructure *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSBStructure",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CSBStructure *)new CSBStructure(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSBStructure, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBStructure(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CSBStructure__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSBStructure__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CSBStructure'");
    return NULL;
}


static PyObject *_wrap_delete_CSBStructure(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSBStructure",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_Reset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_PutFormula(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBStructure_PutFormula",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutFormula(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_PutName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBStructure_PutName",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutName(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_PutSynonym(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBStructure_PutSynonym",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutSynonym(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_PutCharge(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBStructure_PutCharge",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PutCharge(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_AddAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PCSBAtom arg2 = (PCSBAtom) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBStructure_AddAtom",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSBAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddAtom(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_AddBond(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PCSBBond arg2 = (PCSBBond) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBStructure_AddBond",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSBBond,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddBond(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_MakeLeavingAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_MakeLeavingAtoms",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->MakeLeavingAtoms();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_AddAngle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PCSBAngle arg2 = (PCSBAngle) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBStructure_AddAngle",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSBAngle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddAngle(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_AddTorsion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PCSBTorsion arg2 = (PCSBTorsion) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBStructure_AddTorsion",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSBTorsion,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->AddTorsion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_RemoveEnergyTypes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_RemoveEnergyTypes",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RemoveEnergyTypes();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_SetEnergyType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:CSBStructure_SetEnergyType",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->SetEnergyType(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_GetAtomNo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBStructure_GetAtomNo",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetAtomNo(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_GetAtomTable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PPCAtom *arg2 = 0 ;
    int *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:CSBStructure_GetAtomTable",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetAtomTable(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_CheckAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBStructure_CheckAtoms",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CheckAtoms();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBStructure_Copy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBStructure *arg1 = (CSBStructure *) 0 ;
    PCSBStructure arg2 = (PCSBStructure) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBStructure_Copy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Copy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSBStructure_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSBStructure, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_CSBIndex_compoundID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    char *arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBIndex_compoundID_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        strncpy(arg1->compoundID,arg2,11);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_compoundID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    char *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBIndex_compoundID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->compoundID);
    
    resultobj = PyString_FromString(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_nAtoms_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBIndex_nAtoms_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nAtoms = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_nAtoms_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBIndex_nAtoms_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nAtoms);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_nBonds_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBIndex_nBonds_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nBonds = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_nBonds_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBIndex_nBonds_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nBonds);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_fGraphPos_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBIndex_fGraphPos_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->fGraphPos = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_fGraphPos_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBIndex_fGraphPos_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->fGraphPos);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_fStructPos_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBIndex_fStructPos_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->fStructPos = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_fStructPos_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBIndex_fStructPos_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->fStructPos);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_loadPos_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBIndex_loadPos_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->loadPos = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_loadPos_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBIndex_loadPos_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->loadPos);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_nXTs_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBIndex_nXTs_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nXTs = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_nXTs_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBIndex_nXTs_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->nXTs);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_Comp1_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBIndex_Comp1_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->Comp1) delete [] arg1->Comp1;
        arg1->Comp1 = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->Comp1,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_Comp1_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBIndex_Comp1_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->Comp1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_Comp2_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    pstr arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBIndex_Comp2_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->Comp2) delete [] arg1->Comp2;
        arg1->Comp2 = (pstr) (new char[strlen(arg2)+1]);
        strcpy((char *) arg1->Comp2,arg2);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_Comp2_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    pstr result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBIndex_Comp2_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pstr) ((arg1)->Comp2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBIndex__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSBIndex")) goto fail;
    result = (CSBIndex *)new CSBIndex();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSBIndex, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBIndex__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCStream *arg1 = 0 ;
    CSBIndex *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_CSBIndex",&obj0)) goto fail;
    {
        PCStream arg;    PCStream *argp;    if ((SWIG_ConvertPtr(obj0,(void **) &argp, SWIGTYPE_p_PCStream,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg1 = &arg;  
    }
    result = (CSBIndex *)new CSBIndex(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSBIndex, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_CSBIndex(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_CSBIndex__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_PCStream, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_CSBIndex__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_CSBIndex'");
    return NULL;
}


static PyObject *_wrap_delete_CSBIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSBIndex",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBIndex_MakeCompositions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBIndex *arg1 = (CSBIndex *) 0 ;
    PCSBStructure arg2 = (PCSBStructure) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:CSBIndex_MakeCompositions",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCSBStructure,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->MakeCompositions(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSBIndex_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSBIndex, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_MakeChirInd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char arg1 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"c:MakeChirInd",&arg1)) goto fail;
    result = (int)MakeChirInd(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MakeElementType__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    Boolean arg3 ;
    int result;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iiO:MakeElementType",&arg1,&arg2,&obj2)) goto fail;
    arg3 = (Boolean) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)MakeElementType(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MakeElementType__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    char arg2 ;
    Boolean arg3 ;
    int result;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"icO:MakeElementType",&arg1,&arg2,&obj2)) goto fail;
    arg3 = (Boolean) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    result = (int)MakeElementType(arg1,arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_MakeElementType(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_MakeElementType__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyString_Check(argv[1]) && (PyString_Size(argv[1]) == 1)) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_MakeElementType__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'MakeElementType'");
    return NULL;
}


static PyObject *_wrap_new_CSBase(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_CSBase")) goto fail;
    result = (CSBase *)new CSBase();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_CSBase, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_CSBase(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_CSBase",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_LoadIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBase_LoadIndex",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->LoadIndex(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_LoadIndex1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBase_LoadIndex1",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->LoadIndex1(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_LoadStructure(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBase_LoadStructure",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->LoadStructure(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_UnloadStructure(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBase_UnloadStructure",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->UnloadStructure(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    pstr *arg2 = 0 ;
    pstr arg3 ;
    pstr result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:CSBase_GetPath",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pstr,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pstr)(arg1)->GetPath(*arg2,arg3);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetStructFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    PCFile result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBase_GetStructFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCFile)(arg1)->GetStructFile();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetGraphFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    PCFile result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBase_GetGraphFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCFile)(arg1)->GetGraphFile();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetStructure__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    pstr arg2 ;
    PCSBStructure result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBase_GetStructure",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCSBStructure)(arg1)->GetStructure(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSBStructure, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetStructure__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    int arg2 ;
    PCSBStructure result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBase_GetStructure",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCSBStructure)(arg1)->GetStructure(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSBStructure, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetStructure__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    pstr arg2 ;
    PCFile arg3 = (PCFile) 0 ;
    PCSBStructure result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:CSBase_GetStructure",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PCFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PCSBStructure)(arg1)->GetStructure(arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSBStructure, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetStructure(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSBase, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CSBase_GetStructure__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSBase, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CSBase_GetStructure__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSBase, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_PCFile, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_CSBase_GetStructure__SWIG_2(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CSBase_GetStructure'");
    return NULL;
}


static PyObject *_wrap_CSBase_GetGraph__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    PCFile arg2 = (PCFile) 0 ;
    int arg3 ;
    PCGraph *arg4 = 0 ;
    int arg5 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiOi:CSBase_GetGraph",&obj0,&obj1,&arg3,&obj3,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PCGraph arg;    PCGraph *argp;    if ((SWIG_ConvertPtr(obj3,(void **) &argp, SWIGTYPE_p_PCGraph,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg4 = &arg;  
    }
    result = (int)(arg1)->GetGraph(arg2,arg3,*arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetGraph__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    PCFile arg2 = (PCFile) 0 ;
    PCGraph *arg3 = 0 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOi:CSBase_GetGraph",&obj0,&obj1,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PCGraph arg;    PCGraph *argp;    if ((SWIG_ConvertPtr(obj2,(void **) &argp, SWIGTYPE_p_PCGraph,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg3 = &arg;  
    }
    result = (int)(arg1)->GetGraph(arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetGraph__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    int arg2 ;
    PCGraph *arg3 = 0 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOi:CSBase_GetGraph",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PCGraph arg;    PCGraph *argp;    if ((SWIG_ConvertPtr(obj2,(void **) &argp, SWIGTYPE_p_PCGraph,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg3 = &arg;  
    }
    result = (int)(arg1)->GetGraph(arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetGraph__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    pstr arg2 ;
    PCGraph *arg3 = 0 ;
    int arg4 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOi:CSBase_GetGraph",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PCGraph arg;    PCGraph *argp;    if ((SWIG_ConvertPtr(obj2,(void **) &argp, SWIGTYPE_p_PCGraph,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;    arg = *argp;     arg3 = &arg;  
    }
    result = (int)(arg1)->GetGraph(arg2,*arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetGraph(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSBase, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCFile, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PCGraph, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CSBase_GetGraph__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSBase, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PCGraph, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CSBase_GetGraph__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSBase, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_PCGraph, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_CSBase_GetGraph__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSBase, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCFile, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_PCGraph, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_CSBase_GetGraph__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CSBase_GetGraph'");
    return NULL;
}


static PyObject *_wrap_CSBase_GetStructNo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBase_GetStructNo",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetStructNo(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetNofAtoms__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    pstr arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:CSBase_GetNofAtoms",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNofAtoms(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetNofAtoms__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    int arg2 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:CSBase_GetNofAtoms",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNofAtoms(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetNofStructures(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:CSBase_GetNofStructures",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetNofStructures();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_CheckGraph(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    PCGraph arg2 = (PCGraph) 0 ;
    int arg3 ;
    Boolean arg4 ;
    int *arg5 = 0 ;
    int *arg6 = 0 ;
    ivector arg7 = (ivector) 0 ;
    int arg8 = (int) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiOOOO|i:CSBase_CheckGraph",&obj0,&obj1,&arg3,&obj3,&obj4,&obj5,&obj6,&arg8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCGraph,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = (Boolean) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CheckGraph(arg2,arg3,arg4,*arg5,*arg6,arg7,arg8);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_CheckResidue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    PCResidue arg2 = (PCResidue) 0 ;
    int arg3 ;
    Boolean arg4 ;
    int *arg5 = 0 ;
    int *arg6 = 0 ;
    int *arg7 = 0 ;
    ivector arg8 = (ivector) 0 ;
    pstr arg9 = (pstr) (pstr)pstr("") ;
    int arg10 = (int) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    PyObject * obj7  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiOOOOO|si:CSBase_CheckResidue",&obj0,&obj1,&arg3,&obj3,&obj4,&obj5,&obj6,&obj7,&arg9,&arg10)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg4 = (Boolean) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj7,(void **) &arg8, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CheckResidue(arg2,arg3,arg4,*arg5,*arg6,*arg7,arg8,arg9,arg10);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_ComplementResidue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    PCResidue arg2 = (PCResidue) 0 ;
    int arg3 ;
    PCFile arg4 = (PCFile) NULL ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi|O:CSBase_ComplementResidue",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCResidue,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_PCFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (int)(arg1)->ComplementResidue(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_ComplementChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    PCChain arg2 = (PCChain) 0 ;
    int arg3 ;
    PCFile arg4 = (PCFile) NULL ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi|O:CSBase_ComplementChain",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCChain,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_PCFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (int)(arg1)->ComplementChain(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_ComplementModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    PCModel arg2 = (PCModel) 0 ;
    int arg3 ;
    PCFile arg4 = (PCFile) NULL ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi|O:CSBase_ComplementModel",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCModel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_PCFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (int)(arg1)->ComplementModel(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_ComplementFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    PCMMDBManager arg2 = (PCMMDBManager) 0 ;
    int arg3 ;
    PCFile arg4 = (PCFile) NULL ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi|O:CSBase_ComplementFile",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCMMDBManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_PCFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (int)(arg1)->ComplementFile(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetAtNames__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    int arg2 ;
    PAtomName arg3 = (PAtomName) 0 ;
    int *arg4 = 0 ;
    int *arg5 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOOO:CSBase_GetAtNames",&obj0,&arg2,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_PAtomName,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetAtNames(arg2,arg3,*arg4,*arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetAtNames__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    PCFile arg2 = (PCFile) 0 ;
    int arg3 ;
    PAtomName arg4 = (PAtomName) 0 ;
    int *arg5 = 0 ;
    int *arg6 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiOOO:CSBase_GetAtNames",&obj0,&obj1,&arg3,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_PCFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_PAtomName,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg6 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetAtNames(arg2,arg3,arg4,*arg5,*arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetAtNames(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSBase, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_PAtomName, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_CSBase_GetAtNames__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSBase, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_PCFile, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_PAtomName, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_CSBase_GetAtNames__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CSBase_GetAtNames'");
    return NULL;
}


static PyObject *_wrap_CSBase_GetNofAtoms__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    int arg2 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiOO:CSBase_GetNofAtoms",&obj0,&arg2,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetNofAtoms(arg2,*arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetNofAtoms(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSBase, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CSBase_GetNofAtoms__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSBase, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_CSBase_GetNofAtoms__SWIG_0(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_CSBase, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        return _wrap_CSBase_GetNofAtoms__SWIG_2(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'CSBase_GetNofAtoms'");
    return NULL;
}


static PyObject *_wrap_CSBase_GetAtoms(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    pstr arg2 ;
    int *arg3 = 0 ;
    PAtomName arg4 = (PAtomName) 0 ;
    int *arg5 = 0 ;
    PAtomName arg6 = (PAtomName) 0 ;
    ivector arg7 = (ivector) 0 ;
    ivector arg8 = (ivector) 0 ;
    ivector arg9 = (ivector) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    PyObject * obj7  = 0 ;
    PyObject * obj8  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOOOOOOO:CSBase_GetAtoms",&obj0,&arg2,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_PAtomName,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_PAtomName,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj7,(void **) &arg8, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj8,(void **) &arg9, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->GetAtoms(arg2,*arg3,arg4,*arg5,arg6,arg7,arg8,arg9);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetBonds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    pstr arg2 ;
    ivector arg3 = (ivector) 0 ;
    imatrix arg4 = (imatrix) 0 ;
    int *arg5 = 0 ;
    int arg6 ;
    int arg7 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsOOOii:CSBase_GetBonds",&obj0,&arg2,&obj2,&obj3,&obj4,&arg6,&arg7)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_ivector,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_imatrix,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetBonds(arg2,arg3,arg4,*arg5,arg6,arg7);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_CSBase_GetHetInfo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    CSBase *arg1 = (CSBase *) 0 ;
    pstr arg2 ;
    pstr arg3 ;
    pstr arg4 ;
    pstr arg5 ;
    pstr arg6 ;
    PAtomName *arg7 = 0 ;
    PElement *arg8 = 0 ;
    PAtomName *arg9 = 0 ;
    PElement *arg10 = 0 ;
    int *arg11 = 0 ;
    int result;
    PyObject * obj0  = 0 ;
    PyObject * obj6  = 0 ;
    PyObject * obj7  = 0 ;
    PyObject * obj8  = 0 ;
    PyObject * obj9  = 0 ;
    PyObject * obj10  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsssssOOOOO:CSBase_GetHetInfo",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&obj6,&obj7,&obj8,&obj9,&obj10)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_CSBase,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_PAtomName,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg7 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj7,(void **) &arg8, SWIGTYPE_p_PElement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg8 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj8,(void **) &arg9, SWIGTYPE_p_PAtomName,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg9 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj9,(void **) &arg10, SWIGTYPE_p_PElement,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg10 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj10,(void **) &arg11, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg11 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->GetHetInfo(arg2,arg3,arg4,arg5,arg6,*arg7,*arg8,*arg9,*arg10,*arg11);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * CSBase_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_CSBase, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_ElementName_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable ElementName is read-only.");
    return 1;
}


static PyObject *_wrap_ElementName_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) ElementName, SWIGTYPE_p_pstr, 0);
    return pyobj;
}


static int _wrap_ElementMetal_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable ElementMetal is read-only.");
    return 1;
}


static PyObject *_wrap_ElementMetal_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) ElementMetal, SWIGTYPE_p_pstr, 0);
    return pyobj;
}


static int _wrap_HydAtomName_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable HydAtomName is read-only.");
    return 1;
}


static PyObject *_wrap_HydAtomName_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) HydAtomName, SWIGTYPE_p_pstr, 0);
    return pyobj;
}


static int _wrap_MolecWeight_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable MolecWeight is read-only.");
    return 1;
}


static PyObject *_wrap_MolecWeight_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) MolecWeight, SWIGTYPE_p_realtype, 0);
    return pyobj;
}


static int _wrap_CovalentRadius_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable CovalentRadius is read-only.");
    return 1;
}


static PyObject *_wrap_CovalentRadius_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) CovalentRadius, SWIGTYPE_p_realtype, 0);
    return pyobj;
}


static int _wrap_VdWaalsRadius_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable VdWaalsRadius is read-only.");
    return 1;
}


static PyObject *_wrap_VdWaalsRadius_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) VdWaalsRadius, SWIGTYPE_p_realtype, 0);
    return pyobj;
}


static int _wrap_IonicRadius_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable IonicRadius is read-only.");
    return 1;
}


static PyObject *_wrap_IonicRadius_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) IonicRadius, SWIGTYPE_p_realtype, 0);
    return pyobj;
}


static PyObject *_wrap_isMetal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    Boolean result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:isMetal",&arg1)) goto fail;
    result = (Boolean)isMetal(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_getElementNo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:getElementNo",&arg1)) goto fail;
    result = (int)getElementNo(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_getCovalentRadius(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:getCovalentRadius",&arg1)) goto fail;
    result = (realtype)getCovalentRadius(arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_getVdWaalsRadius(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:getVdWaalsRadius",&arg1)) goto fail;
    result = (realtype)getVdWaalsRadius(arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static int _wrap_ResidueName_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable ResidueName is read-only.");
    return 1;
}


static PyObject *_wrap_ResidueName_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) ResidueName, SWIGTYPE_p_pstr, 0);
    return pyobj;
}


static int _wrap_ResidueName1_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable ResidueName1 is read-only.");
    return 1;
}


static PyObject *_wrap_ResidueName1_get() {
    PyObject *pyobj;
    
    pyobj = PyString_FromString(ResidueName1);
    return pyobj;
}


static PyObject *_wrap_GetAAHydropathy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    realtype result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:GetAAHydropathy",&arg1)) goto fail;
    result = (realtype)GetAAHydropathy(arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GetAASimilarity(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"ss:GetAASimilarity",&arg1,&arg2)) goto fail;
    result = (int)GetAASimilarity(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static int _wrap_StdSolventName_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable StdSolventName is read-only.");
    return 1;
}


static PyObject *_wrap_StdSolventName_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) StdSolventName, SWIGTYPE_p_pstr, 0);
    return pyobj;
}


static int _wrap_AminoacidName_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable AminoacidName is read-only.");
    return 1;
}


static PyObject *_wrap_AminoacidName_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) AminoacidName, SWIGTYPE_p_pstr, 0);
    return pyobj;
}


static int _wrap_NucleotideName_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable NucleotideName is read-only.");
    return 1;
}


static PyObject *_wrap_NucleotideName_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) NucleotideName, SWIGTYPE_p_pstr, 0);
    return pyobj;
}


static PyObject *_wrap_isSolvent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    Boolean result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:isSolvent",&arg1)) goto fail;
    result = (Boolean)isSolvent(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_isAminoacid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    Boolean result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:isAminoacid",&arg1)) goto fail;
    result = (Boolean)isAminoacid(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_isNucleotide(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    Boolean result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:isNucleotide",&arg1)) goto fail;
    result = (Boolean)isNucleotide(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_isSugar(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    Boolean result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:isSugar",&arg1)) goto fail;
    result = (Boolean)isSugar(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Get1LetterCode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pstr arg1 ;
    pstr arg2 ;
    
    if(!PyArg_ParseTuple(args,(char *)"ss:Get1LetterCode",&arg1,&arg2)) goto fail;
    Get1LetterCode(arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_getPCChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PPCChain arg1 ;
    int arg2 ;
    PCChain result;
    PPCChain *argp1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:getPCChain",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_PPCChain,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    result = (PCChain)getPCChain(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCChain, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_getPCResidue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PPCResidue arg1 ;
    int arg2 ;
    PCResidue result;
    PPCResidue *argp1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:getPCResidue",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_PPCResidue,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    result = (PCResidue)getPCResidue(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_getPPCAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PPCAtom *arg1 = (PPCAtom *) 0 ;
    int arg2 ;
    PPCAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:getPPCAtom",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = getPPCAtom(arg1,arg2);
    
    {
        PPCAtom * resultptr;
        resultptr = new PPCAtom((PPCAtom &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCAtom, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_getPCAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PPCAtom arg1 ;
    int arg2 ;
    PCAtom result;
    PPCAtom *argp1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:getPCAtom",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_PPCAtom,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    result = (PCAtom)getPCAtom(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_getCAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCAtom arg1 = (PCAtom) 0 ;
    CAtom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:getCAtom",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_PCAtom,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = getCAtom(arg1);
    
    {
        CAtom * resultptr;
        resultptr = new CAtom((CAtom &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_CAtom, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_getSContact(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PSContact arg1 ;
    int arg2 ;
    SContact result;
    PSContact *argp1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:getSContact",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_PSContact,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    result = getSContact(arg1,arg2);
    
    {
        SContact * resultptr;
        resultptr = new SContact((SContact &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_SContact, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCAtom result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCAtom",&arg1)) goto fail;
    result = (PCAtom)newPCAtom(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtom, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCAtom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCAtom result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCAtom",&arg1)) goto fail;
    result = newPPCAtom(arg1);
    
    {
        PPCAtom * resultptr;
        resultptr = new PPCAtom((PPCAtom &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCAtom, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCBFGSMin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCBFGSMin result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCBFGSMin",&arg1)) goto fail;
    result = (PCBFGSMin)newPCBFGSMin(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCBFGSMin, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCBFGSMin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCBFGSMin result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCBFGSMin",&arg1)) goto fail;
    result = newPPCBFGSMin(arg1);
    
    {
        PPCBFGSMin * resultptr;
        resultptr = new PPCBFGSMin((PPCBFGSMin &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCBFGSMin, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCFile result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCFile",&arg1)) goto fail;
    result = (PCFile)newPCFile(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCFile result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCFile",&arg1)) goto fail;
    result = newPPCFile(arg1);
    
    {
        PPCFile * resultptr;
        resultptr = new PPCFile((PPCFile &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCFile, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCProModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCProModel result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCProModel",&arg1)) goto fail;
    result = (PCProModel)newPCProModel(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCProModel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCProModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCProModel result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCProModel",&arg1)) goto fail;
    result = newPPCProModel(arg1);
    
    {
        PPCProModel * resultptr;
        resultptr = new PPCProModel((PPCProModel &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCProModel, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCChainContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCChainContainer result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCChainContainer",&arg1)) goto fail;
    result = (PCChainContainer)newPCChainContainer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCChainContainer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCChainContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCChainContainer result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCChainContainer",&arg1)) goto fail;
    result = newPPCChainContainer(arg1);
    
    {
        PPCChainContainer * resultptr;
        resultptr = new PPCChainContainer((PPCChainContainer &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCChainContainer, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCContainerChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCContainerChain result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCContainerChain",&arg1)) goto fail;
    result = (PCContainerChain)newPCContainerChain(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCContainerChain, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCContainerChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCContainerChain result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCContainerChain",&arg1)) goto fail;
    result = newPPCContainerChain(arg1);
    
    {
        PPCContainerChain * resultptr;
        resultptr = new PPCContainerChain((PPCContainerChain &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCContainerChain, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCDBReference(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCDBReference result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCDBReference",&arg1)) goto fail;
    result = (PCDBReference)newPCDBReference(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCDBReference, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCDBReference(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCDBReference result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCDBReference",&arg1)) goto fail;
    result = newPPCDBReference(arg1);
    
    {
        PPCDBReference * resultptr;
        resultptr = new PPCDBReference((PPCDBReference &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCDBReference, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCSeqAdv(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCSeqAdv result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCSeqAdv",&arg1)) goto fail;
    result = (PCSeqAdv)newPCSeqAdv(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSeqAdv, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCSeqAdv(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCSeqAdv result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCSeqAdv",&arg1)) goto fail;
    result = newPPCSeqAdv(arg1);
    
    {
        PPCSeqAdv * resultptr;
        resultptr = new PPCSeqAdv((PPCSeqAdv &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSeqAdv, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCSeqRes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCSeqRes result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCSeqRes",&arg1)) goto fail;
    result = (PCSeqRes)newPCSeqRes(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSeqRes, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCSeqRes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCSeqRes result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCSeqRes",&arg1)) goto fail;
    result = newPPCSeqRes(arg1);
    
    {
        PPCSeqRes * resultptr;
        resultptr = new PPCSeqRes((PPCSeqRes &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSeqRes, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCModRes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCModRes result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCModRes",&arg1)) goto fail;
    result = (PCModRes)newPCModRes(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCModRes, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCModRes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCModRes result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCModRes",&arg1)) goto fail;
    result = newPPCModRes(arg1);
    
    {
        PPCModRes * resultptr;
        resultptr = new PPCModRes((PPCModRes &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCModRes, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCHetRec(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCHetRec result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCHetRec",&arg1)) goto fail;
    result = (PCHetRec)newPCHetRec(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCHetRec, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCHetRec(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCHetRec result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCHetRec",&arg1)) goto fail;
    result = newPPCHetRec(arg1);
    
    {
        PPCHetRec * resultptr;
        resultptr = new PPCHetRec((PPCHetRec &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCHetRec, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCBrick(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCBrick result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCBrick",&arg1)) goto fail;
    result = (PCBrick)newPCBrick(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCBrick, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCBrick(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCBrick result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCBrick",&arg1)) goto fail;
    result = newPPCBrick(arg1);
    
    {
        PPCBrick * resultptr;
        resultptr = new PPCBrick((PPCBrick &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCBrick, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCGenSym(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCGenSym result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCGenSym",&arg1)) goto fail;
    result = (PCGenSym)newPCGenSym(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCGenSym, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCGenSym(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCGenSym result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCGenSym",&arg1)) goto fail;
    result = newPPCGenSym(arg1);
    
    {
        PPCGenSym * resultptr;
        resultptr = new PPCGenSym((PPCGenSym &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCGenSym, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCMMDBCoorManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCMMDBCoorManager result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCMMDBCoorManager",&arg1)) goto fail;
    result = (PCMMDBCoorManager)newPCMMDBCoorManager(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCMMDBCoorManager, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCMMDBCoorManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCMMDBCoorManager result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCMMDBCoorManager",&arg1)) goto fail;
    result = newPPCMMDBCoorManager(arg1);
    
    {
        PPCMMDBCoorManager * resultptr;
        resultptr = new PPCMMDBCoorManager((PPCMMDBCoorManager &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCMMDBCoorManager, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCCrystContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCCrystContainer result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCCrystContainer",&arg1)) goto fail;
    result = newPCCrystContainer(arg1);
    
    {
        PCCrystContainer * resultptr;
        resultptr = new PCCrystContainer((PCCrystContainer &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCCrystContainer, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCCrystContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCCrystContainer result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCCrystContainer",&arg1)) goto fail;
    result = newPPCCrystContainer(arg1);
    
    {
        PPCCrystContainer * resultptr;
        resultptr = new PPCCrystContainer((PPCCrystContainer &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCCrystContainer, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCNCSMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCNCSMatrix result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCNCSMatrix",&arg1)) goto fail;
    result = newPCNCSMatrix(arg1);
    
    {
        PCNCSMatrix * resultptr;
        resultptr = new PCNCSMatrix((PCNCSMatrix &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCNCSMatrix, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCNCSMatrix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCNCSMatrix result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCNCSMatrix",&arg1)) goto fail;
    result = newPPCNCSMatrix(arg1);
    
    {
        PPCNCSMatrix * resultptr;
        resultptr = new PPCNCSMatrix((PPCNCSMatrix &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCNCSMatrix, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCTVect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCTVect result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCTVect",&arg1)) goto fail;
    result = newPCTVect(arg1);
    
    {
        PCTVect * resultptr;
        resultptr = new PCTVect((PCTVect &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCTVect, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCTVect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCTVect result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCTVect",&arg1)) goto fail;
    result = newPPCTVect(arg1);
    
    {
        PPCTVect * resultptr;
        resultptr = new PPCTVect((PPCTVect &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCTVect, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCMMDBCryst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCMMDBCryst result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCMMDBCryst",&arg1)) goto fail;
    result = newPCMMDBCryst(arg1);
    
    {
        PCMMDBCryst * resultptr;
        resultptr = new PCMMDBCryst((PCMMDBCryst &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCMMDBCryst, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCMMDBCryst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCMMDBCryst result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCMMDBCryst",&arg1)) goto fail;
    result = newPPCMMDBCryst(arg1);
    
    {
        PPCMMDBCryst * resultptr;
        resultptr = new PPCMMDBCryst((PPCMMDBCryst &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCMMDBCryst, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCResidue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCResidue result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCResidue",&arg1)) goto fail;
    result = (PCResidue)newPCResidue(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCResidue, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCResidue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCResidue result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCResidue",&arg1)) goto fail;
    result = newPPCResidue(arg1);
    
    {
        PPCResidue * resultptr;
        resultptr = new PPCResidue((PPCResidue &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCResidue, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCChain result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCChain",&arg1)) goto fail;
    result = (PCChain)newPCChain(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCChain, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCChain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCChain result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCChain",&arg1)) goto fail;
    result = newPPCChain(arg1);
    
    {
        PPCChain * resultptr;
        resultptr = new PPCChain((PPCChain &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCChain, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCModel result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCModel",&arg1)) goto fail;
    result = (PCModel)newPCModel(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCModel, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCModel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCModel result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCModel",&arg1)) goto fail;
    result = newPPCModel(arg1);
    
    {
        PPCModel * resultptr;
        resultptr = new PPCModel((PPCModel &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCModel, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCSSContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCSSContainer result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCSSContainer",&arg1)) goto fail;
    result = (PCSSContainer)newPCSSContainer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSSContainer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCSSContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCSSContainer result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCSSContainer",&arg1)) goto fail;
    result = newPPCSSContainer(arg1);
    
    {
        PPCSSContainer * resultptr;
        resultptr = new PPCSSContainer((PPCSSContainer &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSSContainer, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCHelix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCHelix result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCHelix",&arg1)) goto fail;
    result = (PCHelix)newPCHelix(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCHelix, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCHelix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCHelix result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCHelix",&arg1)) goto fail;
    result = newPPCHelix(arg1);
    
    {
        PPCHelix * resultptr;
        resultptr = new PPCHelix((PPCHelix &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCHelix, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCStrand(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCStrand result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCStrand",&arg1)) goto fail;
    result = (PCStrand)newPCStrand(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCStrand, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCStrand(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCStrand result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCStrand",&arg1)) goto fail;
    result = newPPCStrand(arg1);
    
    {
        PPCStrand * resultptr;
        resultptr = new PPCStrand((PPCStrand &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCStrand, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCSheet(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCSheet result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCSheet",&arg1)) goto fail;
    result = (PCSheet)newPCSheet(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSheet, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCSheet(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCSheet result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCSheet",&arg1)) goto fail;
    result = newPPCSheet(arg1);
    
    {
        PPCSheet * resultptr;
        resultptr = new PPCSheet((PPCSheet &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSheet, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCSheets(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCSheets result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCSheets",&arg1)) goto fail;
    result = (PCSheets)newPCSheets(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSheets, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCSheets(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCSheets result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCSheets",&arg1)) goto fail;
    result = newPPCSheets(arg1);
    
    {
        PPCSheets * resultptr;
        resultptr = new PPCSheets((PPCSheets &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSheets, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCTurn(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCTurn result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCTurn",&arg1)) goto fail;
    result = (PCTurn)newPCTurn(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCTurn, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCTurn(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCTurn result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCTurn",&arg1)) goto fail;
    result = newPPCTurn(arg1);
    
    {
        PPCTurn * resultptr;
        resultptr = new PPCTurn((PPCTurn &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCTurn, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCHetCompounds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCHetCompounds result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCHetCompounds",&arg1)) goto fail;
    result = (PCHetCompounds)newPCHetCompounds(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCHetCompounds, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCHetCompounds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCHetCompounds result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCHetCompounds",&arg1)) goto fail;
    result = newPPCHetCompounds(arg1);
    
    {
        PPCHetCompounds * resultptr;
        resultptr = new PPCHetCompounds((PPCHetCompounds &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCHetCompounds, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCMMDBSelManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCMMDBSelManager result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCMMDBSelManager",&arg1)) goto fail;
    result = (PCMMDBSelManager)newPCMMDBSelManager(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCMMDBSelManager, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCMMDBSelManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCMMDBSelManager result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCMMDBSelManager",&arg1)) goto fail;
    result = newPPCMMDBSelManager(arg1);
    
    {
        PPCMMDBSelManager * resultptr;
        resultptr = new PPCMMDBSelManager((PPCMMDBSelManager &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCMMDBSelManager, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCSymOp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCSymOp result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCSymOp",&arg1)) goto fail;
    result = (PCSymOp)newPCSymOp(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSymOp, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCSymOp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCSymOp result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCSymOp",&arg1)) goto fail;
    result = newPPCSymOp(arg1);
    
    {
        PPCSymOp * resultptr;
        resultptr = new PPCSymOp((PPCSymOp &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSymOp, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCSymOps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCSymOps result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCSymOps",&arg1)) goto fail;
    result = (PCSymOps)newPCSymOps(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCSymOps, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCSymOps(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCSymOps result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCSymOps",&arg1)) goto fail;
    result = newPPCSymOps(arg1);
    
    {
        PPCSymOps * resultptr;
        resultptr = new PPCSymOps((PPCSymOps &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSymOps, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCTitleContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCTitleContainer result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCTitleContainer",&arg1)) goto fail;
    result = newPCTitleContainer(arg1);
    
    {
        PCTitleContainer * resultptr;
        resultptr = new PCTitleContainer((PCTitleContainer &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCTitleContainer, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCTitleContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCTitleContainer result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCTitleContainer",&arg1)) goto fail;
    result = newPPCTitleContainer(arg1);
    
    {
        PPCTitleContainer * resultptr;
        resultptr = new PPCTitleContainer((PPCTitleContainer &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCTitleContainer, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCObsLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCObsLine result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCObsLine",&arg1)) goto fail;
    result = newPCObsLine(arg1);
    
    {
        PCObsLine * resultptr;
        resultptr = new PCObsLine((PCObsLine &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCObsLine, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCObsLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCObsLine result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCObsLine",&arg1)) goto fail;
    result = newPPCObsLine(arg1);
    
    {
        PPCObsLine * resultptr;
        resultptr = new PPCObsLine((PPCObsLine &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCObsLine, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCTitleLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCTitleLine result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCTitleLine",&arg1)) goto fail;
    result = newPCTitleLine(arg1);
    
    {
        PCTitleLine * resultptr;
        resultptr = new PCTitleLine((PCTitleLine &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCTitleLine, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCTitleLine(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCTitleLine result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCTitleLine",&arg1)) goto fail;
    result = newPPCTitleLine(arg1);
    
    {
        PPCTitleLine * resultptr;
        resultptr = new PPCTitleLine((PPCTitleLine &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCTitleLine, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCCaveat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCCaveat result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCCaveat",&arg1)) goto fail;
    result = newPCCaveat(arg1);
    
    {
        PCCaveat * resultptr;
        resultptr = new PCCaveat((PCCaveat &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCCaveat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCCaveat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCCaveat result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCCaveat",&arg1)) goto fail;
    result = newPPCCaveat(arg1);
    
    {
        PPCCaveat * resultptr;
        resultptr = new PPCCaveat((PPCCaveat &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCCaveat, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCCompound(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCCompound result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCCompound",&arg1)) goto fail;
    result = newPCCompound(arg1);
    
    {
        PCCompound * resultptr;
        resultptr = new PCCompound((PCCompound &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCCompound, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCCompound(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCCompound result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCCompound",&arg1)) goto fail;
    result = newPPCCompound(arg1);
    
    {
        PPCCompound * resultptr;
        resultptr = new PPCCompound((PPCCompound &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCCompound, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCSource(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCSource result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCSource",&arg1)) goto fail;
    result = newPCSource(arg1);
    
    {
        PCSource * resultptr;
        resultptr = new PCSource((PCSource &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCSource, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCSource(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCSource result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCSource",&arg1)) goto fail;
    result = newPPCSource(arg1);
    
    {
        PPCSource * resultptr;
        resultptr = new PPCSource((PPCSource &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSource, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCKeyWords(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCKeyWords result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCKeyWords",&arg1)) goto fail;
    result = newPCKeyWords(arg1);
    
    {
        PCKeyWords * resultptr;
        resultptr = new PCKeyWords((PCKeyWords &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCKeyWords, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCKeyWords(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCKeyWords result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCKeyWords",&arg1)) goto fail;
    result = newPPCKeyWords(arg1);
    
    {
        PPCKeyWords * resultptr;
        resultptr = new PPCKeyWords((PPCKeyWords &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCKeyWords, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCExpData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCExpData result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCExpData",&arg1)) goto fail;
    result = newPCExpData(arg1);
    
    {
        PCExpData * resultptr;
        resultptr = new PCExpData((PCExpData &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCExpData, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCExpData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCExpData result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCExpData",&arg1)) goto fail;
    result = newPPCExpData(arg1);
    
    {
        PPCExpData * resultptr;
        resultptr = new PPCExpData((PPCExpData &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCExpData, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCAuthor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCAuthor result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCAuthor",&arg1)) goto fail;
    result = newPCAuthor(arg1);
    
    {
        PCAuthor * resultptr;
        resultptr = new PCAuthor((PCAuthor &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCAuthor, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCAuthor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCAuthor result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCAuthor",&arg1)) goto fail;
    result = newPPCAuthor(arg1);
    
    {
        PPCAuthor * resultptr;
        resultptr = new PPCAuthor((PPCAuthor &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCAuthor, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCRevData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCRevData result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCRevData",&arg1)) goto fail;
    result = newPCRevData(arg1);
    
    {
        PCRevData * resultptr;
        resultptr = new PCRevData((PCRevData &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCRevData, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCRevData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCRevData result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCRevData",&arg1)) goto fail;
    result = newPPCRevData(arg1);
    
    {
        PPCRevData * resultptr;
        resultptr = new PPCRevData((PPCRevData &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCRevData, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCSupersede(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCSupersede result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCSupersede",&arg1)) goto fail;
    result = newPCSupersede(arg1);
    
    {
        PCSupersede * resultptr;
        resultptr = new PCSupersede((PCSupersede &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCSupersede, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCSupersede(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCSupersede result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCSupersede",&arg1)) goto fail;
    result = newPPCSupersede(arg1);
    
    {
        PPCSupersede * resultptr;
        resultptr = new PPCSupersede((PPCSupersede &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCSupersede, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCJournal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCJournal result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCJournal",&arg1)) goto fail;
    result = newPCJournal(arg1);
    
    {
        PCJournal * resultptr;
        resultptr = new PCJournal((PCJournal &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCJournal, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCJournal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCJournal result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCJournal",&arg1)) goto fail;
    result = newPPCJournal(arg1);
    
    {
        PPCJournal * resultptr;
        resultptr = new PPCJournal((PPCJournal &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCJournal, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCRemark(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCRemark result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCRemark",&arg1)) goto fail;
    result = newPCRemark(arg1);
    
    {
        PCRemark * resultptr;
        resultptr = new PCRemark((PCRemark &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCRemark, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCRemark(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCRemark result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCRemark",&arg1)) goto fail;
    result = newPPCRemark(arg1);
    
    {
        PPCRemark * resultptr;
        resultptr = new PPCRemark((PPCRemark &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCRemark, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCMMDBTitle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCMMDBTitle result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCMMDBTitle",&arg1)) goto fail;
    result = newPCMMDBTitle(arg1);
    
    {
        PCMMDBTitle * resultptr;
        resultptr = new PCMMDBTitle((PCMMDBTitle &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PCMMDBTitle, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCMMDBTitle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCMMDBTitle result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCMMDBTitle",&arg1)) goto fail;
    result = newPPCMMDBTitle(arg1);
    
    {
        PPCMMDBTitle * resultptr;
        resultptr = new PPCMMDBTitle((PPCMMDBTitle &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCMMDBTitle, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCContainerClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCContainerClass result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCContainerClass",&arg1)) goto fail;
    result = (PCContainerClass)newPCContainerClass(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCContainerClass, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCContainerClass(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCContainerClass result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCContainerClass",&arg1)) goto fail;
    result = newPPCContainerClass(arg1);
    
    {
        PPCContainerClass * resultptr;
        resultptr = new PPCContainerClass((PPCContainerClass &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCContainerClass, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCContString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCContString result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCContString",&arg1)) goto fail;
    result = (PCContString)newPCContString(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCContString, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCContString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCContString result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCContString",&arg1)) goto fail;
    result = newPPCContString(arg1);
    
    {
        PPCContString * resultptr;
        resultptr = new PPCContString((PPCContString &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCContString, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCClassContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCClassContainer result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCClassContainer",&arg1)) goto fail;
    result = (PCClassContainer)newPCClassContainer(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCClassContainer, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCClassContainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCClassContainer result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCClassContainer",&arg1)) goto fail;
    result = newPPCClassContainer(arg1);
    
    {
        PPCClassContainer * resultptr;
        resultptr = new PPCClassContainer((PPCClassContainer &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCClassContainer, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCAtomPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PCAtomPath result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPCAtomPath",&arg1)) goto fail;
    result = (PCAtomPath)newPCAtomPath(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCAtomPath, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCAtomPath(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCAtomPath result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCAtomPath",&arg1)) goto fail;
    result = newPPCAtomPath(arg1);
    
    {
        PPCAtomPath * resultptr;
        resultptr = new PPCAtomPath((PPCAtomPath &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCAtomPath, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPCHetCompound(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PCHetCompound result;
    
    if(!PyArg_ParseTuple(args,(char *)":newPCHetCompound")) goto fail;
    result = (PCHetCompound)newPCHetCompound();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_PCHetCompound, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPPCHetCompound(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 = (int) -1 ;
    PPCHetCompound result;
    
    if(!PyArg_ParseTuple(args,(char *)"|i:newPPCHetCompound",&arg1)) goto fail;
    result = newPPCHetCompound(arg1);
    
    {
        PPCHetCompound * resultptr;
        resultptr = new PPCHetCompound((PPCHetCompound &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PPCHetCompound, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newPSContact(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PSContact result;
    
    if(!PyArg_ParseTuple(args,(char *)":newPSContact")) goto fail;
    result = newPSContact();
    
    {
        PSContact * resultptr;
        resultptr = new PSContact((PSContact &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PSContact, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_newpmat44(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    mat44 *result;
    
    if(!PyArg_ParseTuple(args,(char *)":newpmat44")) goto fail;
    result = (mat44 *)newpmat44();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_mat44, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"new_intp", _wrap_new_intp, METH_VARARGS },
	 { (char *)"delete_intp", _wrap_delete_intp, METH_VARARGS },
	 { (char *)"intp_assign", _wrap_intp_assign, METH_VARARGS },
	 { (char *)"intp_value", _wrap_intp_value, METH_VARARGS },
	 { (char *)"intp_cast", _wrap_intp_cast, METH_VARARGS },
	 { (char *)"intp_frompointer", _wrap_intp_frompointer, METH_VARARGS },
	 { (char *)"intp_swigregister", intp_swigregister, METH_VARARGS },
	 { (char *)"new_doublep", _wrap_new_doublep, METH_VARARGS },
	 { (char *)"delete_doublep", _wrap_delete_doublep, METH_VARARGS },
	 { (char *)"doublep_assign", _wrap_doublep_assign, METH_VARARGS },
	 { (char *)"doublep_value", _wrap_doublep_value, METH_VARARGS },
	 { (char *)"doublep_cast", _wrap_doublep_cast, METH_VARARGS },
	 { (char *)"doublep_frompointer", _wrap_doublep_frompointer, METH_VARARGS },
	 { (char *)"doublep_swigregister", doublep_swigregister, METH_VARARGS },
	 { (char *)"new_inta", _wrap_new_inta, METH_VARARGS },
	 { (char *)"delete_inta", _wrap_delete_inta, METH_VARARGS },
	 { (char *)"inta___getitem__", _wrap_inta___getitem__, METH_VARARGS },
	 { (char *)"inta___setitem__", _wrap_inta___setitem__, METH_VARARGS },
	 { (char *)"inta_cast", _wrap_inta_cast, METH_VARARGS },
	 { (char *)"inta_frompointer", _wrap_inta_frompointer, METH_VARARGS },
	 { (char *)"inta_swigregister", inta_swigregister, METH_VARARGS },
	 { (char *)"new_doublea", _wrap_new_doublea, METH_VARARGS },
	 { (char *)"delete_doublea", _wrap_delete_doublea, METH_VARARGS },
	 { (char *)"doublea___getitem__", _wrap_doublea___getitem__, METH_VARARGS },
	 { (char *)"doublea___setitem__", _wrap_doublea___setitem__, METH_VARARGS },
	 { (char *)"doublea_cast", _wrap_doublea_cast, METH_VARARGS },
	 { (char *)"doublea_frompointer", _wrap_doublea_frompointer, METH_VARARGS },
	 { (char *)"doublea_swigregister", doublea_swigregister, METH_VARARGS },
	 { (char *)"new_SContact", _wrap_new_SContact, METH_VARARGS },
	 { (char *)"delete_SContact", _wrap_delete_SContact, METH_VARARGS },
	 { (char *)"SContact_id1_set", _wrap_SContact_id1_set, METH_VARARGS },
	 { (char *)"SContact_id1_get", _wrap_SContact_id1_get, METH_VARARGS },
	 { (char *)"SContact_id2_set", _wrap_SContact_id2_set, METH_VARARGS },
	 { (char *)"SContact_id2_get", _wrap_SContact_id2_get, METH_VARARGS },
	 { (char *)"SContact_group_set", _wrap_SContact_group_set, METH_VARARGS },
	 { (char *)"SContact_group_get", _wrap_SContact_group_get, METH_VARARGS },
	 { (char *)"SContact_dist_set", _wrap_SContact_dist_set, METH_VARARGS },
	 { (char *)"SContact_dist_get", _wrap_SContact_dist_get, METH_VARARGS },
	 { (char *)"SContact_Copy", _wrap_SContact_Copy, METH_VARARGS },
	 { (char *)"SContact_swigregister", SContact_swigregister, METH_VARARGS },
	 { (char *)"InitMatType", _wrap_InitMatType, METH_VARARGS },
	 { (char *)"mround", _wrap_mround, METH_VARARGS },
	 { (char *)"Abs", _wrap_Abs, METH_VARARGS },
	 { (char *)"ISwap", _wrap_ISwap, METH_VARARGS },
	 { (char *)"WSwap", _wrap_WSwap, METH_VARARGS },
	 { (char *)"BSwap", _wrap_BSwap, METH_VARARGS },
	 { (char *)"LSwap", _wrap_LSwap, METH_VARARGS },
	 { (char *)"RSwap", _wrap_RSwap, METH_VARARGS },
	 { (char *)"RMax", _wrap_RMax, METH_VARARGS },
	 { (char *)"LMax", _wrap_LMax, METH_VARARGS },
	 { (char *)"WMax", _wrap_WMax, METH_VARARGS },
	 { (char *)"IMax", _wrap_IMax, METH_VARARGS },
	 { (char *)"RMin", _wrap_RMin, METH_VARARGS },
	 { (char *)"LMin", _wrap_LMin, METH_VARARGS },
	 { (char *)"WMin", _wrap_WMin, METH_VARARGS },
	 { (char *)"IMin", _wrap_IMin, METH_VARARGS },
	 { (char *)"fsign", _wrap_fsign, METH_VARARGS },
	 { (char *)"GetVectorMemory", _wrap_GetVectorMemory, METH_VARARGS },
	 { (char *)"FreeVectorMemory", _wrap_FreeVectorMemory, METH_VARARGS },
	 { (char *)"GetMatrixMemory", _wrap_GetMatrixMemory, METH_VARARGS },
	 { (char *)"FreeMatrixMemory", _wrap_FreeMatrixMemory, METH_VARARGS },
	 { (char *)"GetMatrix3Memory", _wrap_GetMatrix3Memory, METH_VARARGS },
	 { (char *)"FreeMatrix3Memory", _wrap_FreeMatrix3Memory, METH_VARARGS },
	 { (char *)"MachinEps", _wrap_MachinEps, METH_VARARGS },
	 { (char *)"frac", _wrap_frac, METH_VARARGS },
	 { (char *)"mod", _wrap_mod, METH_VARARGS },
	 { (char *)"Pow", _wrap_Pow, METH_VARARGS },
	 { (char *)"Pow1", _wrap_Pow1, METH_VARARGS },
	 { (char *)"Exp", _wrap_Exp, METH_VARARGS },
	 { (char *)"Odd", _wrap_Odd, METH_VARARGS },
	 { (char *)"HexValL", _wrap_HexValL, METH_VARARGS },
	 { (char *)"OctValL", _wrap_OctValL, METH_VARARGS },
	 { (char *)"BinValL", _wrap_BinValL, METH_VARARGS },
	 { (char *)"BinValS", _wrap_BinValS, METH_VARARGS },
	 { (char *)"CreateCopy", _wrap_CreateCopy, METH_VARARGS },
	 { (char *)"CreateCopy_n", _wrap_CreateCopy_n, METH_VARARGS },
	 { (char *)"CreateConcat", _wrap_CreateConcat, METH_VARARGS },
	 { (char *)"CreateCopCat", _wrap_CreateCopCat, METH_VARARGS },
	 { (char *)"LastOccurence", _wrap_LastOccurence, METH_VARARGS },
	 { (char *)"FirstOccurence", _wrap_FirstOccurence, METH_VARARGS },
	 { (char *)"indexOf", _wrap_indexOf, METH_VARARGS },
	 { (char *)"LowerCase", _wrap_LowerCase, METH_VARARGS },
	 { (char *)"UpperCase", _wrap_UpperCase, METH_VARARGS },
	 { (char *)"GetString", _wrap_GetString, METH_VARARGS },
	 { (char *)"GetStrTer", _wrap_GetStrTer, METH_VARARGS },
	 { (char *)"strcpy_n", _wrap_strcpy_n, METH_VARARGS },
	 { (char *)"strcpy_n1", _wrap_strcpy_n1, METH_VARARGS },
	 { (char *)"strcpy_nr", _wrap_strcpy_nr, METH_VARARGS },
	 { (char *)"strcpy_ns", _wrap_strcpy_ns, METH_VARARGS },
	 { (char *)"strcpy_cs", _wrap_strcpy_cs, METH_VARARGS },
	 { (char *)"strcpy_ncs", _wrap_strcpy_ncs, METH_VARARGS },
	 { (char *)"strcpy_css", _wrap_strcpy_css, METH_VARARGS },
	 { (char *)"strcpy_ncss", _wrap_strcpy_ncss, METH_VARARGS },
	 { (char *)"strcpy_n0", _wrap_strcpy_n0, METH_VARARGS },
	 { (char *)"strlen_des", _wrap_strlen_des, METH_VARARGS },
	 { (char *)"strcpy_des", _wrap_strcpy_des, METH_VARARGS },
	 { (char *)"strcat_des", _wrap_strcat_des, METH_VARARGS },
	 { (char *)"PadSpaces", _wrap_PadSpaces, METH_VARARGS },
	 { (char *)"CutSpaces", _wrap_CutSpaces, METH_VARARGS },
	 { (char *)"DelSpaces", _wrap_DelSpaces, METH_VARARGS },
	 { (char *)"EnforceSpaces", _wrap_EnforceSpaces, METH_VARARGS },
	 { (char *)"int2UniBin", _wrap_int2UniBin, METH_VARARGS },
	 { (char *)"short2UniBin", _wrap_short2UniBin, METH_VARARGS },
	 { (char *)"long2UniBin", _wrap_long2UniBin, METH_VARARGS },
	 { (char *)"word2UniBin", _wrap_word2UniBin, METH_VARARGS },
	 { (char *)"real2UniBin", _wrap_real2UniBin, METH_VARARGS },
	 { (char *)"float2UniBin", _wrap_float2UniBin, METH_VARARGS },
	 { (char *)"UniBin2int", _wrap_UniBin2int, METH_VARARGS },
	 { (char *)"UniBin2short", _wrap_UniBin2short, METH_VARARGS },
	 { (char *)"UniBin2long", _wrap_UniBin2long, METH_VARARGS },
	 { (char *)"UniBin2word", _wrap_UniBin2word, METH_VARARGS },
	 { (char *)"UniBin2real", _wrap_UniBin2real, METH_VARARGS },
	 { (char *)"UniBin2float", _wrap_UniBin2float, METH_VARARGS },
	 { (char *)"mem_write", _wrap_mem_write, METH_VARARGS },
	 { (char *)"mem_read", _wrap_mem_read, METH_VARARGS },
	 { (char *)"GetMachineID", _wrap_GetMachineID, METH_VARARGS },
	 { (char *)"GetMachineName", _wrap_GetMachineName, METH_VARARGS },
	 { (char *)"GetTorsion", _wrap_GetTorsion, METH_VARARGS },
	 { (char *)"GetAngle", _wrap_GetAngle, METH_VARARGS },
	 { (char *)"Combinations", _wrap_Combinations, METH_VARARGS },
	 { (char *)"log1mx", _wrap_log1mx, METH_VARARGS },
	 { (char *)"expc", _wrap_expc, METH_VARARGS },
	 { (char *)"expc1mx", _wrap_expc1mx, METH_VARARGS },
	 { (char *)"Jacobi", _wrap_Jacobi, METH_VARARGS },
	 { (char *)"PbCholDecomp", _wrap_PbCholDecomp, METH_VARARGS },
	 { (char *)"LSolve", _wrap_LSolve, METH_VARARGS },
	 { (char *)"LTSolve", _wrap_LTSolve, METH_VARARGS },
	 { (char *)"ChSolve", _wrap_ChSolve, METH_VARARGS },
	 { (char *)"FastInverse", _wrap_FastInverse, METH_VARARGS },
	 { (char *)"SVD", _wrap_SVD, METH_VARARGS },
	 { (char *)"OrderSVD", _wrap_OrderSVD, METH_VARARGS },
	 { (char *)"GetFPath", _wrap_GetFPath, METH_VARARGS },
	 { (char *)"GetFName", _wrap_GetFName, METH_VARARGS },
	 { (char *)"GetFExt", _wrap_GetFExt, METH_VARARGS },
	 { (char *)"ChangeExt", _wrap_ChangeExt, METH_VARARGS },
	 { (char *)"FileError", _wrap_FileError, METH_VARARGS },
	 { (char *)"RemoveDelimiters", _wrap_RemoveDelimiters, METH_VARARGS },
	 { (char *)"PickOutNumber", _wrap_PickOutNumber, METH_VARARGS },
	 { (char *)"new_CFile", _wrap_new_CFile, METH_VARARGS },
	 { (char *)"delete_CFile", _wrap_delete_CFile, METH_VARARGS },
	 { (char *)"CFile_assign", _wrap_CFile_assign, METH_VARARGS },
	 { (char *)"CFile_FileName", _wrap_CFile_FileName, METH_VARARGS },
	 { (char *)"CFile_reset", _wrap_CFile_reset, METH_VARARGS },
	 { (char *)"CFile_erase", _wrap_CFile_erase, METH_VARARGS },
	 { (char *)"CFile_exists", _wrap_CFile_exists, METH_VARARGS },
	 { (char *)"CFile_parse", _wrap_CFile_parse, METH_VARARGS },
	 { (char *)"CFile_rename", _wrap_CFile_rename, METH_VARARGS },
	 { (char *)"CFile_rewrite", _wrap_CFile_rewrite, METH_VARARGS },
	 { (char *)"CFile_append", _wrap_CFile_append, METH_VARARGS },
	 { (char *)"CFile_isOpen", _wrap_CFile_isOpen, METH_VARARGS },
	 { (char *)"CFile_Position", _wrap_CFile_Position, METH_VARARGS },
	 { (char *)"CFile_FileLength", _wrap_CFile_FileLength, METH_VARARGS },
	 { (char *)"CFile_seek", _wrap_CFile_seek, METH_VARARGS },
	 { (char *)"CFile_FileEnd", _wrap_CFile_FileEnd, METH_VARARGS },
	 { (char *)"CFile_Success", _wrap_CFile_Success, METH_VARARGS },
	 { (char *)"CFile_SetSuccess", _wrap_CFile_SetSuccess, METH_VARARGS },
	 { (char *)"CFile_shut", _wrap_CFile_shut, METH_VARARGS },
	 { (char *)"CFile_ReadFile", _wrap_CFile_ReadFile, METH_VARARGS },
	 { (char *)"CFile_CreateRead", _wrap_CFile_CreateRead, METH_VARARGS },
	 { (char *)"CFile_WriteFile", _wrap_CFile_WriteFile, METH_VARARGS },
	 { (char *)"CFile_CreateWrite", _wrap_CFile_CreateWrite, METH_VARARGS },
	 { (char *)"CFile_WriteReal", _wrap_CFile_WriteReal, METH_VARARGS },
	 { (char *)"CFile_WriteFloat", _wrap_CFile_WriteFloat, METH_VARARGS },
	 { (char *)"CFile_WriteInt", _wrap_CFile_WriteInt, METH_VARARGS },
	 { (char *)"CFile_WriteShort", _wrap_CFile_WriteShort, METH_VARARGS },
	 { (char *)"CFile_WriteLong", _wrap_CFile_WriteLong, METH_VARARGS },
	 { (char *)"CFile_WriteBool", _wrap_CFile_WriteBool, METH_VARARGS },
	 { (char *)"CFile_WriteByte", _wrap_CFile_WriteByte, METH_VARARGS },
	 { (char *)"CFile_WriteWord", _wrap_CFile_WriteWord, METH_VARARGS },
	 { (char *)"CFile_ReadReal", _wrap_CFile_ReadReal, METH_VARARGS },
	 { (char *)"CFile_ReadFloat", _wrap_CFile_ReadFloat, METH_VARARGS },
	 { (char *)"CFile_ReadInt", _wrap_CFile_ReadInt, METH_VARARGS },
	 { (char *)"CFile_ReadShort", _wrap_CFile_ReadShort, METH_VARARGS },
	 { (char *)"CFile_ReadLong", _wrap_CFile_ReadLong, METH_VARARGS },
	 { (char *)"CFile_ReadBool", _wrap_CFile_ReadBool, METH_VARARGS },
	 { (char *)"CFile_ReadByte", _wrap_CFile_ReadByte, METH_VARARGS },
	 { (char *)"CFile_ReadWord", _wrap_CFile_ReadWord, METH_VARARGS },
	 { (char *)"CFile_AddReal", _wrap_CFile_AddReal, METH_VARARGS },
	 { (char *)"CFile_AddFloat", _wrap_CFile_AddFloat, METH_VARARGS },
	 { (char *)"CFile_AddInt", _wrap_CFile_AddInt, METH_VARARGS },
	 { (char *)"CFile_AddShort", _wrap_CFile_AddShort, METH_VARARGS },
	 { (char *)"CFile_AddLong", _wrap_CFile_AddLong, METH_VARARGS },
	 { (char *)"CFile_AddByte", _wrap_CFile_AddByte, METH_VARARGS },
	 { (char *)"CFile_AddWord", _wrap_CFile_AddWord, METH_VARARGS },
	 { (char *)"CFile_WriteVector", _wrap_CFile_WriteVector, METH_VARARGS },
	 { (char *)"CFile_ReadVector", _wrap_CFile_ReadVector, METH_VARARGS },
	 { (char *)"CFile_CreateReadVector", _wrap_CFile_CreateReadVector, METH_VARARGS },
	 { (char *)"CFile_WriteMatrix", _wrap_CFile_WriteMatrix, METH_VARARGS },
	 { (char *)"CFile_CreateReadMatrix", _wrap_CFile_CreateReadMatrix, METH_VARARGS },
	 { (char *)"CFile_Write", _wrap_CFile_Write, METH_VARARGS },
	 { (char *)"CFile_WriteLine", _wrap_CFile_WriteLine, METH_VARARGS },
	 { (char *)"CFile_LF", _wrap_CFile_LF, METH_VARARGS },
	 { (char *)"CFile_ReadLine", _wrap_CFile_ReadLine, METH_VARARGS },
	 { (char *)"CFile_ReadNonBlankLine", _wrap_CFile_ReadNonBlankLine, METH_VARARGS },
	 { (char *)"CFile_WriteDataLine", _wrap_CFile_WriteDataLine, METH_VARARGS },
	 { (char *)"CFile_WriteParameter", _wrap_CFile_WriteParameter, METH_VARARGS },
	 { (char *)"CFile_WriteParameters", _wrap_CFile_WriteParameters, METH_VARARGS },
	 { (char *)"CFile_ReadParameter", _wrap_CFile_ReadParameter, METH_VARARGS },
	 { (char *)"CFile_ReadParameters", _wrap_CFile_ReadParameters, METH_VARARGS },
	 { (char *)"CFile_WriteColumns", _wrap_CFile_WriteColumns, METH_VARARGS },
	 { (char *)"CFile_ReadColumns", _wrap_CFile_ReadColumns, METH_VARARGS },
	 { (char *)"CFile_CreateReadColumns", _wrap_CFile_CreateReadColumns, METH_VARARGS },
	 { (char *)"CFile_GetNumber", _wrap_CFile_GetNumber, METH_VARARGS },
	 { (char *)"CFile_GetHandle", _wrap_CFile_GetHandle, METH_VARARGS },
	 { (char *)"CFile_swigregister", CFile_swigregister, METH_VARARGS },
	 { (char *)"SetGZIPPath", _wrap_SetGZIPPath, METH_VARARGS },
	 { (char *)"FileExists", _wrap_FileExists, METH_VARARGS },
	 { (char *)"new_CStream", _wrap_new_CStream, METH_VARARGS },
	 { (char *)"delete_CStream", _wrap_delete_CStream, METH_VARARGS },
	 { (char *)"CStream_swigregister", CStream_swigregister, METH_VARARGS },
	 { (char *)"new_CSymOp", _wrap_new_CSymOp, METH_VARARGS },
	 { (char *)"delete_CSymOp", _wrap_delete_CSymOp, METH_VARARGS },
	 { (char *)"CSymOp_SetSymOp", _wrap_CSymOp_SetSymOp, METH_VARARGS },
	 { (char *)"CSymOp_GetSymOp", _wrap_CSymOp_GetSymOp, METH_VARARGS },
	 { (char *)"CSymOp_Transform", _wrap_CSymOp_Transform, METH_VARARGS },
	 { (char *)"CSymOp_GetTMatrix", _wrap_CSymOp_GetTMatrix, METH_VARARGS },
	 { (char *)"CSymOp_SetTMatrix", _wrap_CSymOp_SetTMatrix, METH_VARARGS },
	 { (char *)"CSymOp_CompileOpTitle", _wrap_CSymOp_CompileOpTitle, METH_VARARGS },
	 { (char *)"CSymOp_Print", _wrap_CSymOp_Print, METH_VARARGS },
	 { (char *)"CSymOp_Copy", _wrap_CSymOp_Copy, METH_VARARGS },
	 { (char *)"CSymOp_swigregister", CSymOp_swigregister, METH_VARARGS },
	 { (char *)"new_CSymOps", _wrap_new_CSymOps, METH_VARARGS },
	 { (char *)"delete_CSymOps", _wrap_delete_CSymOps, METH_VARARGS },
	 { (char *)"CSymOps_FreeMemory", _wrap_CSymOps_FreeMemory, METH_VARARGS },
	 { (char *)"CSymOps_SetGroupSymopLib", _wrap_CSymOps_SetGroupSymopLib, METH_VARARGS },
	 { (char *)"CSymOps_SetGroup", _wrap_CSymOps_SetGroup, METH_VARARGS },
	 { (char *)"CSymOps_Reset", _wrap_CSymOps_Reset, METH_VARARGS },
	 { (char *)"CSymOps_AddSymOp", _wrap_CSymOps_AddSymOp, METH_VARARGS },
	 { (char *)"CSymOps_PutGroupName", _wrap_CSymOps_PutGroupName, METH_VARARGS },
	 { (char *)"CSymOps_GetNofSymOps", _wrap_CSymOps_GetNofSymOps, METH_VARARGS },
	 { (char *)"CSymOps_GetSymOp", _wrap_CSymOps_GetSymOp, METH_VARARGS },
	 { (char *)"CSymOps_Transform", _wrap_CSymOps_Transform, METH_VARARGS },
	 { (char *)"CSymOps_GetTMatrix", _wrap_CSymOps_GetTMatrix, METH_VARARGS },
	 { (char *)"CSymOps_Print", _wrap_CSymOps_Print, METH_VARARGS },
	 { (char *)"CSymOps_Copy", _wrap_CSymOps_Copy, METH_VARARGS },
	 { (char *)"CSymOps_swigregister", CSymOps_swigregister, METH_VARARGS },
	 { (char *)"new_CMask", _wrap_new_CMask, METH_VARARGS },
	 { (char *)"delete_CMask", _wrap_delete_CMask, METH_VARARGS },
	 { (char *)"CMask_SetMaskBit", _wrap_CMask_SetMaskBit, METH_VARARGS },
	 { (char *)"CMask_NewMask", _wrap_CMask_NewMask, METH_VARARGS },
	 { (char *)"CMask_CopyMask", _wrap_CMask_CopyMask, METH_VARARGS },
	 { (char *)"CMask_SetMask", _wrap_CMask_SetMask, METH_VARARGS },
	 { (char *)"CMask_RemoveMask", _wrap_CMask_RemoveMask, METH_VARARGS },
	 { (char *)"CMask_SelMask", _wrap_CMask_SelMask, METH_VARARGS },
	 { (char *)"CMask_XadMask", _wrap_CMask_XadMask, METH_VARARGS },
	 { (char *)"CMask_ClearMask", _wrap_CMask_ClearMask, METH_VARARGS },
	 { (char *)"CMask_NegMask", _wrap_CMask_NegMask, METH_VARARGS },
	 { (char *)"CMask_CheckMask", _wrap_CMask_CheckMask, METH_VARARGS },
	 { (char *)"CMask_isMask", _wrap_CMask_isMask, METH_VARARGS },
	 { (char *)"CMask_Print", _wrap_CMask_Print, METH_VARARGS },
	 { (char *)"CMask_swigregister", CMask_swigregister, METH_VARARGS },
	 { (char *)"Date9to11", _wrap_Date9to11, METH_VARARGS },
	 { (char *)"Date11to9", _wrap_Date11to9, METH_VARARGS },
	 { (char *)"Date9toCIF", _wrap_Date9toCIF, METH_VARARGS },
	 { (char *)"Date11toCIF", _wrap_Date11toCIF, METH_VARARGS },
	 { (char *)"DateCIFto9", _wrap_DateCIFto9, METH_VARARGS },
	 { (char *)"DateCIFto11", _wrap_DateCIFto11, METH_VARARGS },
	 { (char *)"GetInteger", _wrap_GetInteger, METH_VARARGS },
	 { (char *)"GetReal", _wrap_GetReal, METH_VARARGS },
	 { (char *)"GetIntIns", _wrap_GetIntIns, METH_VARARGS },
	 { (char *)"PutInteger", _wrap_PutInteger, METH_VARARGS },
	 { (char *)"PutRealF", _wrap_PutRealF, METH_VARARGS },
	 { (char *)"PutIntIns", _wrap_PutIntIns, METH_VARARGS },
	 { (char *)"CIFGetInteger", _wrap_CIFGetInteger, METH_VARARGS },
	 { (char *)"CIFGetInteger1", _wrap_CIFGetInteger1, METH_VARARGS },
	 { (char *)"CIFGetReal", _wrap_CIFGetReal, METH_VARARGS },
	 { (char *)"CIFGetReal1", _wrap_CIFGetReal1, METH_VARARGS },
	 { (char *)"CIFGetString", _wrap_CIFGetString, METH_VARARGS },
	 { (char *)"Mat4Inverse", _wrap_Mat4Inverse, METH_VARARGS },
	 { (char *)"Mat4Init", _wrap_Mat4Init, METH_VARARGS },
	 { (char *)"Mat3Init", _wrap_Mat3Init, METH_VARARGS },
	 { (char *)"Mat4Copy", _wrap_Mat4Copy, METH_VARARGS },
	 { (char *)"Mat3Copy", _wrap_Mat3Copy, METH_VARARGS },
	 { (char *)"TransformX", _wrap_TransformX, METH_VARARGS },
	 { (char *)"TransformY", _wrap_TransformY, METH_VARARGS },
	 { (char *)"TransformZ", _wrap_TransformZ, METH_VARARGS },
	 { (char *)"GetErrorDescription", _wrap_GetErrorDescription, METH_VARARGS },
	 { (char *)"new_CContainerClass", _wrap_new_CContainerClass, METH_VARARGS },
	 { (char *)"delete_CContainerClass", _wrap_delete_CContainerClass, METH_VARARGS },
	 { (char *)"CContainerClass_ConvertPDBASCII", _wrap_CContainerClass_ConvertPDBASCII, METH_VARARGS },
	 { (char *)"CContainerClass_PDBASCIIDump", _wrap_CContainerClass_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CContainerClass_PDBASCIIDump1", _wrap_CContainerClass_PDBASCIIDump1, METH_VARARGS },
	 { (char *)"CContainerClass_MakeCIF", _wrap_CContainerClass_MakeCIF, METH_VARARGS },
	 { (char *)"CContainerClass_Append", _wrap_CContainerClass_Append, METH_VARARGS },
	 { (char *)"CContainerClass_GetCIF", _wrap_CContainerClass_GetCIF, METH_VARARGS },
	 { (char *)"CContainerClass_GetClassID", _wrap_CContainerClass_GetClassID, METH_VARARGS },
	 { (char *)"CContainerClass_Copy", _wrap_CContainerClass_Copy, METH_VARARGS },
	 { (char *)"CContainerClass_swigregister", CContainerClass_swigregister, METH_VARARGS },
	 { (char *)"CContString_Line_set", _wrap_CContString_Line_set, METH_VARARGS },
	 { (char *)"CContString_Line_get", _wrap_CContString_Line_get, METH_VARARGS },
	 { (char *)"new_CContString", _wrap_new_CContString, METH_VARARGS },
	 { (char *)"delete_CContString", _wrap_delete_CContString, METH_VARARGS },
	 { (char *)"CContString_ConvertPDBASCII", _wrap_CContString_ConvertPDBASCII, METH_VARARGS },
	 { (char *)"CContString_PDBASCIIDump", _wrap_CContString_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CContString_PDBASCIIDump1", _wrap_CContString_PDBASCIIDump1, METH_VARARGS },
	 { (char *)"CContString_MakeCIF", _wrap_CContString_MakeCIF, METH_VARARGS },
	 { (char *)"CContString_GetCIF", _wrap_CContString_GetCIF, METH_VARARGS },
	 { (char *)"CContString_Append", _wrap_CContString_Append, METH_VARARGS },
	 { (char *)"CContString_GetClassID", _wrap_CContString_GetClassID, METH_VARARGS },
	 { (char *)"CContString_Copy", _wrap_CContString_Copy, METH_VARARGS },
	 { (char *)"CContString_swigregister", CContString_swigregister, METH_VARARGS },
	 { (char *)"new_CClassContainer", _wrap_new_CClassContainer, METH_VARARGS },
	 { (char *)"delete_CClassContainer", _wrap_delete_CClassContainer, METH_VARARGS },
	 { (char *)"CClassContainer_FreeContainer", _wrap_CClassContainer_FreeContainer, METH_VARARGS },
	 { (char *)"CClassContainer_AddData", _wrap_CClassContainer_AddData, METH_VARARGS },
	 { (char *)"CClassContainer_PDBASCIIDump", _wrap_CClassContainer_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CClassContainer_MakeCIF", _wrap_CClassContainer_MakeCIF, METH_VARARGS },
	 { (char *)"CClassContainer_GetCIF", _wrap_CClassContainer_GetCIF, METH_VARARGS },
	 { (char *)"CClassContainer_MakeContainerClass", _wrap_CClassContainer_MakeContainerClass, METH_VARARGS },
	 { (char *)"CClassContainer_Copy", _wrap_CClassContainer_Copy, METH_VARARGS },
	 { (char *)"CClassContainer_Length", _wrap_CClassContainer_Length, METH_VARARGS },
	 { (char *)"CClassContainer_GetContainerClass", _wrap_CClassContainer_GetContainerClass, METH_VARARGS },
	 { (char *)"CClassContainer_swigregister", CClassContainer_swigregister, METH_VARARGS },
	 { (char *)"CAtomPath_modelNo_set", _wrap_CAtomPath_modelNo_set, METH_VARARGS },
	 { (char *)"CAtomPath_modelNo_get", _wrap_CAtomPath_modelNo_get, METH_VARARGS },
	 { (char *)"CAtomPath_chainID_set", _wrap_CAtomPath_chainID_set, METH_VARARGS },
	 { (char *)"CAtomPath_chainID_get", _wrap_CAtomPath_chainID_get, METH_VARARGS },
	 { (char *)"CAtomPath_seqNum_set", _wrap_CAtomPath_seqNum_set, METH_VARARGS },
	 { (char *)"CAtomPath_seqNum_get", _wrap_CAtomPath_seqNum_get, METH_VARARGS },
	 { (char *)"CAtomPath_insCode_set", _wrap_CAtomPath_insCode_set, METH_VARARGS },
	 { (char *)"CAtomPath_insCode_get", _wrap_CAtomPath_insCode_get, METH_VARARGS },
	 { (char *)"CAtomPath_resName_set", _wrap_CAtomPath_resName_set, METH_VARARGS },
	 { (char *)"CAtomPath_resName_get", _wrap_CAtomPath_resName_get, METH_VARARGS },
	 { (char *)"CAtomPath_atomName_set", _wrap_CAtomPath_atomName_set, METH_VARARGS },
	 { (char *)"CAtomPath_atomName_get", _wrap_CAtomPath_atomName_get, METH_VARARGS },
	 { (char *)"CAtomPath_element_set", _wrap_CAtomPath_element_set, METH_VARARGS },
	 { (char *)"CAtomPath_element_get", _wrap_CAtomPath_element_get, METH_VARARGS },
	 { (char *)"CAtomPath_altLoc_set", _wrap_CAtomPath_altLoc_set, METH_VARARGS },
	 { (char *)"CAtomPath_altLoc_get", _wrap_CAtomPath_altLoc_get, METH_VARARGS },
	 { (char *)"CAtomPath_isSet_set", _wrap_CAtomPath_isSet_set, METH_VARARGS },
	 { (char *)"CAtomPath_isSet_get", _wrap_CAtomPath_isSet_get, METH_VARARGS },
	 { (char *)"new_CAtomPath", _wrap_new_CAtomPath, METH_VARARGS },
	 { (char *)"delete_CAtomPath", _wrap_delete_CAtomPath, METH_VARARGS },
	 { (char *)"CAtomPath_SetPath", _wrap_CAtomPath_SetPath, METH_VARARGS },
	 { (char *)"CAtomPath_swigregister", CAtomPath_swigregister, METH_VARARGS },
	 { (char *)"new_CQuickSort", _wrap_new_CQuickSort, METH_VARARGS },
	 { (char *)"delete_CQuickSort", _wrap_delete_CQuickSort, METH_VARARGS },
	 { (char *)"CQuickSort_Compare", _wrap_CQuickSort_Compare, METH_VARARGS },
	 { (char *)"CQuickSort_Swap", _wrap_CQuickSort_Swap, METH_VARARGS },
	 { (char *)"CQuickSort_Sort", _wrap_CQuickSort_Sort, METH_VARARGS },
	 { (char *)"CQuickSort_swigregister", CQuickSort_swigregister, METH_VARARGS },
	 { (char *)"takeWord", _wrap_takeWord, METH_VARARGS },
	 { (char *)"ParseAtomID", _wrap_ParseAtomID, METH_VARARGS },
	 { (char *)"ParseResID", _wrap_ParseResID, METH_VARARGS },
	 { (char *)"ParseAtomPath", _wrap_ParseAtomPath, METH_VARARGS },
	 { (char *)"ParseSelectionPath", _wrap_ParseSelectionPath, METH_VARARGS },
	 { (char *)"MakeSelectionPath", _wrap_MakeSelectionPath, METH_VARARGS },
	 { (char *)"new_CBFGSMin", _wrap_new_CBFGSMin, METH_VARARGS },
	 { (char *)"delete_CBFGSMin", _wrap_delete_CBFGSMin, METH_VARARGS },
	 { (char *)"CBFGSMin_MinFunc", _wrap_CBFGSMin_MinFunc, METH_VARARGS },
	 { (char *)"CBFGSMin_Print", _wrap_CBFGSMin_Print, METH_VARARGS },
	 { (char *)"CBFGSMin_SetMinFunction", _wrap_CBFGSMin_SetMinFunction, METH_VARARGS },
	 { (char *)"CBFGSMin_SetPrintFunction", _wrap_CBFGSMin_SetPrintFunction, METH_VARARGS },
	 { (char *)"CBFGSMin_BFGS_Driver", _wrap_CBFGSMin_BFGS_Driver, METH_VARARGS },
	 { (char *)"CBFGSMin_Stop", _wrap_CBFGSMin_Stop, METH_VARARGS },
	 { (char *)"CBFGSMin_swigregister", CBFGSMin_swigregister, METH_VARARGS },
	 { (char *)"new_CUDRegister", _wrap_new_CUDRegister, METH_VARARGS },
	 { (char *)"delete_CUDRegister", _wrap_delete_CUDRegister, METH_VARARGS },
	 { (char *)"CUDRegister_RegisterUDInteger", _wrap_CUDRegister_RegisterUDInteger, METH_VARARGS },
	 { (char *)"CUDRegister_RegisterUDReal", _wrap_CUDRegister_RegisterUDReal, METH_VARARGS },
	 { (char *)"CUDRegister_RegisterUDString", _wrap_CUDRegister_RegisterUDString, METH_VARARGS },
	 { (char *)"CUDRegister_GetUDDHandle", _wrap_CUDRegister_GetUDDHandle, METH_VARARGS },
	 { (char *)"CUDRegister_swigregister", CUDRegister_swigregister, METH_VARARGS },
	 { (char *)"new_CUDData", _wrap_new_CUDData, METH_VARARGS },
	 { (char *)"delete_CUDData", _wrap_delete_CUDData, METH_VARARGS },
	 { (char *)"CUDData_swigregister", CUDData_swigregister, METH_VARARGS },
	 { (char *)"new_CProModel", _wrap_new_CProModel, METH_VARARGS },
	 { (char *)"delete_CProModel", _wrap_delete_CProModel, METH_VARARGS },
	 { (char *)"CProModel_GetEntryID", _wrap_CProModel_GetEntryID, METH_VARARGS },
	 { (char *)"CProModel_SetEntryID", _wrap_CProModel_SetEntryID, METH_VARARGS },
	 { (char *)"CProModel_AddChain", _wrap_CProModel_AddChain, METH_VARARGS },
	 { (char *)"CProModel_GetCoordHierarchy", _wrap_CProModel_GetCoordHierarchy, METH_VARARGS },
	 { (char *)"CProModel_GetNumberOfModels", _wrap_CProModel_GetNumberOfModels, METH_VARARGS },
	 { (char *)"CProModel_GetNumberOfAllAtoms", _wrap_CProModel_GetNumberOfAllAtoms, METH_VARARGS },
	 { (char *)"CProModel_GetAllAtoms", _wrap_CProModel_GetAllAtoms, METH_VARARGS },
	 { (char *)"CProModel_GetSerNum", _wrap_CProModel_GetSerNum, METH_VARARGS },
	 { (char *)"CProModel_ExpandAtomArray", _wrap_CProModel_ExpandAtomArray, METH_VARARGS },
	 { (char *)"CProModel_AddAtomArray", _wrap_CProModel_AddAtomArray, METH_VARARGS },
	 { (char *)"CProModel_swigregister", CProModel_swigregister, METH_VARARGS },
	 { (char *)"new_CChainContainer", _wrap_new_CChainContainer, METH_VARARGS },
	 { (char *)"delete_CChainContainer", _wrap_delete_CChainContainer, METH_VARARGS },
	 { (char *)"CChainContainer_MakeContainerClass", _wrap_CChainContainer_MakeContainerClass, METH_VARARGS },
	 { (char *)"CChainContainer_SetChain", _wrap_CChainContainer_SetChain, METH_VARARGS },
	 { (char *)"CChainContainer_Get1stChainID", _wrap_CChainContainer_Get1stChainID, METH_VARARGS },
	 { (char *)"CChainContainer_MoveByChainID", _wrap_CChainContainer_MoveByChainID, METH_VARARGS },
	 { (char *)"CChainContainer_swigregister", CChainContainer_swigregister, METH_VARARGS },
	 { (char *)"new_CContainerChain", _wrap_new_CContainerChain, METH_VARARGS },
	 { (char *)"CContainerChain_SetChain", _wrap_CContainerChain_SetChain, METH_VARARGS },
	 { (char *)"delete_CContainerChain", _wrap_delete_CContainerChain, METH_VARARGS },
	 { (char *)"CContainerChain_swigregister", CContainerChain_swigregister, METH_VARARGS },
	 { (char *)"CDBReference_seqBeg_set", _wrap_CDBReference_seqBeg_set, METH_VARARGS },
	 { (char *)"CDBReference_seqBeg_get", _wrap_CDBReference_seqBeg_get, METH_VARARGS },
	 { (char *)"CDBReference_insBeg_set", _wrap_CDBReference_insBeg_set, METH_VARARGS },
	 { (char *)"CDBReference_insBeg_get", _wrap_CDBReference_insBeg_get, METH_VARARGS },
	 { (char *)"CDBReference_seqEnd_set", _wrap_CDBReference_seqEnd_set, METH_VARARGS },
	 { (char *)"CDBReference_seqEnd_get", _wrap_CDBReference_seqEnd_get, METH_VARARGS },
	 { (char *)"CDBReference_insEnd_set", _wrap_CDBReference_insEnd_set, METH_VARARGS },
	 { (char *)"CDBReference_insEnd_get", _wrap_CDBReference_insEnd_get, METH_VARARGS },
	 { (char *)"CDBReference_database_set", _wrap_CDBReference_database_set, METH_VARARGS },
	 { (char *)"CDBReference_database_get", _wrap_CDBReference_database_get, METH_VARARGS },
	 { (char *)"CDBReference_dbAccession_set", _wrap_CDBReference_dbAccession_set, METH_VARARGS },
	 { (char *)"CDBReference_dbAccession_get", _wrap_CDBReference_dbAccession_get, METH_VARARGS },
	 { (char *)"CDBReference_dbIdCode_set", _wrap_CDBReference_dbIdCode_set, METH_VARARGS },
	 { (char *)"CDBReference_dbIdCode_get", _wrap_CDBReference_dbIdCode_get, METH_VARARGS },
	 { (char *)"CDBReference_dbseqBeg_set", _wrap_CDBReference_dbseqBeg_set, METH_VARARGS },
	 { (char *)"CDBReference_dbseqBeg_get", _wrap_CDBReference_dbseqBeg_get, METH_VARARGS },
	 { (char *)"CDBReference_dbinsBeg_set", _wrap_CDBReference_dbinsBeg_set, METH_VARARGS },
	 { (char *)"CDBReference_dbinsBeg_get", _wrap_CDBReference_dbinsBeg_get, METH_VARARGS },
	 { (char *)"CDBReference_dbseqEnd_set", _wrap_CDBReference_dbseqEnd_set, METH_VARARGS },
	 { (char *)"CDBReference_dbseqEnd_get", _wrap_CDBReference_dbseqEnd_get, METH_VARARGS },
	 { (char *)"CDBReference_dbinsEnd_set", _wrap_CDBReference_dbinsEnd_set, METH_VARARGS },
	 { (char *)"CDBReference_dbinsEnd_get", _wrap_CDBReference_dbinsEnd_get, METH_VARARGS },
	 { (char *)"new_CDBReference", _wrap_new_CDBReference, METH_VARARGS },
	 { (char *)"delete_CDBReference", _wrap_delete_CDBReference, METH_VARARGS },
	 { (char *)"CDBReference_PDBASCIIDump", _wrap_CDBReference_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CDBReference_MakeCIF", _wrap_CDBReference_MakeCIF, METH_VARARGS },
	 { (char *)"CDBReference_ConvertPDBASCII", _wrap_CDBReference_ConvertPDBASCII, METH_VARARGS },
	 { (char *)"CDBReference_GetCIF", _wrap_CDBReference_GetCIF, METH_VARARGS },
	 { (char *)"CDBReference_GetClassID", _wrap_CDBReference_GetClassID, METH_VARARGS },
	 { (char *)"CDBReference_Copy", _wrap_CDBReference_Copy, METH_VARARGS },
	 { (char *)"CDBReference_swigregister", CDBReference_swigregister, METH_VARARGS },
	 { (char *)"CSeqAdv_resName_set", _wrap_CSeqAdv_resName_set, METH_VARARGS },
	 { (char *)"CSeqAdv_resName_get", _wrap_CSeqAdv_resName_get, METH_VARARGS },
	 { (char *)"CSeqAdv_seqNum_set", _wrap_CSeqAdv_seqNum_set, METH_VARARGS },
	 { (char *)"CSeqAdv_seqNum_get", _wrap_CSeqAdv_seqNum_get, METH_VARARGS },
	 { (char *)"CSeqAdv_insCode_set", _wrap_CSeqAdv_insCode_set, METH_VARARGS },
	 { (char *)"CSeqAdv_insCode_get", _wrap_CSeqAdv_insCode_get, METH_VARARGS },
	 { (char *)"CSeqAdv_database_set", _wrap_CSeqAdv_database_set, METH_VARARGS },
	 { (char *)"CSeqAdv_database_get", _wrap_CSeqAdv_database_get, METH_VARARGS },
	 { (char *)"CSeqAdv_dbAccession_set", _wrap_CSeqAdv_dbAccession_set, METH_VARARGS },
	 { (char *)"CSeqAdv_dbAccession_get", _wrap_CSeqAdv_dbAccession_get, METH_VARARGS },
	 { (char *)"CSeqAdv_dbRes_set", _wrap_CSeqAdv_dbRes_set, METH_VARARGS },
	 { (char *)"CSeqAdv_dbRes_get", _wrap_CSeqAdv_dbRes_get, METH_VARARGS },
	 { (char *)"CSeqAdv_dbSeq_set", _wrap_CSeqAdv_dbSeq_set, METH_VARARGS },
	 { (char *)"CSeqAdv_dbSeq_get", _wrap_CSeqAdv_dbSeq_get, METH_VARARGS },
	 { (char *)"CSeqAdv_conflict_set", _wrap_CSeqAdv_conflict_set, METH_VARARGS },
	 { (char *)"CSeqAdv_conflict_get", _wrap_CSeqAdv_conflict_get, METH_VARARGS },
	 { (char *)"new_CSeqAdv", _wrap_new_CSeqAdv, METH_VARARGS },
	 { (char *)"delete_CSeqAdv", _wrap_delete_CSeqAdv, METH_VARARGS },
	 { (char *)"CSeqAdv_PDBASCIIDump", _wrap_CSeqAdv_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CSeqAdv_ConvertPDBASCII", _wrap_CSeqAdv_ConvertPDBASCII, METH_VARARGS },
	 { (char *)"CSeqAdv_MakeCIF", _wrap_CSeqAdv_MakeCIF, METH_VARARGS },
	 { (char *)"CSeqAdv_GetCIF", _wrap_CSeqAdv_GetCIF, METH_VARARGS },
	 { (char *)"CSeqAdv_GetClassID", _wrap_CSeqAdv_GetClassID, METH_VARARGS },
	 { (char *)"CSeqAdv_Copy", _wrap_CSeqAdv_Copy, METH_VARARGS },
	 { (char *)"CSeqAdv_swigregister", CSeqAdv_swigregister, METH_VARARGS },
	 { (char *)"CSeqRes_numRes_set", _wrap_CSeqRes_numRes_set, METH_VARARGS },
	 { (char *)"CSeqRes_numRes_get", _wrap_CSeqRes_numRes_get, METH_VARARGS },
	 { (char *)"CSeqRes_resName_set", _wrap_CSeqRes_resName_set, METH_VARARGS },
	 { (char *)"CSeqRes_resName_get", _wrap_CSeqRes_resName_get, METH_VARARGS },
	 { (char *)"new_CSeqRes", _wrap_new_CSeqRes, METH_VARARGS },
	 { (char *)"delete_CSeqRes", _wrap_delete_CSeqRes, METH_VARARGS },
	 { (char *)"CSeqRes_SetChain", _wrap_CSeqRes_SetChain, METH_VARARGS },
	 { (char *)"CSeqRes_PDBASCIIDump", _wrap_CSeqRes_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CSeqRes_ConvertPDBASCII", _wrap_CSeqRes_ConvertPDBASCII, METH_VARARGS },
	 { (char *)"CSeqRes_MakeCIF", _wrap_CSeqRes_MakeCIF, METH_VARARGS },
	 { (char *)"CSeqRes_GetCIF", _wrap_CSeqRes_GetCIF, METH_VARARGS },
	 { (char *)"CSeqRes_Copy", _wrap_CSeqRes_Copy, METH_VARARGS },
	 { (char *)"CSeqRes_swigregister", CSeqRes_swigregister, METH_VARARGS },
	 { (char *)"CModRes_resName_set", _wrap_CModRes_resName_set, METH_VARARGS },
	 { (char *)"CModRes_resName_get", _wrap_CModRes_resName_get, METH_VARARGS },
	 { (char *)"CModRes_seqNum_set", _wrap_CModRes_seqNum_set, METH_VARARGS },
	 { (char *)"CModRes_seqNum_get", _wrap_CModRes_seqNum_get, METH_VARARGS },
	 { (char *)"CModRes_insCode_set", _wrap_CModRes_insCode_set, METH_VARARGS },
	 { (char *)"CModRes_insCode_get", _wrap_CModRes_insCode_get, METH_VARARGS },
	 { (char *)"CModRes_stdRes_set", _wrap_CModRes_stdRes_set, METH_VARARGS },
	 { (char *)"CModRes_stdRes_get", _wrap_CModRes_stdRes_get, METH_VARARGS },
	 { (char *)"CModRes_comment_set", _wrap_CModRes_comment_set, METH_VARARGS },
	 { (char *)"CModRes_comment_get", _wrap_CModRes_comment_get, METH_VARARGS },
	 { (char *)"new_CModRes", _wrap_new_CModRes, METH_VARARGS },
	 { (char *)"delete_CModRes", _wrap_delete_CModRes, METH_VARARGS },
	 { (char *)"CModRes_PDBASCIIDump", _wrap_CModRes_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CModRes_MakeCIF", _wrap_CModRes_MakeCIF, METH_VARARGS },
	 { (char *)"CModRes_ConvertPDBASCII", _wrap_CModRes_ConvertPDBASCII, METH_VARARGS },
	 { (char *)"CModRes_GetCIF", _wrap_CModRes_GetCIF, METH_VARARGS },
	 { (char *)"CModRes_GetClassID", _wrap_CModRes_GetClassID, METH_VARARGS },
	 { (char *)"CModRes_Copy", _wrap_CModRes_Copy, METH_VARARGS },
	 { (char *)"CModRes_swigregister", CModRes_swigregister, METH_VARARGS },
	 { (char *)"CHetRec_hetID_set", _wrap_CHetRec_hetID_set, METH_VARARGS },
	 { (char *)"CHetRec_hetID_get", _wrap_CHetRec_hetID_get, METH_VARARGS },
	 { (char *)"CHetRec_seqNum_set", _wrap_CHetRec_seqNum_set, METH_VARARGS },
	 { (char *)"CHetRec_seqNum_get", _wrap_CHetRec_seqNum_get, METH_VARARGS },
	 { (char *)"CHetRec_insCode_set", _wrap_CHetRec_insCode_set, METH_VARARGS },
	 { (char *)"CHetRec_insCode_get", _wrap_CHetRec_insCode_get, METH_VARARGS },
	 { (char *)"CHetRec_numHetAtoms_set", _wrap_CHetRec_numHetAtoms_set, METH_VARARGS },
	 { (char *)"CHetRec_numHetAtoms_get", _wrap_CHetRec_numHetAtoms_get, METH_VARARGS },
	 { (char *)"CHetRec_comment_set", _wrap_CHetRec_comment_set, METH_VARARGS },
	 { (char *)"CHetRec_comment_get", _wrap_CHetRec_comment_get, METH_VARARGS },
	 { (char *)"new_CHetRec", _wrap_new_CHetRec, METH_VARARGS },
	 { (char *)"delete_CHetRec", _wrap_delete_CHetRec, METH_VARARGS },
	 { (char *)"CHetRec_PDBASCIIDump", _wrap_CHetRec_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CHetRec_MakeCIF", _wrap_CHetRec_MakeCIF, METH_VARARGS },
	 { (char *)"CHetRec_ConvertPDBASCII", _wrap_CHetRec_ConvertPDBASCII, METH_VARARGS },
	 { (char *)"CHetRec_GetCIF", _wrap_CHetRec_GetCIF, METH_VARARGS },
	 { (char *)"CHetRec_GetClassID", _wrap_CHetRec_GetClassID, METH_VARARGS },
	 { (char *)"CHetRec_Copy", _wrap_CHetRec_Copy, METH_VARARGS },
	 { (char *)"CHetRec_swigregister", CHetRec_swigregister, METH_VARARGS },
	 { (char *)"newCChain", _wrap_newCChain, METH_VARARGS },
	 { (char *)"SetMakersCChain", _wrap_SetMakersCChain, METH_VARARGS },
	 { (char *)"CChain_DBReference_set", _wrap_CChain_DBReference_set, METH_VARARGS },
	 { (char *)"CChain_DBReference_get", _wrap_CChain_DBReference_get, METH_VARARGS },
	 { (char *)"CChain_SeqAdv_set", _wrap_CChain_SeqAdv_set, METH_VARARGS },
	 { (char *)"CChain_SeqAdv_get", _wrap_CChain_SeqAdv_get, METH_VARARGS },
	 { (char *)"CChain_SeqRes_set", _wrap_CChain_SeqRes_set, METH_VARARGS },
	 { (char *)"CChain_SeqRes_get", _wrap_CChain_SeqRes_get, METH_VARARGS },
	 { (char *)"CChain_ModRes_set", _wrap_CChain_ModRes_set, METH_VARARGS },
	 { (char *)"CChain_ModRes_get", _wrap_CChain_ModRes_get, METH_VARARGS },
	 { (char *)"CChain_Het_set", _wrap_CChain_Het_set, METH_VARARGS },
	 { (char *)"CChain_Het_get", _wrap_CChain_Het_get, METH_VARARGS },
	 { (char *)"new_CChain", _wrap_new_CChain, METH_VARARGS },
	 { (char *)"delete_CChain", _wrap_delete_CChain, METH_VARARGS },
	 { (char *)"CChain_FreeAnnotations", _wrap_CChain_FreeAnnotations, METH_VARARGS },
	 { (char *)"CChain_SetModel", _wrap_CChain_SetModel, METH_VARARGS },
	 { (char *)"CChain_SetChain", _wrap_CChain_SetChain, METH_VARARGS },
	 { (char *)"CChain_GetCoordHierarchy", _wrap_CChain_GetCoordHierarchy, METH_VARARGS },
	 { (char *)"CChain_ConvertDBREF", _wrap_CChain_ConvertDBREF, METH_VARARGS },
	 { (char *)"CChain_ConvertSEQADV", _wrap_CChain_ConvertSEQADV, METH_VARARGS },
	 { (char *)"CChain_ConvertSEQRES", _wrap_CChain_ConvertSEQRES, METH_VARARGS },
	 { (char *)"CChain_ConvertMODRES", _wrap_CChain_ConvertMODRES, METH_VARARGS },
	 { (char *)"CChain_ConvertHET", _wrap_CChain_ConvertHET, METH_VARARGS },
	 { (char *)"CChain_PDBASCIIDump", _wrap_CChain_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CChain_PDBASCIIAtomDump", _wrap_CChain_PDBASCIIAtomDump, METH_VARARGS },
	 { (char *)"CChain_MakeAtomCIF", _wrap_CChain_MakeAtomCIF, METH_VARARGS },
	 { (char *)"CChain_GetNumberOfResidues", _wrap_CChain_GetNumberOfResidues, METH_VARARGS },
	 { (char *)"CChain_GetResidue", _wrap_CChain_GetResidue, METH_VARARGS },
	 { (char *)"CChain_GetResidueNo", _wrap_CChain_GetResidueNo, METH_VARARGS },
	 { (char *)"CChain_GetResidueTable", _wrap_CChain_GetResidueTable, METH_VARARGS },
	 { (char *)"CChain_GetResidueCreate", _wrap_CChain_GetResidueCreate, METH_VARARGS },
	 { (char *)"CChain_DeleteResidue", _wrap_CChain_DeleteResidue, METH_VARARGS },
	 { (char *)"CChain_DeleteAllResidues", _wrap_CChain_DeleteAllResidues, METH_VARARGS },
	 { (char *)"CChain_DeleteSolvent", _wrap_CChain_DeleteSolvent, METH_VARARGS },
	 { (char *)"CChain_TrimResidueTable", _wrap_CChain_TrimResidueTable, METH_VARARGS },
	 { (char *)"CChain_AddResidue", _wrap_CChain_AddResidue, METH_VARARGS },
	 { (char *)"CChain_InsResidue", _wrap_CChain_InsResidue, METH_VARARGS },
	 { (char *)"CChain_GetNumberOfAtoms", _wrap_CChain_GetNumberOfAtoms, METH_VARARGS },
	 { (char *)"CChain_GetAtom", _wrap_CChain_GetAtom, METH_VARARGS },
	 { (char *)"CChain_GetAtomTable", _wrap_CChain_GetAtomTable, METH_VARARGS },
	 { (char *)"CChain_GetAtomTable1", _wrap_CChain_GetAtomTable1, METH_VARARGS },
	 { (char *)"CChain_DeleteAtom", _wrap_CChain_DeleteAtom, METH_VARARGS },
	 { (char *)"CChain_DeleteAllAtoms", _wrap_CChain_DeleteAllAtoms, METH_VARARGS },
	 { (char *)"CChain_DeleteAltLocs", _wrap_CChain_DeleteAltLocs, METH_VARARGS },
	 { (char *)"CChain_AddAtom", _wrap_CChain_AddAtom, METH_VARARGS },
	 { (char *)"CChain_ApplyTransform", _wrap_CChain_ApplyTransform, METH_VARARGS },
	 { (char *)"CChain_GetModelNum", _wrap_CChain_GetModelNum, METH_VARARGS },
	 { (char *)"CChain_GetModel", _wrap_CChain_GetModel, METH_VARARGS },
	 { (char *)"CChain_SetChainID", _wrap_CChain_SetChainID, METH_VARARGS },
	 { (char *)"CChain_GetChainID", _wrap_CChain_GetChainID, METH_VARARGS },
	 { (char *)"CChain_GetAtomStatistics", _wrap_CChain_GetAtomStatistics, METH_VARARGS },
	 { (char *)"CChain_CalcAtomStatistics", _wrap_CChain_CalcAtomStatistics, METH_VARARGS },
	 { (char *)"CChain_CheckID", _wrap_CChain_CheckID, METH_VARARGS },
	 { (char *)"CChain_CheckIDS", _wrap_CChain_CheckIDS, METH_VARARGS },
	 { (char *)"CChain_GetEntryID", _wrap_CChain_GetEntryID, METH_VARARGS },
	 { (char *)"CChain_SetEntryID", _wrap_CChain_SetEntryID, METH_VARARGS },
	 { (char *)"CChain_GetNumberOfDBRefs", _wrap_CChain_GetNumberOfDBRefs, METH_VARARGS },
	 { (char *)"CChain_GetDBRef", _wrap_CChain_GetDBRef, METH_VARARGS },
	 { (char *)"CChain_MaskAtoms", _wrap_CChain_MaskAtoms, METH_VARARGS },
	 { (char *)"CChain_MaskResidues", _wrap_CChain_MaskResidues, METH_VARARGS },
	 { (char *)"CChain_UnmaskAtoms", _wrap_CChain_UnmaskAtoms, METH_VARARGS },
	 { (char *)"CChain_UnmaskResidues", _wrap_CChain_UnmaskResidues, METH_VARARGS },
	 { (char *)"CChain_SortResidues", _wrap_CChain_SortResidues, METH_VARARGS },
	 { (char *)"CChain_GetNofModResidues", _wrap_CChain_GetNofModResidues, METH_VARARGS },
	 { (char *)"CChain_GetModResidue", _wrap_CChain_GetModResidue, METH_VARARGS },
	 { (char *)"CChain_isSolventChain", _wrap_CChain_isSolventChain, METH_VARARGS },
	 { (char *)"CChain_isInSelection", _wrap_CChain_isInSelection, METH_VARARGS },
	 { (char *)"CChain_isAminoacidChain", _wrap_CChain_isAminoacidChain, METH_VARARGS },
	 { (char *)"CChain_PutUDData", _wrap_CChain_PutUDData, METH_VARARGS },
	 { (char *)"CChain_GetUDData", _wrap_CChain_GetUDData, METH_VARARGS },
	 { (char *)"CChain_Copy", _wrap_CChain_Copy, METH_VARARGS },
	 { (char *)"CChain_swigregister", CChain_swigregister, METH_VARARGS },
	 { (char *)"SAtomStat_nAtoms_set", _wrap_SAtomStat_nAtoms_set, METH_VARARGS },
	 { (char *)"SAtomStat_nAtoms_get", _wrap_SAtomStat_nAtoms_get, METH_VARARGS },
	 { (char *)"SAtomStat_xmin_set", _wrap_SAtomStat_xmin_set, METH_VARARGS },
	 { (char *)"SAtomStat_xmin_get", _wrap_SAtomStat_xmin_get, METH_VARARGS },
	 { (char *)"SAtomStat_ymin_set", _wrap_SAtomStat_ymin_set, METH_VARARGS },
	 { (char *)"SAtomStat_ymin_get", _wrap_SAtomStat_ymin_get, METH_VARARGS },
	 { (char *)"SAtomStat_zmin_set", _wrap_SAtomStat_zmin_set, METH_VARARGS },
	 { (char *)"SAtomStat_zmin_get", _wrap_SAtomStat_zmin_get, METH_VARARGS },
	 { (char *)"SAtomStat_xmax_set", _wrap_SAtomStat_xmax_set, METH_VARARGS },
	 { (char *)"SAtomStat_xmax_get", _wrap_SAtomStat_xmax_get, METH_VARARGS },
	 { (char *)"SAtomStat_ymax_set", _wrap_SAtomStat_ymax_set, METH_VARARGS },
	 { (char *)"SAtomStat_ymax_get", _wrap_SAtomStat_ymax_get, METH_VARARGS },
	 { (char *)"SAtomStat_zmax_set", _wrap_SAtomStat_zmax_set, METH_VARARGS },
	 { (char *)"SAtomStat_zmax_get", _wrap_SAtomStat_zmax_get, METH_VARARGS },
	 { (char *)"SAtomStat_xm_set", _wrap_SAtomStat_xm_set, METH_VARARGS },
	 { (char *)"SAtomStat_xm_get", _wrap_SAtomStat_xm_get, METH_VARARGS },
	 { (char *)"SAtomStat_ym_set", _wrap_SAtomStat_ym_set, METH_VARARGS },
	 { (char *)"SAtomStat_ym_get", _wrap_SAtomStat_ym_get, METH_VARARGS },
	 { (char *)"SAtomStat_zm_set", _wrap_SAtomStat_zm_set, METH_VARARGS },
	 { (char *)"SAtomStat_zm_get", _wrap_SAtomStat_zm_get, METH_VARARGS },
	 { (char *)"SAtomStat_xm2_set", _wrap_SAtomStat_xm2_set, METH_VARARGS },
	 { (char *)"SAtomStat_xm2_get", _wrap_SAtomStat_xm2_get, METH_VARARGS },
	 { (char *)"SAtomStat_ym2_set", _wrap_SAtomStat_ym2_set, METH_VARARGS },
	 { (char *)"SAtomStat_ym2_get", _wrap_SAtomStat_ym2_get, METH_VARARGS },
	 { (char *)"SAtomStat_zm2_set", _wrap_SAtomStat_zm2_set, METH_VARARGS },
	 { (char *)"SAtomStat_zm2_get", _wrap_SAtomStat_zm2_get, METH_VARARGS },
	 { (char *)"SAtomStat_occ_min_set", _wrap_SAtomStat_occ_min_set, METH_VARARGS },
	 { (char *)"SAtomStat_occ_min_get", _wrap_SAtomStat_occ_min_get, METH_VARARGS },
	 { (char *)"SAtomStat_occ_max_set", _wrap_SAtomStat_occ_max_set, METH_VARARGS },
	 { (char *)"SAtomStat_occ_max_get", _wrap_SAtomStat_occ_max_get, METH_VARARGS },
	 { (char *)"SAtomStat_occ_m_set", _wrap_SAtomStat_occ_m_set, METH_VARARGS },
	 { (char *)"SAtomStat_occ_m_get", _wrap_SAtomStat_occ_m_get, METH_VARARGS },
	 { (char *)"SAtomStat_occ_m2_set", _wrap_SAtomStat_occ_m2_set, METH_VARARGS },
	 { (char *)"SAtomStat_occ_m2_get", _wrap_SAtomStat_occ_m2_get, METH_VARARGS },
	 { (char *)"SAtomStat_tFmin_set", _wrap_SAtomStat_tFmin_set, METH_VARARGS },
	 { (char *)"SAtomStat_tFmin_get", _wrap_SAtomStat_tFmin_get, METH_VARARGS },
	 { (char *)"SAtomStat_tFmax_set", _wrap_SAtomStat_tFmax_set, METH_VARARGS },
	 { (char *)"SAtomStat_tFmax_get", _wrap_SAtomStat_tFmax_get, METH_VARARGS },
	 { (char *)"SAtomStat_tFm_set", _wrap_SAtomStat_tFm_set, METH_VARARGS },
	 { (char *)"SAtomStat_tFm_get", _wrap_SAtomStat_tFm_get, METH_VARARGS },
	 { (char *)"SAtomStat_tFm2_set", _wrap_SAtomStat_tFm2_set, METH_VARARGS },
	 { (char *)"SAtomStat_tFm2_get", _wrap_SAtomStat_tFm2_get, METH_VARARGS },
	 { (char *)"SAtomStat_u11_min_set", _wrap_SAtomStat_u11_min_set, METH_VARARGS },
	 { (char *)"SAtomStat_u11_min_get", _wrap_SAtomStat_u11_min_get, METH_VARARGS },
	 { (char *)"SAtomStat_u11_max_set", _wrap_SAtomStat_u11_max_set, METH_VARARGS },
	 { (char *)"SAtomStat_u11_max_get", _wrap_SAtomStat_u11_max_get, METH_VARARGS },
	 { (char *)"SAtomStat_u22_min_set", _wrap_SAtomStat_u22_min_set, METH_VARARGS },
	 { (char *)"SAtomStat_u22_min_get", _wrap_SAtomStat_u22_min_get, METH_VARARGS },
	 { (char *)"SAtomStat_u22_max_set", _wrap_SAtomStat_u22_max_set, METH_VARARGS },
	 { (char *)"SAtomStat_u22_max_get", _wrap_SAtomStat_u22_max_get, METH_VARARGS },
	 { (char *)"SAtomStat_u33_min_set", _wrap_SAtomStat_u33_min_set, METH_VARARGS },
	 { (char *)"SAtomStat_u33_min_get", _wrap_SAtomStat_u33_min_get, METH_VARARGS },
	 { (char *)"SAtomStat_u33_max_set", _wrap_SAtomStat_u33_max_set, METH_VARARGS },
	 { (char *)"SAtomStat_u33_max_get", _wrap_SAtomStat_u33_max_get, METH_VARARGS },
	 { (char *)"SAtomStat_u12_min_set", _wrap_SAtomStat_u12_min_set, METH_VARARGS },
	 { (char *)"SAtomStat_u12_min_get", _wrap_SAtomStat_u12_min_get, METH_VARARGS },
	 { (char *)"SAtomStat_u12_max_set", _wrap_SAtomStat_u12_max_set, METH_VARARGS },
	 { (char *)"SAtomStat_u12_max_get", _wrap_SAtomStat_u12_max_get, METH_VARARGS },
	 { (char *)"SAtomStat_u13_min_set", _wrap_SAtomStat_u13_min_set, METH_VARARGS },
	 { (char *)"SAtomStat_u13_min_get", _wrap_SAtomStat_u13_min_get, METH_VARARGS },
	 { (char *)"SAtomStat_u13_max_set", _wrap_SAtomStat_u13_max_set, METH_VARARGS },
	 { (char *)"SAtomStat_u13_max_get", _wrap_SAtomStat_u13_max_get, METH_VARARGS },
	 { (char *)"SAtomStat_u23_min_set", _wrap_SAtomStat_u23_min_set, METH_VARARGS },
	 { (char *)"SAtomStat_u23_min_get", _wrap_SAtomStat_u23_min_get, METH_VARARGS },
	 { (char *)"SAtomStat_u23_max_set", _wrap_SAtomStat_u23_max_set, METH_VARARGS },
	 { (char *)"SAtomStat_u23_max_get", _wrap_SAtomStat_u23_max_get, METH_VARARGS },
	 { (char *)"SAtomStat_u11_m_set", _wrap_SAtomStat_u11_m_set, METH_VARARGS },
	 { (char *)"SAtomStat_u11_m_get", _wrap_SAtomStat_u11_m_get, METH_VARARGS },
	 { (char *)"SAtomStat_u11_m2_set", _wrap_SAtomStat_u11_m2_set, METH_VARARGS },
	 { (char *)"SAtomStat_u11_m2_get", _wrap_SAtomStat_u11_m2_get, METH_VARARGS },
	 { (char *)"SAtomStat_u22_m_set", _wrap_SAtomStat_u22_m_set, METH_VARARGS },
	 { (char *)"SAtomStat_u22_m_get", _wrap_SAtomStat_u22_m_get, METH_VARARGS },
	 { (char *)"SAtomStat_u22_m2_set", _wrap_SAtomStat_u22_m2_set, METH_VARARGS },
	 { (char *)"SAtomStat_u22_m2_get", _wrap_SAtomStat_u22_m2_get, METH_VARARGS },
	 { (char *)"SAtomStat_u33_m_set", _wrap_SAtomStat_u33_m_set, METH_VARARGS },
	 { (char *)"SAtomStat_u33_m_get", _wrap_SAtomStat_u33_m_get, METH_VARARGS },
	 { (char *)"SAtomStat_u33_m2_set", _wrap_SAtomStat_u33_m2_set, METH_VARARGS },
	 { (char *)"SAtomStat_u33_m2_get", _wrap_SAtomStat_u33_m2_get, METH_VARARGS },
	 { (char *)"SAtomStat_u12_m_set", _wrap_SAtomStat_u12_m_set, METH_VARARGS },
	 { (char *)"SAtomStat_u12_m_get", _wrap_SAtomStat_u12_m_get, METH_VARARGS },
	 { (char *)"SAtomStat_u12_m2_set", _wrap_SAtomStat_u12_m2_set, METH_VARARGS },
	 { (char *)"SAtomStat_u12_m2_get", _wrap_SAtomStat_u12_m2_get, METH_VARARGS },
	 { (char *)"SAtomStat_u13_m_set", _wrap_SAtomStat_u13_m_set, METH_VARARGS },
	 { (char *)"SAtomStat_u13_m_get", _wrap_SAtomStat_u13_m_get, METH_VARARGS },
	 { (char *)"SAtomStat_u13_m2_set", _wrap_SAtomStat_u13_m2_set, METH_VARARGS },
	 { (char *)"SAtomStat_u13_m2_get", _wrap_SAtomStat_u13_m2_get, METH_VARARGS },
	 { (char *)"SAtomStat_u23_m_set", _wrap_SAtomStat_u23_m_set, METH_VARARGS },
	 { (char *)"SAtomStat_u23_m_get", _wrap_SAtomStat_u23_m_get, METH_VARARGS },
	 { (char *)"SAtomStat_u23_m2_set", _wrap_SAtomStat_u23_m2_set, METH_VARARGS },
	 { (char *)"SAtomStat_u23_m2_get", _wrap_SAtomStat_u23_m2_get, METH_VARARGS },
	 { (char *)"SAtomStat_WhatIsSet_set", _wrap_SAtomStat_WhatIsSet_set, METH_VARARGS },
	 { (char *)"SAtomStat_WhatIsSet_get", _wrap_SAtomStat_WhatIsSet_get, METH_VARARGS },
	 { (char *)"SAtomStat_Init", _wrap_SAtomStat_Init, METH_VARARGS },
	 { (char *)"SAtomStat_Finish", _wrap_SAtomStat_Finish, METH_VARARGS },
	 { (char *)"SAtomStat_GetMaxSize", _wrap_SAtomStat_GetMaxSize, METH_VARARGS },
	 { (char *)"new_SAtomStat", _wrap_new_SAtomStat, METH_VARARGS },
	 { (char *)"delete_SAtomStat", _wrap_delete_SAtomStat, METH_VARARGS },
	 { (char *)"SAtomStat_swigregister", SAtomStat_swigregister, METH_VARARGS },
	 { (char *)"SAtomBondI_index_set", _wrap_SAtomBondI_index_set, METH_VARARGS },
	 { (char *)"SAtomBondI_index_get", _wrap_SAtomBondI_index_get, METH_VARARGS },
	 { (char *)"SAtomBondI_order_set", _wrap_SAtomBondI_order_set, METH_VARARGS },
	 { (char *)"SAtomBondI_order_get", _wrap_SAtomBondI_order_get, METH_VARARGS },
	 { (char *)"new_SAtomBondI", _wrap_new_SAtomBondI, METH_VARARGS },
	 { (char *)"delete_SAtomBondI", _wrap_delete_SAtomBondI, METH_VARARGS },
	 { (char *)"SAtomBondI_swigregister", SAtomBondI_swigregister, METH_VARARGS },
	 { (char *)"SAtomBond_atom_set", _wrap_SAtomBond_atom_set, METH_VARARGS },
	 { (char *)"SAtomBond_atom_get", _wrap_SAtomBond_atom_get, METH_VARARGS },
	 { (char *)"SAtomBond_order_set", _wrap_SAtomBond_order_set, METH_VARARGS },
	 { (char *)"SAtomBond_order_get", _wrap_SAtomBond_order_get, METH_VARARGS },
	 { (char *)"new_SAtomBond", _wrap_new_SAtomBond, METH_VARARGS },
	 { (char *)"delete_SAtomBond", _wrap_delete_SAtomBond, METH_VARARGS },
	 { (char *)"SAtomBond_swigregister", SAtomBond_swigregister, METH_VARARGS },
	 { (char *)"newCAtom", _wrap_newCAtom, METH_VARARGS },
	 { (char *)"SetMakersCAtom", _wrap_SetMakersCAtom, METH_VARARGS },
	 { (char *)"CAtom_serNum_set", _wrap_CAtom_serNum_set, METH_VARARGS },
	 { (char *)"CAtom_serNum_get", _wrap_CAtom_serNum_get, METH_VARARGS },
	 { (char *)"CAtom_name_set", _wrap_CAtom_name_set, METH_VARARGS },
	 { (char *)"CAtom_name_get", _wrap_CAtom_name_get, METH_VARARGS },
	 { (char *)"CAtom_altLoc_set", _wrap_CAtom_altLoc_set, METH_VARARGS },
	 { (char *)"CAtom_altLoc_get", _wrap_CAtom_altLoc_get, METH_VARARGS },
	 { (char *)"CAtom_residue_set", _wrap_CAtom_residue_set, METH_VARARGS },
	 { (char *)"CAtom_residue_get", _wrap_CAtom_residue_get, METH_VARARGS },
	 { (char *)"CAtom_x_set", _wrap_CAtom_x_set, METH_VARARGS },
	 { (char *)"CAtom_x_get", _wrap_CAtom_x_get, METH_VARARGS },
	 { (char *)"CAtom_y_set", _wrap_CAtom_y_set, METH_VARARGS },
	 { (char *)"CAtom_y_get", _wrap_CAtom_y_get, METH_VARARGS },
	 { (char *)"CAtom_z_set", _wrap_CAtom_z_set, METH_VARARGS },
	 { (char *)"CAtom_z_get", _wrap_CAtom_z_get, METH_VARARGS },
	 { (char *)"CAtom_occupancy_set", _wrap_CAtom_occupancy_set, METH_VARARGS },
	 { (char *)"CAtom_occupancy_get", _wrap_CAtom_occupancy_get, METH_VARARGS },
	 { (char *)"CAtom_tempFactor_set", _wrap_CAtom_tempFactor_set, METH_VARARGS },
	 { (char *)"CAtom_tempFactor_get", _wrap_CAtom_tempFactor_get, METH_VARARGS },
	 { (char *)"CAtom_segID_set", _wrap_CAtom_segID_set, METH_VARARGS },
	 { (char *)"CAtom_segID_get", _wrap_CAtom_segID_get, METH_VARARGS },
	 { (char *)"CAtom_element_set", _wrap_CAtom_element_set, METH_VARARGS },
	 { (char *)"CAtom_element_get", _wrap_CAtom_element_get, METH_VARARGS },
	 { (char *)"CAtom_charge_set", _wrap_CAtom_charge_set, METH_VARARGS },
	 { (char *)"CAtom_charge_get", _wrap_CAtom_charge_get, METH_VARARGS },
	 { (char *)"CAtom_sigX_set", _wrap_CAtom_sigX_set, METH_VARARGS },
	 { (char *)"CAtom_sigX_get", _wrap_CAtom_sigX_get, METH_VARARGS },
	 { (char *)"CAtom_sigY_set", _wrap_CAtom_sigY_set, METH_VARARGS },
	 { (char *)"CAtom_sigY_get", _wrap_CAtom_sigY_get, METH_VARARGS },
	 { (char *)"CAtom_sigZ_set", _wrap_CAtom_sigZ_set, METH_VARARGS },
	 { (char *)"CAtom_sigZ_get", _wrap_CAtom_sigZ_get, METH_VARARGS },
	 { (char *)"CAtom_sigOcc_set", _wrap_CAtom_sigOcc_set, METH_VARARGS },
	 { (char *)"CAtom_sigOcc_get", _wrap_CAtom_sigOcc_get, METH_VARARGS },
	 { (char *)"CAtom_sigTemp_set", _wrap_CAtom_sigTemp_set, METH_VARARGS },
	 { (char *)"CAtom_sigTemp_get", _wrap_CAtom_sigTemp_get, METH_VARARGS },
	 { (char *)"CAtom_u11_set", _wrap_CAtom_u11_set, METH_VARARGS },
	 { (char *)"CAtom_u11_get", _wrap_CAtom_u11_get, METH_VARARGS },
	 { (char *)"CAtom_u22_set", _wrap_CAtom_u22_set, METH_VARARGS },
	 { (char *)"CAtom_u22_get", _wrap_CAtom_u22_get, METH_VARARGS },
	 { (char *)"CAtom_u33_set", _wrap_CAtom_u33_set, METH_VARARGS },
	 { (char *)"CAtom_u33_get", _wrap_CAtom_u33_get, METH_VARARGS },
	 { (char *)"CAtom_u12_set", _wrap_CAtom_u12_set, METH_VARARGS },
	 { (char *)"CAtom_u12_get", _wrap_CAtom_u12_get, METH_VARARGS },
	 { (char *)"CAtom_u13_set", _wrap_CAtom_u13_set, METH_VARARGS },
	 { (char *)"CAtom_u13_get", _wrap_CAtom_u13_get, METH_VARARGS },
	 { (char *)"CAtom_u23_set", _wrap_CAtom_u23_set, METH_VARARGS },
	 { (char *)"CAtom_u23_get", _wrap_CAtom_u23_get, METH_VARARGS },
	 { (char *)"CAtom_su11_set", _wrap_CAtom_su11_set, METH_VARARGS },
	 { (char *)"CAtom_su11_get", _wrap_CAtom_su11_get, METH_VARARGS },
	 { (char *)"CAtom_su22_set", _wrap_CAtom_su22_set, METH_VARARGS },
	 { (char *)"CAtom_su22_get", _wrap_CAtom_su22_get, METH_VARARGS },
	 { (char *)"CAtom_su33_set", _wrap_CAtom_su33_set, METH_VARARGS },
	 { (char *)"CAtom_su33_get", _wrap_CAtom_su33_get, METH_VARARGS },
	 { (char *)"CAtom_su12_set", _wrap_CAtom_su12_set, METH_VARARGS },
	 { (char *)"CAtom_su12_get", _wrap_CAtom_su12_get, METH_VARARGS },
	 { (char *)"CAtom_su13_set", _wrap_CAtom_su13_set, METH_VARARGS },
	 { (char *)"CAtom_su13_get", _wrap_CAtom_su13_get, METH_VARARGS },
	 { (char *)"CAtom_su23_set", _wrap_CAtom_su23_set, METH_VARARGS },
	 { (char *)"CAtom_su23_get", _wrap_CAtom_su23_get, METH_VARARGS },
	 { (char *)"CAtom_Het_set", _wrap_CAtom_Het_set, METH_VARARGS },
	 { (char *)"CAtom_Het_get", _wrap_CAtom_Het_get, METH_VARARGS },
	 { (char *)"CAtom_Ter_set", _wrap_CAtom_Ter_set, METH_VARARGS },
	 { (char *)"CAtom_Ter_get", _wrap_CAtom_Ter_get, METH_VARARGS },
	 { (char *)"CAtom_WhatIsSet_set", _wrap_CAtom_WhatIsSet_set, METH_VARARGS },
	 { (char *)"CAtom_WhatIsSet_get", _wrap_CAtom_WhatIsSet_get, METH_VARARGS },
	 { (char *)"new_CAtom", _wrap_new_CAtom, METH_VARARGS },
	 { (char *)"delete_CAtom", _wrap_delete_CAtom, METH_VARARGS },
	 { (char *)"CAtom_SetResidue", _wrap_CAtom_SetResidue, METH_VARARGS },
	 { (char *)"CAtom_PDBASCIIDump", _wrap_CAtom_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CAtom_MakeCIF", _wrap_CAtom_MakeCIF, METH_VARARGS },
	 { (char *)"CAtom_AddBond", _wrap_CAtom_AddBond, METH_VARARGS },
	 { (char *)"CAtom_GetNBonds", _wrap_CAtom_GetNBonds, METH_VARARGS },
	 { (char *)"CAtom_FreeBonds", _wrap_CAtom_FreeBonds, METH_VARARGS },
	 { (char *)"CAtom_GetBonds", _wrap_CAtom_GetBonds, METH_VARARGS },
	 { (char *)"CAtom_ConvertPDBATOM", _wrap_CAtom_ConvertPDBATOM, METH_VARARGS },
	 { (char *)"CAtom_ConvertPDBSIGATM", _wrap_CAtom_ConvertPDBSIGATM, METH_VARARGS },
	 { (char *)"CAtom_ConvertPDBANISOU", _wrap_CAtom_ConvertPDBANISOU, METH_VARARGS },
	 { (char *)"CAtom_ConvertPDBSIGUIJ", _wrap_CAtom_ConvertPDBSIGUIJ, METH_VARARGS },
	 { (char *)"CAtom_ConvertPDBTER", _wrap_CAtom_ConvertPDBTER, METH_VARARGS },
	 { (char *)"CAtom_ConvertPDBHETATM", _wrap_CAtom_ConvertPDBHETATM, METH_VARARGS },
	 { (char *)"CAtom_GetCIF", _wrap_CAtom_GetCIF, METH_VARARGS },
	 { (char *)"CAtom_MakePDBAtomName", _wrap_CAtom_MakePDBAtomName, METH_VARARGS },
	 { (char *)"CAtom_SetAtomName", _wrap_CAtom_SetAtomName, METH_VARARGS },
	 { (char *)"CAtom_SetElementName", _wrap_CAtom_SetElementName, METH_VARARGS },
	 { (char *)"CAtom_SetAtomIndex", _wrap_CAtom_SetAtomIndex, METH_VARARGS },
	 { (char *)"CAtom_MakeTer", _wrap_CAtom_MakeTer, METH_VARARGS },
	 { (char *)"CAtom_SetCoordinates", _wrap_CAtom_SetCoordinates, METH_VARARGS },
	 { (char *)"CAtom_GetModelNum", _wrap_CAtom_GetModelNum, METH_VARARGS },
	 { (char *)"CAtom_GetChainID", _wrap_CAtom_GetChainID, METH_VARARGS },
	 { (char *)"CAtom_GetResName", _wrap_CAtom_GetResName, METH_VARARGS },
	 { (char *)"CAtom_GetAASimilarity", _wrap_CAtom_GetAASimilarity, METH_VARARGS },
	 { (char *)"CAtom_GetAAHydropathy", _wrap_CAtom_GetAAHydropathy, METH_VARARGS },
	 { (char *)"CAtom_GetOccupancy", _wrap_CAtom_GetOccupancy, METH_VARARGS },
	 { (char *)"CAtom_GetSeqNum", _wrap_CAtom_GetSeqNum, METH_VARARGS },
	 { (char *)"CAtom_GetInsCode", _wrap_CAtom_GetInsCode, METH_VARARGS },
	 { (char *)"CAtom_GetAtomName", _wrap_CAtom_GetAtomName, METH_VARARGS },
	 { (char *)"CAtom_GetElementName", _wrap_CAtom_GetElementName, METH_VARARGS },
	 { (char *)"CAtom_isTer", _wrap_CAtom_isTer, METH_VARARGS },
	 { (char *)"CAtom_isMetal", _wrap_CAtom_isMetal, METH_VARARGS },
	 { (char *)"CAtom_isSolvent", _wrap_CAtom_isSolvent, METH_VARARGS },
	 { (char *)"CAtom_isInSelection", _wrap_CAtom_isInSelection, METH_VARARGS },
	 { (char *)"CAtom_CalcAtomStatistics", _wrap_CAtom_CalcAtomStatistics, METH_VARARGS },
	 { (char *)"CAtom_GetDist2", _wrap_CAtom_GetDist2, METH_VARARGS },
	 { (char *)"CAtom_GetResidue", _wrap_CAtom_GetResidue, METH_VARARGS },
	 { (char *)"CAtom_GetChain", _wrap_CAtom_GetChain, METH_VARARGS },
	 { (char *)"CAtom_GetModel", _wrap_CAtom_GetModel, METH_VARARGS },
	 { (char *)"CAtom_GetResidueNo", _wrap_CAtom_GetResidueNo, METH_VARARGS },
	 { (char *)"CAtom_GetCoordHierarchy", _wrap_CAtom_GetCoordHierarchy, METH_VARARGS },
	 { (char *)"CAtom_GetAtomID", _wrap_CAtom_GetAtomID, METH_VARARGS },
	 { (char *)"CAtom_GetAtomIDfmt", _wrap_CAtom_GetAtomIDfmt, METH_VARARGS },
	 { (char *)"CAtom_CheckID", _wrap_CAtom_CheckID, METH_VARARGS },
	 { (char *)"CAtom_CheckIDS", _wrap_CAtom_CheckIDS, METH_VARARGS },
	 { (char *)"CAtom_Transform", _wrap_CAtom_Transform, METH_VARARGS },
	 { (char *)"CAtom_TransformCopy", _wrap_CAtom_TransformCopy, METH_VARARGS },
	 { (char *)"CAtom_TransformSet", _wrap_CAtom_TransformSet, METH_VARARGS },
	 { (char *)"CAtom_PutUDData", _wrap_CAtom_PutUDData, METH_VARARGS },
	 { (char *)"CAtom_GetUDData", _wrap_CAtom_GetUDData, METH_VARARGS },
	 { (char *)"CAtom_GetIndex", _wrap_CAtom_GetIndex, METH_VARARGS },
	 { (char *)"CAtom_Copy", _wrap_CAtom_Copy, METH_VARARGS },
	 { (char *)"CAtom_SetShortBinary", _wrap_CAtom_SetShortBinary, METH_VARARGS },
	 { (char *)"CAtom_swigregister", CAtom_swigregister, METH_VARARGS },
	 { (char *)"newCResidue", _wrap_newCResidue, METH_VARARGS },
	 { (char *)"SetMakersCResidue", _wrap_SetMakersCResidue, METH_VARARGS },
	 { (char *)"CResidue_name_set", _wrap_CResidue_name_set, METH_VARARGS },
	 { (char *)"CResidue_name_get", _wrap_CResidue_name_get, METH_VARARGS },
	 { (char *)"CResidue_seqNum_set", _wrap_CResidue_seqNum_set, METH_VARARGS },
	 { (char *)"CResidue_seqNum_get", _wrap_CResidue_seqNum_get, METH_VARARGS },
	 { (char *)"CResidue_insCode_set", _wrap_CResidue_insCode_set, METH_VARARGS },
	 { (char *)"CResidue_insCode_get", _wrap_CResidue_insCode_get, METH_VARARGS },
	 { (char *)"CResidue_chain_set", _wrap_CResidue_chain_set, METH_VARARGS },
	 { (char *)"CResidue_chain_get", _wrap_CResidue_chain_get, METH_VARARGS },
	 { (char *)"CResidue_index_set", _wrap_CResidue_index_set, METH_VARARGS },
	 { (char *)"CResidue_index_get", _wrap_CResidue_index_get, METH_VARARGS },
	 { (char *)"CResidue_nAtoms_set", _wrap_CResidue_nAtoms_set, METH_VARARGS },
	 { (char *)"CResidue_nAtoms_get", _wrap_CResidue_nAtoms_get, METH_VARARGS },
	 { (char *)"CResidue_atom_set", _wrap_CResidue_atom_set, METH_VARARGS },
	 { (char *)"CResidue_atom_get", _wrap_CResidue_atom_get, METH_VARARGS },
	 { (char *)"CResidue_SSE_set", _wrap_CResidue_SSE_set, METH_VARARGS },
	 { (char *)"CResidue_SSE_get", _wrap_CResidue_SSE_get, METH_VARARGS },
	 { (char *)"new_CResidue", _wrap_new_CResidue, METH_VARARGS },
	 { (char *)"delete_CResidue", _wrap_delete_CResidue, METH_VARARGS },
	 { (char *)"CResidue_SetChain", _wrap_CResidue_SetChain, METH_VARARGS },
	 { (char *)"CResidue_SetResID", _wrap_CResidue_SetResID, METH_VARARGS },
	 { (char *)"CResidue_PDBASCIIAtomDump", _wrap_CResidue_PDBASCIIAtomDump, METH_VARARGS },
	 { (char *)"CResidue_MakeAtomCIF", _wrap_CResidue_MakeAtomCIF, METH_VARARGS },
	 { (char *)"CResidue_GetChain", _wrap_CResidue_GetChain, METH_VARARGS },
	 { (char *)"CResidue_GetModel", _wrap_CResidue_GetModel, METH_VARARGS },
	 { (char *)"CResidue_GetModelNum", _wrap_CResidue_GetModelNum, METH_VARARGS },
	 { (char *)"CResidue_GetChainID", _wrap_CResidue_GetChainID, METH_VARARGS },
	 { (char *)"CResidue_GetResName", _wrap_CResidue_GetResName, METH_VARARGS },
	 { (char *)"CResidue_GetAASimilarity", _wrap_CResidue_GetAASimilarity, METH_VARARGS },
	 { (char *)"CResidue_GetAAHydropathy", _wrap_CResidue_GetAAHydropathy, METH_VARARGS },
	 { (char *)"CResidue_SetResName", _wrap_CResidue_SetResName, METH_VARARGS },
	 { (char *)"CResidue_GetSeqNum", _wrap_CResidue_GetSeqNum, METH_VARARGS },
	 { (char *)"CResidue_GetInsCode", _wrap_CResidue_GetInsCode, METH_VARARGS },
	 { (char *)"CResidue_GetResidueNo", _wrap_CResidue_GetResidueNo, METH_VARARGS },
	 { (char *)"CResidue_GetCoordHierarchy", _wrap_CResidue_GetCoordHierarchy, METH_VARARGS },
	 { (char *)"CResidue_GetAtomStatistics", _wrap_CResidue_GetAtomStatistics, METH_VARARGS },
	 { (char *)"CResidue_CalcAtomStatistics", _wrap_CResidue_CalcAtomStatistics, METH_VARARGS },
	 { (char *)"CResidue_GetResidueID", _wrap_CResidue_GetResidueID, METH_VARARGS },
	 { (char *)"CResidue_GetAltLocations", _wrap_CResidue_GetAltLocations, METH_VARARGS },
	 { (char *)"CResidue_GetNofAltLocations", _wrap_CResidue_GetNofAltLocations, METH_VARARGS },
	 { (char *)"CResidue_isAminoacid", _wrap_CResidue_isAminoacid, METH_VARARGS },
	 { (char *)"CResidue_isNucleotide", _wrap_CResidue_isNucleotide, METH_VARARGS },
	 { (char *)"CResidue_isSugar", _wrap_CResidue_isSugar, METH_VARARGS },
	 { (char *)"CResidue_isSolvent", _wrap_CResidue_isSolvent, METH_VARARGS },
	 { (char *)"CResidue_isModRes", _wrap_CResidue_isModRes, METH_VARARGS },
	 { (char *)"CResidue_isInSelection", _wrap_CResidue_isInSelection, METH_VARARGS },
	 { (char *)"CResidue_CheckID", _wrap_CResidue_CheckID, METH_VARARGS },
	 { (char *)"CResidue_CheckIDS", _wrap_CResidue_CheckIDS, METH_VARARGS },
	 { (char *)"CResidue_GetNumberOfAtoms", _wrap_CResidue_GetNumberOfAtoms, METH_VARARGS },
	 { (char *)"CResidue_GetAtom", _wrap_CResidue_GetAtom, METH_VARARGS },
	 { (char *)"CResidue_GetAtomTable", _wrap_CResidue_GetAtomTable, METH_VARARGS },
	 { (char *)"CResidue_GetAtomTable1", _wrap_CResidue_GetAtomTable1, METH_VARARGS },
	 { (char *)"CResidue_DeleteAtom", _wrap_CResidue_DeleteAtom, METH_VARARGS },
	 { (char *)"CResidue_DeleteAllAtoms", _wrap_CResidue_DeleteAllAtoms, METH_VARARGS },
	 { (char *)"CResidue_DeleteAltLocs", _wrap_CResidue_DeleteAltLocs, METH_VARARGS },
	 { (char *)"CResidue_TrimAtomTable", _wrap_CResidue_TrimAtomTable, METH_VARARGS },
	 { (char *)"CResidue_AddAtom", _wrap_CResidue_AddAtom, METH_VARARGS },
	 { (char *)"CResidue_InsertAtom", _wrap_CResidue_InsertAtom, METH_VARARGS },
	 { (char *)"CResidue_ApplyTransform", _wrap_CResidue_ApplyTransform, METH_VARARGS },
	 { (char *)"CResidue_MaskAtoms", _wrap_CResidue_MaskAtoms, METH_VARARGS },
	 { (char *)"CResidue_UnmaskAtoms", _wrap_CResidue_UnmaskAtoms, METH_VARARGS },
	 { (char *)"CResidue_PutUDData", _wrap_CResidue_PutUDData, METH_VARARGS },
	 { (char *)"CResidue_GetUDData", _wrap_CResidue_GetUDData, METH_VARARGS },
	 { (char *)"CResidue_isHBond", _wrap_CResidue_isHBond, METH_VARARGS },
	 { (char *)"CResidue_Copy", _wrap_CResidue_Copy, METH_VARARGS },
	 { (char *)"CResidue_swigregister", CResidue_swigregister, METH_VARARGS },
	 { (char *)"BondAngle", _wrap_BondAngle, METH_VARARGS },
	 { (char *)"CIFName", _wrap_CIFName, METH_VARARGS },
	 { (char *)"new_CMMDBFile", _wrap_new_CMMDBFile, METH_VARARGS },
	 { (char *)"delete_CMMDBFile", _wrap_delete_CMMDBFile, METH_VARARGS },
	 { (char *)"CMMDBFile_FreeFileMemory", _wrap_CMMDBFile_FreeFileMemory, METH_VARARGS },
	 { (char *)"CMMDBFile_SetFlag", _wrap_CMMDBFile_SetFlag, METH_VARARGS },
	 { (char *)"CMMDBFile_RemoveFlag", _wrap_CMMDBFile_RemoveFlag, METH_VARARGS },
	 { (char *)"CMMDBFile_ReadPDBASCII", _wrap_CMMDBFile_ReadPDBASCII, METH_VARARGS },
	 { (char *)"CMMDBFile_ReadPDBASCII1", _wrap_CMMDBFile_ReadPDBASCII1, METH_VARARGS },
	 { (char *)"CMMDBFile_ReadCIFASCII", _wrap_CMMDBFile_ReadCIFASCII, METH_VARARGS },
	 { (char *)"CMMDBFile_ReadCIFASCII1", _wrap_CMMDBFile_ReadCIFASCII1, METH_VARARGS },
	 { (char *)"CMMDBFile_ReadFromCIF", _wrap_CMMDBFile_ReadFromCIF, METH_VARARGS },
	 { (char *)"CMMDBFile_AddPDBASCII1", _wrap_CMMDBFile_AddPDBASCII1, METH_VARARGS },
	 { (char *)"CMMDBFile_AddPDBASCII", _wrap_CMMDBFile_AddPDBASCII, METH_VARARGS },
	 { (char *)"CMMDBFile_ReadCoorFile", _wrap_CMMDBFile_ReadCoorFile, METH_VARARGS },
	 { (char *)"CMMDBFile_ReadCoorFile1", _wrap_CMMDBFile_ReadCoorFile1, METH_VARARGS },
	 { (char *)"CMMDBFile_WritePDBASCII", _wrap_CMMDBFile_WritePDBASCII, METH_VARARGS },
	 { (char *)"CMMDBFile_WritePDBASCII1", _wrap_CMMDBFile_WritePDBASCII1, METH_VARARGS },
	 { (char *)"CMMDBFile_WriteCIFASCII", _wrap_CMMDBFile_WriteCIFASCII, METH_VARARGS },
	 { (char *)"CMMDBFile_WriteCIFASCII1", _wrap_CMMDBFile_WriteCIFASCII1, METH_VARARGS },
	 { (char *)"CMMDBFile_ReadMMDBF", _wrap_CMMDBFile_ReadMMDBF, METH_VARARGS },
	 { (char *)"CMMDBFile_ReadMMDBF1", _wrap_CMMDBFile_ReadMMDBF1, METH_VARARGS },
	 { (char *)"CMMDBFile_WriteMMDBF", _wrap_CMMDBFile_WriteMMDBF, METH_VARARGS },
	 { (char *)"CMMDBFile_WriteMMDBF1", _wrap_CMMDBFile_WriteMMDBF1, METH_VARARGS },
	 { (char *)"CMMDBFile_GetInputBuffer", _wrap_CMMDBFile_GetInputBuffer, METH_VARARGS },
	 { (char *)"CMMDBFile_PutPDBString", _wrap_CMMDBFile_PutPDBString, METH_VARARGS },
	 { (char *)"CMMDBFile_PDBCleanup", _wrap_CMMDBFile_PDBCleanup, METH_VARARGS },
	 { (char *)"CMMDBFile_MakeHetAtoms", _wrap_CMMDBFile_MakeHetAtoms, METH_VARARGS },
	 { (char *)"CMMDBFile_GetAtomArray", _wrap_CMMDBFile_GetAtomArray, METH_VARARGS },
	 { (char *)"CMMDBFile_GetAtomArrayLength", _wrap_CMMDBFile_GetAtomArrayLength, METH_VARARGS },
	 { (char *)"CMMDBFile_GetAtomI", _wrap_CMMDBFile_GetAtomI, METH_VARARGS },
	 { (char *)"CMMDBFile_PutAtom", _wrap_CMMDBFile_PutAtom, METH_VARARGS },
	 { (char *)"CMMDBFile_RemoveAtom", _wrap_CMMDBFile_RemoveAtom, METH_VARARGS },
	 { (char *)"CMMDBFile_FinishStructEdit", _wrap_CMMDBFile_FinishStructEdit, METH_VARARGS },
	 { (char *)"CMMDBFile_TrimModelTable", _wrap_CMMDBFile_TrimModelTable, METH_VARARGS },
	 { (char *)"CMMDBFile_DeleteModel", _wrap_CMMDBFile_DeleteModel, METH_VARARGS },
	 { (char *)"CMMDBFile_DeleteAllModels", _wrap_CMMDBFile_DeleteAllModels, METH_VARARGS },
	 { (char *)"CMMDBFile_GetNewChainID", _wrap_CMMDBFile_GetNewChainID, METH_VARARGS },
	 { (char *)"CMMDBFile_CrystReady", _wrap_CMMDBFile_CrystReady, METH_VARARGS },
	 { (char *)"CMMDBFile_isCrystInfo", _wrap_CMMDBFile_isCrystInfo, METH_VARARGS },
	 { (char *)"CMMDBFile_isSpaceGroup", _wrap_CMMDBFile_isSpaceGroup, METH_VARARGS },
	 { (char *)"CMMDBFile_isTransfMatrix", _wrap_CMMDBFile_isTransfMatrix, METH_VARARGS },
	 { (char *)"CMMDBFile_isScaleMatrix", _wrap_CMMDBFile_isScaleMatrix, METH_VARARGS },
	 { (char *)"CMMDBFile_isNCSMatrix", _wrap_CMMDBFile_isNCSMatrix, METH_VARARGS },
	 { (char *)"CMMDBFile_GetNumberOfSymOps", _wrap_CMMDBFile_GetNumberOfSymOps, METH_VARARGS },
	 { (char *)"CMMDBFile_GetSymOp", _wrap_CMMDBFile_GetSymOp, METH_VARARGS },
	 { (char *)"CMMDBFile_RegisterUDInteger", _wrap_CMMDBFile_RegisterUDInteger, METH_VARARGS },
	 { (char *)"CMMDBFile_RegisterUDReal", _wrap_CMMDBFile_RegisterUDReal, METH_VARARGS },
	 { (char *)"CMMDBFile_RegisterUDString", _wrap_CMMDBFile_RegisterUDString, METH_VARARGS },
	 { (char *)"CMMDBFile_GetUDDHandle", _wrap_CMMDBFile_GetUDDHandle, METH_VARARGS },
	 { (char *)"CMMDBFile_SetSyminfoLib", _wrap_CMMDBFile_SetSyminfoLib, METH_VARARGS },
	 { (char *)"CMMDBFile_GetSyminfoLib", _wrap_CMMDBFile_GetSyminfoLib, METH_VARARGS },
	 { (char *)"CMMDBFile_SetSpaceGroup", _wrap_CMMDBFile_SetSpaceGroup, METH_VARARGS },
	 { (char *)"CMMDBFile_GetSpaceGroup", _wrap_CMMDBFile_GetSpaceGroup, METH_VARARGS },
	 { (char *)"CMMDBFile_GetAtomStatistics", _wrap_CMMDBFile_GetAtomStatistics, METH_VARARGS },
	 { (char *)"CMMDBFile_SetCell", _wrap_CMMDBFile_SetCell, METH_VARARGS },
	 { (char *)"CMMDBFile_GetCell", _wrap_CMMDBFile_GetCell, METH_VARARGS },
	 { (char *)"CMMDBFile_GetRCell", _wrap_CMMDBFile_GetRCell, METH_VARARGS },
	 { (char *)"CMMDBFile_GetTMatrix", _wrap_CMMDBFile_GetTMatrix, METH_VARARGS },
	 { (char *)"CMMDBFile_AddNCSMatrix", _wrap_CMMDBFile_AddNCSMatrix, METH_VARARGS },
	 { (char *)"CMMDBFile_GenerateNCSMates", _wrap_CMMDBFile_GenerateNCSMates, METH_VARARGS },
	 { (char *)"CMMDBFile_GetEntryID", _wrap_CMMDBFile_GetEntryID, METH_VARARGS },
	 { (char *)"CMMDBFile_SetEntryID", _wrap_CMMDBFile_SetEntryID, METH_VARARGS },
	 { (char *)"CMMDBFile_GetNofExpDataRecs", _wrap_CMMDBFile_GetNofExpDataRecs, METH_VARARGS },
	 { (char *)"CMMDBFile_GetExpDataRec", _wrap_CMMDBFile_GetExpDataRec, METH_VARARGS },
	 { (char *)"CMMDBFile_GetFileType", _wrap_CMMDBFile_GetFileType, METH_VARARGS },
	 { (char *)"CMMDBFile_Copy", _wrap_CMMDBFile_Copy, METH_VARARGS },
	 { (char *)"CMMDBFile_SetShortBinary", _wrap_CMMDBFile_SetShortBinary, METH_VARARGS },
	 { (char *)"CMMDBFile_PutUDData", _wrap_CMMDBFile_PutUDData, METH_VARARGS },
	 { (char *)"CMMDBFile_GetUDData", _wrap_CMMDBFile_GetUDData, METH_VARARGS },
	 { (char *)"CMMDBFile_GetStructureTitle", _wrap_CMMDBFile_GetStructureTitle, METH_VARARGS },
	 { (char *)"CMMDBFile_swigregister", CMMDBFile_swigregister, METH_VARARGS },
	 { (char *)"isMMDBBIN", _wrap_isMMDBBIN, METH_VARARGS },
	 { (char *)"isPDB", _wrap_isPDB, METH_VARARGS },
	 { (char *)"CBrick_nAtoms_set", _wrap_CBrick_nAtoms_set, METH_VARARGS },
	 { (char *)"CBrick_nAtoms_get", _wrap_CBrick_nAtoms_get, METH_VARARGS },
	 { (char *)"CBrick_Atom_set", _wrap_CBrick_Atom_set, METH_VARARGS },
	 { (char *)"CBrick_Atom_get", _wrap_CBrick_Atom_get, METH_VARARGS },
	 { (char *)"CBrick_id_set", _wrap_CBrick_id_set, METH_VARARGS },
	 { (char *)"CBrick_id_get", _wrap_CBrick_id_get, METH_VARARGS },
	 { (char *)"new_CBrick", _wrap_new_CBrick, METH_VARARGS },
	 { (char *)"delete_CBrick", _wrap_delete_CBrick, METH_VARARGS },
	 { (char *)"CBrick_Clear", _wrap_CBrick_Clear, METH_VARARGS },
	 { (char *)"CBrick_AddAtom", _wrap_CBrick_AddAtom, METH_VARARGS },
	 { (char *)"CBrick_swigregister", CBrick_swigregister, METH_VARARGS },
	 { (char *)"CMBrick_nAtoms_set", _wrap_CMBrick_nAtoms_set, METH_VARARGS },
	 { (char *)"CMBrick_nAtoms_get", _wrap_CMBrick_nAtoms_get, METH_VARARGS },
	 { (char *)"CMBrick_Atom_set", _wrap_CMBrick_Atom_set, METH_VARARGS },
	 { (char *)"CMBrick_Atom_get", _wrap_CMBrick_Atom_get, METH_VARARGS },
	 { (char *)"CMBrick_id_set", _wrap_CMBrick_id_set, METH_VARARGS },
	 { (char *)"CMBrick_id_get", _wrap_CMBrick_id_get, METH_VARARGS },
	 { (char *)"new_CMBrick", _wrap_new_CMBrick, METH_VARARGS },
	 { (char *)"delete_CMBrick", _wrap_delete_CMBrick, METH_VARARGS },
	 { (char *)"CMBrick_Clear", _wrap_CMBrick_Clear, METH_VARARGS },
	 { (char *)"CMBrick_AddAtom", _wrap_CMBrick_AddAtom, METH_VARARGS },
	 { (char *)"CMBrick_swigregister", CMBrick_swigregister, METH_VARARGS },
	 { (char *)"new_CGenSym", _wrap_new_CGenSym, METH_VARARGS },
	 { (char *)"delete_CGenSym", _wrap_delete_CGenSym, METH_VARARGS },
	 { (char *)"CGenSym_FreeMemory", _wrap_CGenSym_FreeMemory, METH_VARARGS },
	 { (char *)"CGenSym_AddSymOp", _wrap_CGenSym_AddSymOp, METH_VARARGS },
	 { (char *)"CGenSym_AddRenChain", _wrap_CGenSym_AddRenChain, METH_VARARGS },
	 { (char *)"CGenSym_Copy", _wrap_CGenSym_Copy, METH_VARARGS },
	 { (char *)"CGenSym_swigregister", CGenSym_swigregister, METH_VARARGS },
	 { (char *)"CMContact_nStruct_set", _wrap_CMContact_nStruct_set, METH_VARARGS },
	 { (char *)"CMContact_nStruct_get", _wrap_CMContact_nStruct_get, METH_VARARGS },
	 { (char *)"CMContact_contactID_set", _wrap_CMContact_contactID_set, METH_VARARGS },
	 { (char *)"CMContact_contactID_get", _wrap_CMContact_contactID_get, METH_VARARGS },
	 { (char *)"CMContact_nAtoms_set", _wrap_CMContact_nAtoms_set, METH_VARARGS },
	 { (char *)"CMContact_nAtoms_get", _wrap_CMContact_nAtoms_get, METH_VARARGS },
	 { (char *)"CMContact_Atom_set", _wrap_CMContact_Atom_set, METH_VARARGS },
	 { (char *)"CMContact_Atom_get", _wrap_CMContact_Atom_get, METH_VARARGS },
	 { (char *)"CMContact_id_set", _wrap_CMContact_id_set, METH_VARARGS },
	 { (char *)"CMContact_id_get", _wrap_CMContact_id_get, METH_VARARGS },
	 { (char *)"new_CMContact", _wrap_new_CMContact, METH_VARARGS },
	 { (char *)"delete_CMContact", _wrap_delete_CMContact, METH_VARARGS },
	 { (char *)"CMContact_AddContact", _wrap_CMContact_AddContact, METH_VARARGS },
	 { (char *)"CMContact_swigregister", CMContact_swigregister, METH_VARARGS },
	 { (char *)"DeleteMContacts", _wrap_DeleteMContacts, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_CoorIDCode_set", _wrap_CMMDBCoorManager_CoorIDCode_set, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_CoorIDCode_get", _wrap_CMMDBCoorManager_CoorIDCode_get, METH_VARARGS },
	 { (char *)"new_CMMDBCoorManager", _wrap_new_CMMDBCoorManager, METH_VARARGS },
	 { (char *)"delete_CMMDBCoorManager", _wrap_delete_CMMDBCoorManager, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_SetDefaultCoorID", _wrap_CMMDBCoorManager_SetDefaultCoorID, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_RemoveBricks", _wrap_CMMDBCoorManager_RemoveBricks, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_MakeBricks", _wrap_CMMDBCoorManager_MakeBricks, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetBrickDimension", _wrap_CMMDBCoorManager_GetBrickDimension, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetBrickCoor", _wrap_CMMDBCoorManager_GetBrickCoor, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetBrick", _wrap_CMMDBCoorManager_GetBrick, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_RemoveMBricks", _wrap_CMMDBCoorManager_RemoveMBricks, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_MakeMBricks", _wrap_CMMDBCoorManager_MakeMBricks, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetMBrickDimension", _wrap_CMMDBCoorManager_GetMBrickDimension, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetMBrickCoor", _wrap_CMMDBCoorManager_GetMBrickCoor, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetMBrick", _wrap_CMMDBCoorManager_GetMBrick, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetNumberOfModels", _wrap_CMMDBCoorManager_GetNumberOfModels, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetModel", _wrap_CMMDBCoorManager_GetModel, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetModelTable", _wrap_CMMDBCoorManager_GetModelTable, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_DeleteModel", _wrap_CMMDBCoorManager_DeleteModel, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_AddModel", _wrap_CMMDBCoorManager_AddModel, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_InsModel", _wrap_CMMDBCoorManager_InsModel, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_RotateModels", _wrap_CMMDBCoorManager_RotateModels, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_SwapModels", _wrap_CMMDBCoorManager_SwapModels, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetNumberOfChains", _wrap_CMMDBCoorManager_GetNumberOfChains, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetChain", _wrap_CMMDBCoorManager_GetChain, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetChainTable", _wrap_CMMDBCoorManager_GetChainTable, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_DeleteChain", _wrap_CMMDBCoorManager_DeleteChain, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_DeleteAllChains", _wrap_CMMDBCoorManager_DeleteAllChains, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_AddChain", _wrap_CMMDBCoorManager_AddChain, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetNumberOfResidues", _wrap_CMMDBCoorManager_GetNumberOfResidues, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetResidue", _wrap_CMMDBCoorManager_GetResidue, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetResidueNo", _wrap_CMMDBCoorManager_GetResidueNo, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetResidueTable", _wrap_CMMDBCoorManager_GetResidueTable, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_DeleteResidue", _wrap_CMMDBCoorManager_DeleteResidue, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_DeleteAllResidues", _wrap_CMMDBCoorManager_DeleteAllResidues, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_DeleteSolvent", _wrap_CMMDBCoorManager_DeleteSolvent, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_AddResidue", _wrap_CMMDBCoorManager_AddResidue, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetNumberOfAtoms", _wrap_CMMDBCoorManager_GetNumberOfAtoms, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetAtom", _wrap_CMMDBCoorManager_GetAtom, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetAtomTable", _wrap_CMMDBCoorManager_GetAtomTable, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GetAtomTable1", _wrap_CMMDBCoorManager_GetAtomTable1, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_DeleteAtom", _wrap_CMMDBCoorManager_DeleteAtom, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_DeleteAllAtoms", _wrap_CMMDBCoorManager_DeleteAllAtoms, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_DeleteAltLocs", _wrap_CMMDBCoorManager_DeleteAltLocs, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_AddAtom", _wrap_CMMDBCoorManager_AddAtom, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_GenerateSymMates", _wrap_CMMDBCoorManager_GenerateSymMates, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_ApplyTransform", _wrap_CMMDBCoorManager_ApplyTransform, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_Frac2Orth", _wrap_CMMDBCoorManager_Frac2Orth, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_Orth2Frac", _wrap_CMMDBCoorManager_Orth2Frac, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_SeekContacts", _wrap_CMMDBCoorManager_SeekContacts, METH_VARARGS },
	 { (char *)"CMMDBCoorManager_swigregister", CMMDBCoorManager_swigregister, METH_VARARGS },
	 { (char *)"GetEulerRotMatrix", _wrap_GetEulerRotMatrix, METH_VARARGS },
	 { (char *)"GetEulerTMatrix", _wrap_GetEulerTMatrix, METH_VARARGS },
	 { (char *)"EulerRotation", _wrap_EulerRotation, METH_VARARGS },
	 { (char *)"GetVecRotMatrix", _wrap_GetVecRotMatrix, METH_VARARGS },
	 { (char *)"GetRotParameters", _wrap_GetRotParameters, METH_VARARGS },
	 { (char *)"GetVecTMatrix", _wrap_GetVecTMatrix, METH_VARARGS },
	 { (char *)"VectorRotation", _wrap_VectorRotation, METH_VARARGS },
	 { (char *)"GetMassCenter", _wrap_GetMassCenter, METH_VARARGS },
	 { (char *)"SuperposeAtoms", _wrap_SuperposeAtoms, METH_VARARGS },
	 { (char *)"SortContacts", _wrap_SortContacts, METH_VARARGS },
	 { (char *)"new_CMMDBSelManager", _wrap_new_CMMDBSelManager, METH_VARARGS },
	 { (char *)"delete_CMMDBSelManager", _wrap_delete_CMMDBSelManager, METH_VARARGS },
	 { (char *)"CMMDBSelManager_NewSelection", _wrap_CMMDBSelManager_NewSelection, METH_VARARGS },
	 { (char *)"CMMDBSelManager_DeleteSelection", _wrap_CMMDBSelManager_DeleteSelection, METH_VARARGS },
	 { (char *)"CMMDBSelManager_DeleteAllSelections", _wrap_CMMDBSelManager_DeleteAllSelections, METH_VARARGS },
	 { (char *)"CMMDBSelManager_UnselectAtoms", _wrap_CMMDBSelManager_UnselectAtoms, METH_VARARGS },
	 { (char *)"CMMDBSelManager_SelectAtom", _wrap_CMMDBSelManager_SelectAtom, METH_VARARGS },
	 { (char *)"CMMDBSelManager_MakeSelIndex", _wrap_CMMDBSelManager_MakeSelIndex, METH_VARARGS },
	 { (char *)"CMMDBSelManager_SelectAtoms", _wrap_CMMDBSelManager_SelectAtoms, METH_VARARGS },
	 { (char *)"CMMDBSelManager_SelectUDD", _wrap_CMMDBSelManager_SelectUDD, METH_VARARGS },
	 { (char *)"CMMDBSelManager_SelectSphere", _wrap_CMMDBSelManager_SelectSphere, METH_VARARGS },
	 { (char *)"CMMDBSelManager_SelectCylinder", _wrap_CMMDBSelManager_SelectCylinder, METH_VARARGS },
	 { (char *)"CMMDBSelManager_SelectSlab", _wrap_CMMDBSelManager_SelectSlab, METH_VARARGS },
	 { (char *)"CMMDBSelManager_SelectNeighbours", _wrap_CMMDBSelManager_SelectNeighbours, METH_VARARGS },
	 { (char *)"CMMDBSelManager_GetSelLength", _wrap_CMMDBSelManager_GetSelLength, METH_VARARGS },
	 { (char *)"CMMDBSelManager_GetSelIndex", _wrap_CMMDBSelManager_GetSelIndex, METH_VARARGS },
	 { (char *)"CMMDBSelManager_GetAtomStatistics", _wrap_CMMDBSelManager_GetAtomStatistics, METH_VARARGS },
	 { (char *)"CMMDBSelManager_Select", _wrap_CMMDBSelManager_Select, METH_VARARGS },
	 { (char *)"CMMDBSelManager_SelectDomain", _wrap_CMMDBSelManager_SelectDomain, METH_VARARGS },
	 { (char *)"CMMDBSelManager_DeleteSelObjects", _wrap_CMMDBSelManager_DeleteSelObjects, METH_VARARGS },
	 { (char *)"CMMDBSelManager_swigregister", CMMDBSelManager_swigregister, METH_VARARGS },
	 { (char *)"new_CMMDBBondManager", _wrap_new_CMMDBBondManager, METH_VARARGS },
	 { (char *)"delete_CMMDBBondManager", _wrap_delete_CMMDBBondManager, METH_VARARGS },
	 { (char *)"CMMDBBondManager_MakeBonds", _wrap_CMMDBBondManager_MakeBonds, METH_VARARGS },
	 { (char *)"CMMDBBondManager_RemoveBonds", _wrap_CMMDBBondManager_RemoveBonds, METH_VARARGS },
	 { (char *)"CMMDBBondManager_swigregister", CMMDBBondManager_swigregister, METH_VARARGS },
	 { (char *)"new_CMMDBManager", _wrap_new_CMMDBManager, METH_VARARGS },
	 { (char *)"delete_CMMDBManager", _wrap_delete_CMMDBManager, METH_VARARGS },
	 { (char *)"CMMDBManager_Copy", _wrap_CMMDBManager_Copy, METH_VARARGS },
	 { (char *)"CMMDBManager_Delete", _wrap_CMMDBManager_Delete, METH_VARARGS },
	 { (char *)"CMMDBManager_swigregister", CMMDBManager_swigregister, METH_VARARGS },
	 { (char *)"new_CMMCIFCategory", _wrap_new_CMMCIFCategory, METH_VARARGS },
	 { (char *)"delete_CMMCIFCategory", _wrap_delete_CMMCIFCategory, METH_VARARGS },
	 { (char *)"CMMCIFCategory_GetCategoryName", _wrap_CMMCIFCategory_GetCategoryName, METH_VARARGS },
	 { (char *)"CMMCIFCategory_GetCategoryID", _wrap_CMMCIFCategory_GetCategoryID, METH_VARARGS },
	 { (char *)"CMMCIFCategory_WriteMMCIF", _wrap_CMMCIFCategory_WriteMMCIF, METH_VARARGS },
	 { (char *)"CMMCIFCategory_Optimize", _wrap_CMMCIFCategory_Optimize, METH_VARARGS },
	 { (char *)"CMMCIFCategory_Sort", _wrap_CMMCIFCategory_Sort, METH_VARARGS },
	 { (char *)"CMMCIFCategory_GetTagNo", _wrap_CMMCIFCategory_GetTagNo, METH_VARARGS },
	 { (char *)"CMMCIFCategory_AddTag", _wrap_CMMCIFCategory_AddTag, METH_VARARGS },
	 { (char *)"CMMCIFCategory_GetNofTags", _wrap_CMMCIFCategory_GetNofTags, METH_VARARGS },
	 { (char *)"CMMCIFCategory_GetTag", _wrap_CMMCIFCategory_GetTag, METH_VARARGS },
	 { (char *)"CMMCIFCategory_PrintTags", _wrap_CMMCIFCategory_PrintTags, METH_VARARGS },
	 { (char *)"CMMCIFCategory_CheckTags", _wrap_CMMCIFCategory_CheckTags, METH_VARARGS },
	 { (char *)"CMMCIFCategory_Copy", _wrap_CMMCIFCategory_Copy, METH_VARARGS },
	 { (char *)"CMMCIFCategory_swigregister", CMMCIFCategory_swigregister, METH_VARARGS },
	 { (char *)"CMMCIFStruct_field_set", _wrap_CMMCIFStruct_field_set, METH_VARARGS },
	 { (char *)"CMMCIFStruct_field_get", _wrap_CMMCIFStruct_field_get, METH_VARARGS },
	 { (char *)"new_CMMCIFStruct", _wrap_new_CMMCIFStruct, METH_VARARGS },
	 { (char *)"delete_CMMCIFStruct", _wrap_delete_CMMCIFStruct, METH_VARARGS },
	 { (char *)"CMMCIFStruct_AddField", _wrap_CMMCIFStruct_AddField, METH_VARARGS },
	 { (char *)"CMMCIFStruct_GetCategoryID", _wrap_CMMCIFStruct_GetCategoryID, METH_VARARGS },
	 { (char *)"CMMCIFStruct_Optimize", _wrap_CMMCIFStruct_Optimize, METH_VARARGS },
	 { (char *)"CMMCIFStruct_GetField", _wrap_CMMCIFStruct_GetField, METH_VARARGS },
	 { (char *)"CMMCIFStruct_GetString", _wrap_CMMCIFStruct_GetString, METH_VARARGS },
	 { (char *)"CMMCIFStruct_DeleteField", _wrap_CMMCIFStruct_DeleteField, METH_VARARGS },
	 { (char *)"CMMCIFStruct_GetReal", _wrap_CMMCIFStruct_GetReal, METH_VARARGS },
	 { (char *)"CMMCIFStruct_GetInteger", _wrap_CMMCIFStruct_GetInteger, METH_VARARGS },
	 { (char *)"CMMCIFStruct_PutString", _wrap_CMMCIFStruct_PutString, METH_VARARGS },
	 { (char *)"CMMCIFStruct_PutDate", _wrap_CMMCIFStruct_PutDate, METH_VARARGS },
	 { (char *)"CMMCIFStruct_PutNoData", _wrap_CMMCIFStruct_PutNoData, METH_VARARGS },
	 { (char *)"CMMCIFStruct_PutReal", _wrap_CMMCIFStruct_PutReal, METH_VARARGS },
	 { (char *)"CMMCIFStruct_PutInteger", _wrap_CMMCIFStruct_PutInteger, METH_VARARGS },
	 { (char *)"CMMCIFStruct_WriteMMCIFStruct", _wrap_CMMCIFStruct_WriteMMCIFStruct, METH_VARARGS },
	 { (char *)"CMMCIFStruct_WriteMMCIF", _wrap_CMMCIFStruct_WriteMMCIF, METH_VARARGS },
	 { (char *)"CMMCIFStruct_Copy", _wrap_CMMCIFStruct_Copy, METH_VARARGS },
	 { (char *)"CMMCIFStruct_swigregister", CMMCIFStruct_swigregister, METH_VARARGS },
	 { (char *)"new_CMMCIFLoop", _wrap_new_CMMCIFLoop, METH_VARARGS },
	 { (char *)"delete_CMMCIFLoop", _wrap_delete_CMMCIFLoop, METH_VARARGS },
	 { (char *)"CMMCIFLoop_AddLoopTag", _wrap_CMMCIFLoop_AddLoopTag, METH_VARARGS },
	 { (char *)"CMMCIFLoop_AddString", _wrap_CMMCIFLoop_AddString, METH_VARARGS },
	 { (char *)"CMMCIFLoop_AddNoData", _wrap_CMMCIFLoop_AddNoData, METH_VARARGS },
	 { (char *)"CMMCIFLoop_AddReal", _wrap_CMMCIFLoop_AddReal, METH_VARARGS },
	 { (char *)"CMMCIFLoop_AddInteger", _wrap_CMMCIFLoop_AddInteger, METH_VARARGS },
	 { (char *)"CMMCIFLoop_GetLoopLength", _wrap_CMMCIFLoop_GetLoopLength, METH_VARARGS },
	 { (char *)"CMMCIFLoop_GetField", _wrap_CMMCIFLoop_GetField, METH_VARARGS },
	 { (char *)"CMMCIFLoop_GetString", _wrap_CMMCIFLoop_GetString, METH_VARARGS },
	 { (char *)"CMMCIFLoop_DeleteField", _wrap_CMMCIFLoop_DeleteField, METH_VARARGS },
	 { (char *)"CMMCIFLoop_DeleteRow", _wrap_CMMCIFLoop_DeleteRow, METH_VARARGS },
	 { (char *)"CMMCIFLoop_GetReal", _wrap_CMMCIFLoop_GetReal, METH_VARARGS },
	 { (char *)"CMMCIFLoop_GetInteger", _wrap_CMMCIFLoop_GetInteger, METH_VARARGS },
	 { (char *)"CMMCIFLoop_GetSVector", _wrap_CMMCIFLoop_GetSVector, METH_VARARGS },
	 { (char *)"CMMCIFLoop_GetRVector", _wrap_CMMCIFLoop_GetRVector, METH_VARARGS },
	 { (char *)"CMMCIFLoop_GetIVector", _wrap_CMMCIFLoop_GetIVector, METH_VARARGS },
	 { (char *)"CMMCIFLoop_PutString", _wrap_CMMCIFLoop_PutString, METH_VARARGS },
	 { (char *)"CMMCIFLoop_PutNoData", _wrap_CMMCIFLoop_PutNoData, METH_VARARGS },
	 { (char *)"CMMCIFLoop_PutReal", _wrap_CMMCIFLoop_PutReal, METH_VARARGS },
	 { (char *)"CMMCIFLoop_PutInteger", _wrap_CMMCIFLoop_PutInteger, METH_VARARGS },
	 { (char *)"CMMCIFLoop_PutSVector", _wrap_CMMCIFLoop_PutSVector, METH_VARARGS },
	 { (char *)"CMMCIFLoop_PutRVector", _wrap_CMMCIFLoop_PutRVector, METH_VARARGS },
	 { (char *)"CMMCIFLoop_PutIVector", _wrap_CMMCIFLoop_PutIVector, METH_VARARGS },
	 { (char *)"CMMCIFLoop_GetCategoryID", _wrap_CMMCIFLoop_GetCategoryID, METH_VARARGS },
	 { (char *)"CMMCIFLoop_Optimize", _wrap_CMMCIFLoop_Optimize, METH_VARARGS },
	 { (char *)"CMMCIFLoop_WriteMMCIFLoop", _wrap_CMMCIFLoop_WriteMMCIFLoop, METH_VARARGS },
	 { (char *)"CMMCIFLoop_WriteMMCIF", _wrap_CMMCIFLoop_WriteMMCIF, METH_VARARGS },
	 { (char *)"CMMCIFLoop_Copy", _wrap_CMMCIFLoop_Copy, METH_VARARGS },
	 { (char *)"CMMCIFLoop_swigregister", CMMCIFLoop_swigregister, METH_VARARGS },
	 { (char *)"new_CMMCIFData", _wrap_new_CMMCIFData, METH_VARARGS },
	 { (char *)"delete_CMMCIFData", _wrap_delete_CMMCIFData, METH_VARARGS },
	 { (char *)"CMMCIFData_SetPrintWarnings", _wrap_CMMCIFData_SetPrintWarnings, METH_VARARGS },
	 { (char *)"CMMCIFData_SetStopOnWarning", _wrap_CMMCIFData_SetStopOnWarning, METH_VARARGS },
	 { (char *)"CMMCIFData_SetFlag", _wrap_CMMCIFData_SetFlag, METH_VARARGS },
	 { (char *)"CMMCIFData_RemoveFlag", _wrap_CMMCIFData_RemoveFlag, METH_VARARGS },
	 { (char *)"CMMCIFData_GetWarnings", _wrap_CMMCIFData_GetWarnings, METH_VARARGS },
	 { (char *)"CMMCIFData_SetWrongFields", _wrap_CMMCIFData_SetWrongFields, METH_VARARGS },
	 { (char *)"CMMCIFData_ReadMMCIFData", _wrap_CMMCIFData_ReadMMCIFData, METH_VARARGS },
	 { (char *)"CMMCIFData_WriteMMCIFData", _wrap_CMMCIFData_WriteMMCIFData, METH_VARARGS },
	 { (char *)"CMMCIFData_WriteMMCIF", _wrap_CMMCIFData_WriteMMCIF, METH_VARARGS },
	 { (char *)"CMMCIFData_GetNumberOfCategories", _wrap_CMMCIFData_GetNumberOfCategories, METH_VARARGS },
	 { (char *)"CMMCIFData_GetCategory", _wrap_CMMCIFData_GetCategory, METH_VARARGS },
	 { (char *)"CMMCIFData_GetStructure", _wrap_CMMCIFData_GetStructure, METH_VARARGS },
	 { (char *)"CMMCIFData_GetLoop", _wrap_CMMCIFData_GetLoop, METH_VARARGS },
	 { (char *)"CMMCIFData_FindLoop", _wrap_CMMCIFData_FindLoop, METH_VARARGS },
	 { (char *)"CMMCIFData_GetDataName", _wrap_CMMCIFData_GetDataName, METH_VARARGS },
	 { (char *)"CMMCIFData_CheckData", _wrap_CMMCIFData_CheckData, METH_VARARGS },
	 { (char *)"CMMCIFData_DeleteCategory", _wrap_CMMCIFData_DeleteCategory, METH_VARARGS },
	 { (char *)"CMMCIFData_DeleteStructure", _wrap_CMMCIFData_DeleteStructure, METH_VARARGS },
	 { (char *)"CMMCIFData_DeleteLoop", _wrap_CMMCIFData_DeleteLoop, METH_VARARGS },
	 { (char *)"CMMCIFData_Optimize", _wrap_CMMCIFData_Optimize, METH_VARARGS },
	 { (char *)"CMMCIFData_GetString", _wrap_CMMCIFData_GetString, METH_VARARGS },
	 { (char *)"CMMCIFData_DeleteField", _wrap_CMMCIFData_DeleteField, METH_VARARGS },
	 { (char *)"CMMCIFData_GetReal", _wrap_CMMCIFData_GetReal, METH_VARARGS },
	 { (char *)"CMMCIFData_GetInteger", _wrap_CMMCIFData_GetInteger, METH_VARARGS },
	 { (char *)"CMMCIFData_GetLoopLength", _wrap_CMMCIFData_GetLoopLength, METH_VARARGS },
	 { (char *)"CMMCIFData_GetLoopString", _wrap_CMMCIFData_GetLoopString, METH_VARARGS },
	 { (char *)"CMMCIFData_DeleteLoopField", _wrap_CMMCIFData_DeleteLoopField, METH_VARARGS },
	 { (char *)"CMMCIFData_GetLoopReal", _wrap_CMMCIFData_GetLoopReal, METH_VARARGS },
	 { (char *)"CMMCIFData_GetLoopInteger", _wrap_CMMCIFData_GetLoopInteger, METH_VARARGS },
	 { (char *)"CMMCIFData_GetLoopSVector", _wrap_CMMCIFData_GetLoopSVector, METH_VARARGS },
	 { (char *)"CMMCIFData_GetLoopRVector", _wrap_CMMCIFData_GetLoopRVector, METH_VARARGS },
	 { (char *)"CMMCIFData_GetLoopIVector", _wrap_CMMCIFData_GetLoopIVector, METH_VARARGS },
	 { (char *)"CMMCIFData_FreeMemory", _wrap_CMMCIFData_FreeMemory, METH_VARARGS },
	 { (char *)"CMMCIFData_PutDataName", _wrap_CMMCIFData_PutDataName, METH_VARARGS },
	 { (char *)"CMMCIFData_PutNoData", _wrap_CMMCIFData_PutNoData, METH_VARARGS },
	 { (char *)"CMMCIFData_PutString", _wrap_CMMCIFData_PutString, METH_VARARGS },
	 { (char *)"CMMCIFData_PutDate", _wrap_CMMCIFData_PutDate, METH_VARARGS },
	 { (char *)"CMMCIFData_PutReal", _wrap_CMMCIFData_PutReal, METH_VARARGS },
	 { (char *)"CMMCIFData_PutInteger", _wrap_CMMCIFData_PutInteger, METH_VARARGS },
	 { (char *)"CMMCIFData_AddLoop", _wrap_CMMCIFData_AddLoop, METH_VARARGS },
	 { (char *)"CMMCIFData_AddStructure", _wrap_CMMCIFData_AddStructure, METH_VARARGS },
	 { (char *)"CMMCIFData_PutLoopNoData", _wrap_CMMCIFData_PutLoopNoData, METH_VARARGS },
	 { (char *)"CMMCIFData_PutLoopString", _wrap_CMMCIFData_PutLoopString, METH_VARARGS },
	 { (char *)"CMMCIFData_PutLoopReal", _wrap_CMMCIFData_PutLoopReal, METH_VARARGS },
	 { (char *)"CMMCIFData_PutLoopInteger", _wrap_CMMCIFData_PutLoopInteger, METH_VARARGS },
	 { (char *)"CMMCIFData_PutLoopSVector", _wrap_CMMCIFData_PutLoopSVector, METH_VARARGS },
	 { (char *)"CMMCIFData_PutLoopRVector", _wrap_CMMCIFData_PutLoopRVector, METH_VARARGS },
	 { (char *)"CMMCIFData_PutLoopIVector", _wrap_CMMCIFData_PutLoopIVector, METH_VARARGS },
	 { (char *)"CMMCIFData_RenameCategory", _wrap_CMMCIFData_RenameCategory, METH_VARARGS },
	 { (char *)"CMMCIFData_Copy", _wrap_CMMCIFData_Copy, METH_VARARGS },
	 { (char *)"CMMCIFData_CopyCategory", _wrap_CMMCIFData_CopyCategory, METH_VARARGS },
	 { (char *)"CMMCIFData_PrintCategories", _wrap_CMMCIFData_PrintCategories, METH_VARARGS },
	 { (char *)"CMMCIFData_swigregister", CMMCIFData_swigregister, METH_VARARGS },
	 { (char *)"CMMCIFFile_nData_set", _wrap_CMMCIFFile_nData_set, METH_VARARGS },
	 { (char *)"CMMCIFFile_nData_get", _wrap_CMMCIFFile_nData_get, METH_VARARGS },
	 { (char *)"CMMCIFFile_index_set", _wrap_CMMCIFFile_index_set, METH_VARARGS },
	 { (char *)"CMMCIFFile_index_get", _wrap_CMMCIFFile_index_get, METH_VARARGS },
	 { (char *)"CMMCIFFile_data_set", _wrap_CMMCIFFile_data_set, METH_VARARGS },
	 { (char *)"CMMCIFFile_data_get", _wrap_CMMCIFFile_data_get, METH_VARARGS },
	 { (char *)"new_CMMCIFFile", _wrap_new_CMMCIFFile, METH_VARARGS },
	 { (char *)"delete_CMMCIFFile", _wrap_delete_CMMCIFFile, METH_VARARGS },
	 { (char *)"CMMCIFFile_SetPrintWarnings", _wrap_CMMCIFFile_SetPrintWarnings, METH_VARARGS },
	 { (char *)"CMMCIFFile_SetStopOnWarning", _wrap_CMMCIFFile_SetStopOnWarning, METH_VARARGS },
	 { (char *)"CMMCIFFile_ReadMMCIFFile", _wrap_CMMCIFFile_ReadMMCIFFile, METH_VARARGS },
	 { (char *)"CMMCIFFile_WriteMMCIFFile", _wrap_CMMCIFFile_WriteMMCIFFile, METH_VARARGS },
	 { (char *)"CMMCIFFile_GetNofData", _wrap_CMMCIFFile_GetNofData, METH_VARARGS },
	 { (char *)"CMMCIFFile_GetCIFData", _wrap_CMMCIFFile_GetCIFData, METH_VARARGS },
	 { (char *)"CMMCIFFile_AddMMCIFData", _wrap_CMMCIFFile_AddMMCIFData, METH_VARARGS },
	 { (char *)"CMMCIFFile_GetCIFDataNo", _wrap_CMMCIFFile_GetCIFDataNo, METH_VARARGS },
	 { (char *)"CMMCIFFile_WriteMMCIF", _wrap_CMMCIFFile_WriteMMCIF, METH_VARARGS },
	 { (char *)"CMMCIFFile_Copy", _wrap_CMMCIFFile_Copy, METH_VARARGS },
	 { (char *)"CMMCIFFile_swigregister", CMMCIFFile_swigregister, METH_VARARGS },
	 { (char *)"GetMMCIFInputBuffer", _wrap_GetMMCIFInputBuffer, METH_VARARGS },
	 { (char *)"isCIF", _wrap_isCIF, METH_VARARGS },
	 { (char *)"GetCIFMessage", _wrap_GetCIFMessage, METH_VARARGS },
	 { (char *)"CHetCompound_hetID_set", _wrap_CHetCompound_hetID_set, METH_VARARGS },
	 { (char *)"CHetCompound_hetID_get", _wrap_CHetCompound_hetID_get, METH_VARARGS },
	 { (char *)"CHetCompound_comment_set", _wrap_CHetCompound_comment_set, METH_VARARGS },
	 { (char *)"CHetCompound_comment_get", _wrap_CHetCompound_comment_get, METH_VARARGS },
	 { (char *)"CHetCompound_nSynonyms_set", _wrap_CHetCompound_nSynonyms_set, METH_VARARGS },
	 { (char *)"CHetCompound_nSynonyms_get", _wrap_CHetCompound_nSynonyms_get, METH_VARARGS },
	 { (char *)"CHetCompound_hetSynonym_set", _wrap_CHetCompound_hetSynonym_set, METH_VARARGS },
	 { (char *)"CHetCompound_hetSynonym_get", _wrap_CHetCompound_hetSynonym_get, METH_VARARGS },
	 { (char *)"CHetCompound_compNum_set", _wrap_CHetCompound_compNum_set, METH_VARARGS },
	 { (char *)"CHetCompound_compNum_get", _wrap_CHetCompound_compNum_get, METH_VARARGS },
	 { (char *)"CHetCompound_wc_set", _wrap_CHetCompound_wc_set, METH_VARARGS },
	 { (char *)"CHetCompound_wc_get", _wrap_CHetCompound_wc_get, METH_VARARGS },
	 { (char *)"CHetCompound_Formula_set", _wrap_CHetCompound_Formula_set, METH_VARARGS },
	 { (char *)"CHetCompound_Formula_get", _wrap_CHetCompound_Formula_get, METH_VARARGS },
	 { (char *)"new_CHetCompound", _wrap_new_CHetCompound, METH_VARARGS },
	 { (char *)"delete_CHetCompound", _wrap_delete_CHetCompound, METH_VARARGS },
	 { (char *)"CHetCompound_AddKeyWord", _wrap_CHetCompound_AddKeyWord, METH_VARARGS },
	 { (char *)"CHetCompound_HETNAM_PDBDump", _wrap_CHetCompound_HETNAM_PDBDump, METH_VARARGS },
	 { (char *)"CHetCompound_HETSYN_PDBDump", _wrap_CHetCompound_HETSYN_PDBDump, METH_VARARGS },
	 { (char *)"CHetCompound_FORMUL_PDBDump", _wrap_CHetCompound_FORMUL_PDBDump, METH_VARARGS },
	 { (char *)"CHetCompound_FormComString", _wrap_CHetCompound_FormComString, METH_VARARGS },
	 { (char *)"CHetCompound_FormSynString", _wrap_CHetCompound_FormSynString, METH_VARARGS },
	 { (char *)"CHetCompound_FormForString", _wrap_CHetCompound_FormForString, METH_VARARGS },
	 { (char *)"CHetCompound_Copy", _wrap_CHetCompound_Copy, METH_VARARGS },
	 { (char *)"CHetCompound_swigregister", CHetCompound_swigregister, METH_VARARGS },
	 { (char *)"new_CSSContainer", _wrap_new_CSSContainer, METH_VARARGS },
	 { (char *)"delete_CSSContainer", _wrap_delete_CSSContainer, METH_VARARGS },
	 { (char *)"CSSContainer_MakeContainerClass", _wrap_CSSContainer_MakeContainerClass, METH_VARARGS },
	 { (char *)"CSSContainer_swigregister", CSSContainer_swigregister, METH_VARARGS },
	 { (char *)"CHelix_serNum_set", _wrap_CHelix_serNum_set, METH_VARARGS },
	 { (char *)"CHelix_serNum_get", _wrap_CHelix_serNum_get, METH_VARARGS },
	 { (char *)"CHelix_helixID_set", _wrap_CHelix_helixID_set, METH_VARARGS },
	 { (char *)"CHelix_helixID_get", _wrap_CHelix_helixID_get, METH_VARARGS },
	 { (char *)"CHelix_initResName_set", _wrap_CHelix_initResName_set, METH_VARARGS },
	 { (char *)"CHelix_initResName_get", _wrap_CHelix_initResName_get, METH_VARARGS },
	 { (char *)"CHelix_initChainID_set", _wrap_CHelix_initChainID_set, METH_VARARGS },
	 { (char *)"CHelix_initChainID_get", _wrap_CHelix_initChainID_get, METH_VARARGS },
	 { (char *)"CHelix_initSeqNum_set", _wrap_CHelix_initSeqNum_set, METH_VARARGS },
	 { (char *)"CHelix_initSeqNum_get", _wrap_CHelix_initSeqNum_get, METH_VARARGS },
	 { (char *)"CHelix_initICode_set", _wrap_CHelix_initICode_set, METH_VARARGS },
	 { (char *)"CHelix_initICode_get", _wrap_CHelix_initICode_get, METH_VARARGS },
	 { (char *)"CHelix_endResName_set", _wrap_CHelix_endResName_set, METH_VARARGS },
	 { (char *)"CHelix_endResName_get", _wrap_CHelix_endResName_get, METH_VARARGS },
	 { (char *)"CHelix_endChainID_set", _wrap_CHelix_endChainID_set, METH_VARARGS },
	 { (char *)"CHelix_endChainID_get", _wrap_CHelix_endChainID_get, METH_VARARGS },
	 { (char *)"CHelix_endSeqNum_set", _wrap_CHelix_endSeqNum_set, METH_VARARGS },
	 { (char *)"CHelix_endSeqNum_get", _wrap_CHelix_endSeqNum_get, METH_VARARGS },
	 { (char *)"CHelix_endICode_set", _wrap_CHelix_endICode_set, METH_VARARGS },
	 { (char *)"CHelix_endICode_get", _wrap_CHelix_endICode_get, METH_VARARGS },
	 { (char *)"CHelix_helixClass_set", _wrap_CHelix_helixClass_set, METH_VARARGS },
	 { (char *)"CHelix_helixClass_get", _wrap_CHelix_helixClass_get, METH_VARARGS },
	 { (char *)"CHelix_comment_set", _wrap_CHelix_comment_set, METH_VARARGS },
	 { (char *)"CHelix_comment_get", _wrap_CHelix_comment_get, METH_VARARGS },
	 { (char *)"CHelix_length_set", _wrap_CHelix_length_set, METH_VARARGS },
	 { (char *)"CHelix_length_get", _wrap_CHelix_length_get, METH_VARARGS },
	 { (char *)"new_CHelix", _wrap_new_CHelix, METH_VARARGS },
	 { (char *)"delete_CHelix", _wrap_delete_CHelix, METH_VARARGS },
	 { (char *)"CHelix_PDBASCIIDump", _wrap_CHelix_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CHelix_MakeCIF", _wrap_CHelix_MakeCIF, METH_VARARGS },
	 { (char *)"CHelix_ConvertPDBASCII", _wrap_CHelix_ConvertPDBASCII, METH_VARARGS },
	 { (char *)"CHelix_GetCIF", _wrap_CHelix_GetCIF, METH_VARARGS },
	 { (char *)"CHelix_GetClassID", _wrap_CHelix_GetClassID, METH_VARARGS },
	 { (char *)"CHelix_Copy", _wrap_CHelix_Copy, METH_VARARGS },
	 { (char *)"CHelix_swigregister", CHelix_swigregister, METH_VARARGS },
	 { (char *)"CStrand_sheetID_set", _wrap_CStrand_sheetID_set, METH_VARARGS },
	 { (char *)"CStrand_sheetID_get", _wrap_CStrand_sheetID_get, METH_VARARGS },
	 { (char *)"CStrand_strandNo_set", _wrap_CStrand_strandNo_set, METH_VARARGS },
	 { (char *)"CStrand_strandNo_get", _wrap_CStrand_strandNo_get, METH_VARARGS },
	 { (char *)"CStrand_initResName_set", _wrap_CStrand_initResName_set, METH_VARARGS },
	 { (char *)"CStrand_initResName_get", _wrap_CStrand_initResName_get, METH_VARARGS },
	 { (char *)"CStrand_initChainID_set", _wrap_CStrand_initChainID_set, METH_VARARGS },
	 { (char *)"CStrand_initChainID_get", _wrap_CStrand_initChainID_get, METH_VARARGS },
	 { (char *)"CStrand_initSeqNum_set", _wrap_CStrand_initSeqNum_set, METH_VARARGS },
	 { (char *)"CStrand_initSeqNum_get", _wrap_CStrand_initSeqNum_get, METH_VARARGS },
	 { (char *)"CStrand_initICode_set", _wrap_CStrand_initICode_set, METH_VARARGS },
	 { (char *)"CStrand_initICode_get", _wrap_CStrand_initICode_get, METH_VARARGS },
	 { (char *)"CStrand_endResName_set", _wrap_CStrand_endResName_set, METH_VARARGS },
	 { (char *)"CStrand_endResName_get", _wrap_CStrand_endResName_get, METH_VARARGS },
	 { (char *)"CStrand_endChainID_set", _wrap_CStrand_endChainID_set, METH_VARARGS },
	 { (char *)"CStrand_endChainID_get", _wrap_CStrand_endChainID_get, METH_VARARGS },
	 { (char *)"CStrand_endSeqNum_set", _wrap_CStrand_endSeqNum_set, METH_VARARGS },
	 { (char *)"CStrand_endSeqNum_get", _wrap_CStrand_endSeqNum_get, METH_VARARGS },
	 { (char *)"CStrand_endICode_set", _wrap_CStrand_endICode_set, METH_VARARGS },
	 { (char *)"CStrand_endICode_get", _wrap_CStrand_endICode_get, METH_VARARGS },
	 { (char *)"CStrand_sense_set", _wrap_CStrand_sense_set, METH_VARARGS },
	 { (char *)"CStrand_sense_get", _wrap_CStrand_sense_get, METH_VARARGS },
	 { (char *)"CStrand_curAtom_set", _wrap_CStrand_curAtom_set, METH_VARARGS },
	 { (char *)"CStrand_curAtom_get", _wrap_CStrand_curAtom_get, METH_VARARGS },
	 { (char *)"CStrand_curResName_set", _wrap_CStrand_curResName_set, METH_VARARGS },
	 { (char *)"CStrand_curResName_get", _wrap_CStrand_curResName_get, METH_VARARGS },
	 { (char *)"CStrand_curChainID_set", _wrap_CStrand_curChainID_set, METH_VARARGS },
	 { (char *)"CStrand_curChainID_get", _wrap_CStrand_curChainID_get, METH_VARARGS },
	 { (char *)"CStrand_curResSeq_set", _wrap_CStrand_curResSeq_set, METH_VARARGS },
	 { (char *)"CStrand_curResSeq_get", _wrap_CStrand_curResSeq_get, METH_VARARGS },
	 { (char *)"CStrand_curICode_set", _wrap_CStrand_curICode_set, METH_VARARGS },
	 { (char *)"CStrand_curICode_get", _wrap_CStrand_curICode_get, METH_VARARGS },
	 { (char *)"CStrand_prevAtom_set", _wrap_CStrand_prevAtom_set, METH_VARARGS },
	 { (char *)"CStrand_prevAtom_get", _wrap_CStrand_prevAtom_get, METH_VARARGS },
	 { (char *)"CStrand_prevResName_set", _wrap_CStrand_prevResName_set, METH_VARARGS },
	 { (char *)"CStrand_prevResName_get", _wrap_CStrand_prevResName_get, METH_VARARGS },
	 { (char *)"CStrand_prevChainID_set", _wrap_CStrand_prevChainID_set, METH_VARARGS },
	 { (char *)"CStrand_prevChainID_get", _wrap_CStrand_prevChainID_get, METH_VARARGS },
	 { (char *)"CStrand_prevResSeq_set", _wrap_CStrand_prevResSeq_set, METH_VARARGS },
	 { (char *)"CStrand_prevResSeq_get", _wrap_CStrand_prevResSeq_get, METH_VARARGS },
	 { (char *)"CStrand_prevICode_set", _wrap_CStrand_prevICode_set, METH_VARARGS },
	 { (char *)"CStrand_prevICode_get", _wrap_CStrand_prevICode_get, METH_VARARGS },
	 { (char *)"new_CStrand", _wrap_new_CStrand, METH_VARARGS },
	 { (char *)"delete_CStrand", _wrap_delete_CStrand, METH_VARARGS },
	 { (char *)"CStrand_PDBASCIIDump", _wrap_CStrand_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CStrand_MakeCIF", _wrap_CStrand_MakeCIF, METH_VARARGS },
	 { (char *)"CStrand_ConvertPDBASCII", _wrap_CStrand_ConvertPDBASCII, METH_VARARGS },
	 { (char *)"CStrand_GetCIF", _wrap_CStrand_GetCIF, METH_VARARGS },
	 { (char *)"CStrand_Copy", _wrap_CStrand_Copy, METH_VARARGS },
	 { (char *)"CStrand_swigregister", CStrand_swigregister, METH_VARARGS },
	 { (char *)"CSheet_sheetID_set", _wrap_CSheet_sheetID_set, METH_VARARGS },
	 { (char *)"CSheet_sheetID_get", _wrap_CSheet_sheetID_get, METH_VARARGS },
	 { (char *)"CSheet_nStrands_set", _wrap_CSheet_nStrands_set, METH_VARARGS },
	 { (char *)"CSheet_nStrands_get", _wrap_CSheet_nStrands_get, METH_VARARGS },
	 { (char *)"CSheet_Strand_set", _wrap_CSheet_Strand_set, METH_VARARGS },
	 { (char *)"CSheet_Strand_get", _wrap_CSheet_Strand_get, METH_VARARGS },
	 { (char *)"new_CSheet", _wrap_new_CSheet, METH_VARARGS },
	 { (char *)"delete_CSheet", _wrap_delete_CSheet, METH_VARARGS },
	 { (char *)"CSheet_FreeMemory", _wrap_CSheet_FreeMemory, METH_VARARGS },
	 { (char *)"CSheet_OrderSheet", _wrap_CSheet_OrderSheet, METH_VARARGS },
	 { (char *)"CSheet_PDBASCIIDump", _wrap_CSheet_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CSheet_MakeCIF", _wrap_CSheet_MakeCIF, METH_VARARGS },
	 { (char *)"CSheet_ConvertPDBASCII", _wrap_CSheet_ConvertPDBASCII, METH_VARARGS },
	 { (char *)"CSheet_GetCIF", _wrap_CSheet_GetCIF, METH_VARARGS },
	 { (char *)"CSheet_Copy", _wrap_CSheet_Copy, METH_VARARGS },
	 { (char *)"CSheet_swigregister", CSheet_swigregister, METH_VARARGS },
	 { (char *)"CSheets_nSheets_set", _wrap_CSheets_nSheets_set, METH_VARARGS },
	 { (char *)"CSheets_nSheets_get", _wrap_CSheets_nSheets_get, METH_VARARGS },
	 { (char *)"CSheets_Sheet_set", _wrap_CSheets_Sheet_set, METH_VARARGS },
	 { (char *)"CSheets_Sheet_get", _wrap_CSheets_Sheet_get, METH_VARARGS },
	 { (char *)"new_CSheets", _wrap_new_CSheets, METH_VARARGS },
	 { (char *)"delete_CSheets", _wrap_delete_CSheets, METH_VARARGS },
	 { (char *)"CSheets_FreeMemory", _wrap_CSheets_FreeMemory, METH_VARARGS },
	 { (char *)"CSheets_PDBASCIIDump", _wrap_CSheets_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CSheets_MakeCIF", _wrap_CSheets_MakeCIF, METH_VARARGS },
	 { (char *)"CSheets_ConvertPDBASCII", _wrap_CSheets_ConvertPDBASCII, METH_VARARGS },
	 { (char *)"CSheets_GetCIF", _wrap_CSheets_GetCIF, METH_VARARGS },
	 { (char *)"CSheets_Copy", _wrap_CSheets_Copy, METH_VARARGS },
	 { (char *)"CSheets_swigregister", CSheets_swigregister, METH_VARARGS },
	 { (char *)"CTurn_serNum_set", _wrap_CTurn_serNum_set, METH_VARARGS },
	 { (char *)"CTurn_serNum_get", _wrap_CTurn_serNum_get, METH_VARARGS },
	 { (char *)"CTurn_turnID_set", _wrap_CTurn_turnID_set, METH_VARARGS },
	 { (char *)"CTurn_turnID_get", _wrap_CTurn_turnID_get, METH_VARARGS },
	 { (char *)"CTurn_initResName_set", _wrap_CTurn_initResName_set, METH_VARARGS },
	 { (char *)"CTurn_initResName_get", _wrap_CTurn_initResName_get, METH_VARARGS },
	 { (char *)"CTurn_initChainID_set", _wrap_CTurn_initChainID_set, METH_VARARGS },
	 { (char *)"CTurn_initChainID_get", _wrap_CTurn_initChainID_get, METH_VARARGS },
	 { (char *)"CTurn_initSeqNum_set", _wrap_CTurn_initSeqNum_set, METH_VARARGS },
	 { (char *)"CTurn_initSeqNum_get", _wrap_CTurn_initSeqNum_get, METH_VARARGS },
	 { (char *)"CTurn_initICode_set", _wrap_CTurn_initICode_set, METH_VARARGS },
	 { (char *)"CTurn_initICode_get", _wrap_CTurn_initICode_get, METH_VARARGS },
	 { (char *)"CTurn_endResName_set", _wrap_CTurn_endResName_set, METH_VARARGS },
	 { (char *)"CTurn_endResName_get", _wrap_CTurn_endResName_get, METH_VARARGS },
	 { (char *)"CTurn_endChainID_set", _wrap_CTurn_endChainID_set, METH_VARARGS },
	 { (char *)"CTurn_endChainID_get", _wrap_CTurn_endChainID_get, METH_VARARGS },
	 { (char *)"CTurn_endSeqNum_set", _wrap_CTurn_endSeqNum_set, METH_VARARGS },
	 { (char *)"CTurn_endSeqNum_get", _wrap_CTurn_endSeqNum_get, METH_VARARGS },
	 { (char *)"CTurn_endICode_set", _wrap_CTurn_endICode_set, METH_VARARGS },
	 { (char *)"CTurn_endICode_get", _wrap_CTurn_endICode_get, METH_VARARGS },
	 { (char *)"CTurn_comment_set", _wrap_CTurn_comment_set, METH_VARARGS },
	 { (char *)"CTurn_comment_get", _wrap_CTurn_comment_get, METH_VARARGS },
	 { (char *)"new_CTurn", _wrap_new_CTurn, METH_VARARGS },
	 { (char *)"delete_CTurn", _wrap_delete_CTurn, METH_VARARGS },
	 { (char *)"CTurn_PDBASCIIDump", _wrap_CTurn_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CTurn_MakeCIF", _wrap_CTurn_MakeCIF, METH_VARARGS },
	 { (char *)"CTurn_ConvertPDBASCII", _wrap_CTurn_ConvertPDBASCII, METH_VARARGS },
	 { (char *)"CTurn_GetCIF", _wrap_CTurn_GetCIF, METH_VARARGS },
	 { (char *)"CTurn_GetClassID", _wrap_CTurn_GetClassID, METH_VARARGS },
	 { (char *)"CTurn_Copy", _wrap_CTurn_Copy, METH_VARARGS },
	 { (char *)"CTurn_swigregister", CTurn_swigregister, METH_VARARGS },
	 { (char *)"CHetCompounds_nHets_set", _wrap_CHetCompounds_nHets_set, METH_VARARGS },
	 { (char *)"CHetCompounds_nHets_get", _wrap_CHetCompounds_nHets_get, METH_VARARGS },
	 { (char *)"CHetCompounds_hetCompound_set", _wrap_CHetCompounds_hetCompound_set, METH_VARARGS },
	 { (char *)"CHetCompounds_hetCompound_get", _wrap_CHetCompounds_hetCompound_get, METH_VARARGS },
	 { (char *)"new_CHetCompounds", _wrap_new_CHetCompounds, METH_VARARGS },
	 { (char *)"delete_CHetCompounds", _wrap_delete_CHetCompounds, METH_VARARGS },
	 { (char *)"CHetCompounds_FreeMemory", _wrap_CHetCompounds_FreeMemory, METH_VARARGS },
	 { (char *)"CHetCompounds_PDBASCIIDump", _wrap_CHetCompounds_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CHetCompounds_ConvertHETNAM", _wrap_CHetCompounds_ConvertHETNAM, METH_VARARGS },
	 { (char *)"CHetCompounds_ConvertHETSYN", _wrap_CHetCompounds_ConvertHETSYN, METH_VARARGS },
	 { (char *)"CHetCompounds_ConvertFORMUL", _wrap_CHetCompounds_ConvertFORMUL, METH_VARARGS },
	 { (char *)"CHetCompounds_MakeCIF", _wrap_CHetCompounds_MakeCIF, METH_VARARGS },
	 { (char *)"CHetCompounds_GetCIF", _wrap_CHetCompounds_GetCIF, METH_VARARGS },
	 { (char *)"CHetCompounds_Copy", _wrap_CHetCompounds_Copy, METH_VARARGS },
	 { (char *)"CHetCompounds_swigregister", CHetCompounds_swigregister, METH_VARARGS },
	 { (char *)"newCModel", _wrap_newCModel, METH_VARARGS },
	 { (char *)"SetMakersCModel", _wrap_SetMakersCModel, METH_VARARGS },
	 { (char *)"new_CModel", _wrap_new_CModel, METH_VARARGS },
	 { (char *)"delete_CModel", _wrap_delete_CModel, METH_VARARGS },
	 { (char *)"CModel_SetMMDBManager", _wrap_CModel_SetMMDBManager, METH_VARARGS },
	 { (char *)"CModel_GetCoordHierarchy", _wrap_CModel_GetCoordHierarchy, METH_VARARGS },
	 { (char *)"CModel_GetChainCreate", _wrap_CModel_GetChainCreate, METH_VARARGS },
	 { (char *)"CModel_GetEntryID", _wrap_CModel_GetEntryID, METH_VARARGS },
	 { (char *)"CModel_SetEntryID", _wrap_CModel_SetEntryID, METH_VARARGS },
	 { (char *)"CModel_GetSerNum", _wrap_CModel_GetSerNum, METH_VARARGS },
	 { (char *)"CModel_GetModelID", _wrap_CModel_GetModelID, METH_VARARGS },
	 { (char *)"CModel_GetNumberOfModels", _wrap_CModel_GetNumberOfModels, METH_VARARGS },
	 { (char *)"CModel_GetNumberOfChains", _wrap_CModel_GetNumberOfChains, METH_VARARGS },
	 { (char *)"CModel_GetNewChainID", _wrap_CModel_GetNewChainID, METH_VARARGS },
	 { (char *)"CModel_GetChain", _wrap_CModel_GetChain, METH_VARARGS },
	 { (char *)"CModel_GetChainTable", _wrap_CModel_GetChainTable, METH_VARARGS },
	 { (char *)"CModel_DeleteChain", _wrap_CModel_DeleteChain, METH_VARARGS },
	 { (char *)"CModel_DeleteAllChains", _wrap_CModel_DeleteAllChains, METH_VARARGS },
	 { (char *)"CModel_DeleteSolventChains", _wrap_CModel_DeleteSolventChains, METH_VARARGS },
	 { (char *)"CModel_TrimChainTable", _wrap_CModel_TrimChainTable, METH_VARARGS },
	 { (char *)"CModel_AddChain", _wrap_CModel_AddChain, METH_VARARGS },
	 { (char *)"CModel_GetNumberOfResidues", _wrap_CModel_GetNumberOfResidues, METH_VARARGS },
	 { (char *)"CModel_GetResidue", _wrap_CModel_GetResidue, METH_VARARGS },
	 { (char *)"CModel_GetResidueNo", _wrap_CModel_GetResidueNo, METH_VARARGS },
	 { (char *)"CModel_GetResidueTable", _wrap_CModel_GetResidueTable, METH_VARARGS },
	 { (char *)"CModel_DeleteResidue", _wrap_CModel_DeleteResidue, METH_VARARGS },
	 { (char *)"CModel_DeleteSolvent", _wrap_CModel_DeleteSolvent, METH_VARARGS },
	 { (char *)"CModel_DeleteAllResidues", _wrap_CModel_DeleteAllResidues, METH_VARARGS },
	 { (char *)"CModel_AddResidue", _wrap_CModel_AddResidue, METH_VARARGS },
	 { (char *)"CModel_GetNumberOfAllAtoms", _wrap_CModel_GetNumberOfAllAtoms, METH_VARARGS },
	 { (char *)"CModel_GetAllAtoms", _wrap_CModel_GetAllAtoms, METH_VARARGS },
	 { (char *)"CModel_GetNumberOfAtoms", _wrap_CModel_GetNumberOfAtoms, METH_VARARGS },
	 { (char *)"CModel_GetAtom", _wrap_CModel_GetAtom, METH_VARARGS },
	 { (char *)"CModel_GetAtomTable", _wrap_CModel_GetAtomTable, METH_VARARGS },
	 { (char *)"CModel_GetAtomTable1", _wrap_CModel_GetAtomTable1, METH_VARARGS },
	 { (char *)"CModel_GetAtomStatistics", _wrap_CModel_GetAtomStatistics, METH_VARARGS },
	 { (char *)"CModel_CalcAtomStatistics", _wrap_CModel_CalcAtomStatistics, METH_VARARGS },
	 { (char *)"CModel_DeleteAtom", _wrap_CModel_DeleteAtom, METH_VARARGS },
	 { (char *)"CModel_DeleteAllAtoms", _wrap_CModel_DeleteAllAtoms, METH_VARARGS },
	 { (char *)"CModel_DeleteAltLocs", _wrap_CModel_DeleteAltLocs, METH_VARARGS },
	 { (char *)"CModel_AddAtom", _wrap_CModel_AddAtom, METH_VARARGS },
	 { (char *)"CModel_ConvertPDBString", _wrap_CModel_ConvertPDBString, METH_VARARGS },
	 { (char *)"CModel_PDBASCIIDumpPS", _wrap_CModel_PDBASCIIDumpPS, METH_VARARGS },
	 { (char *)"CModel_PDBASCIIDump", _wrap_CModel_PDBASCIIDump, METH_VARARGS },
	 { (char *)"CModel_MakeAtomCIF", _wrap_CModel_MakeAtomCIF, METH_VARARGS },
	 { (char *)"CModel_MakePSCIF", _wrap_CModel_MakePSCIF, METH_VARARGS },
	 { (char *)"CModel_GetCIF", _wrap_CModel_GetCIF, METH_VARARGS },
	 { (char *)"CModel_MoveChain", _wrap_CModel_MoveChain, METH_VARARGS },
	 { (char *)"CModel_GetAIndexRange", _wrap_CModel_GetAIndexRange, METH_VARARGS },
	 { (char *)"CModel_MaskAtoms", _wrap_CModel_MaskAtoms, METH_VARARGS },
	 { (char *)"CModel_MaskResidues", _wrap_CModel_MaskResidues, METH_VARARGS },
	 { (char *)"CModel_MaskChains", _wrap_CModel_MaskChains, METH_VARARGS },
	 { (char *)"CModel_UnmaskAtoms", _wrap_CModel_UnmaskAtoms, METH_VARARGS },
	 { (char *)"CModel_UnmaskResidues", _wrap_CModel_UnmaskResidues, METH_VARARGS },
	 { (char *)"CModel_UnmaskChains", _wrap_CModel_UnmaskChains, METH_VARARGS },
	 { (char *)"CModel_GetNumberOfHelices", _wrap_CModel_GetNumberOfHelices, METH_VARARGS },
	 { (char *)"CModel_GetNumberOfSheets", _wrap_CModel_GetNumberOfSheets, METH_VARARGS },
	 { (char *)"CModel_GetHelix", _wrap_CModel_GetHelix, METH_VARARGS },
	 { (char *)"CModel_GetSheetID", _wrap_CModel_GetSheetID, METH_VARARGS },
	 { (char *)"CModel_GetSheet", _wrap_CModel_GetSheet, METH_VARARGS },
	 { (char *)"CModel_GetNumberOfStrands", _wrap_CModel_GetNumberOfStrands, METH_VARARGS },
	 { (char *)"CModel_GetStrand", _wrap_CModel_GetStrand, METH_VARARGS },
	 { (char *)"CModel_GetHelices", _wrap_CModel_GetHelices, METH_VARARGS },
	 { (char *)"CModel_GetSheets", _wrap_CModel_GetSheets, METH_VARARGS },
	 { (char *)"CModel_RemoveSecStructure", _wrap_CModel_RemoveSecStructure, METH_VARARGS },
	 { (char *)"CModel_CalcSecStructure", _wrap_CModel_CalcSecStructure, METH_VARARGS },
	 { (char *)"CModel_RemoveHetInfo", _wrap_CModel_RemoveHetInfo, METH_VARARGS },
	 { (char *)"CModel_ApplyTransform", _wrap_CModel_ApplyTransform, METH_VARARGS },
	 { (char *)"CModel_isInSelection", _wrap_CModel_isInSelection, METH_VARARGS },
	 { (char *)"CModel_PutUDData", _wrap_CModel_PutUDData, METH_VARARGS },
	 { (char *)"CModel_GetUDData", _wrap_CModel_GetUDData, METH_VARARGS },
	 { (char *)"CModel_Copy", _wrap_CModel_Copy, METH_VARARGS },
	 { (char *)"CModel_swigregister", CModel_swigregister, METH_VARARGS },
	 { (char *)"new_CVertex", _wrap_new_CVertex, METH_VARARGS },
	 { (char *)"delete_CVertex", _wrap_delete_CVertex, METH_VARARGS },
	 { (char *)"CVertex_SetVertex", _wrap_CVertex_SetVertex, METH_VARARGS },
	 { (char *)"CVertex_RemoveChirality", _wrap_CVertex_RemoveChirality, METH_VARARGS },
	 { (char *)"CVertex_LeaveChirality", _wrap_CVertex_LeaveChirality, METH_VARARGS },
	 { (char *)"CVertex_SetName", _wrap_CVertex_SetName, METH_VARARGS },
	 { (char *)"CVertex_SetProperty", _wrap_CVertex_SetProperty, METH_VARARGS },
	 { (char *)"CVertex_SetID", _wrap_CVertex_SetID, METH_VARARGS },
	 { (char *)"CVertex_AddBond", _wrap_CVertex_AddBond, METH_VARARGS },
	 { (char *)"CVertex_CopyNBonds", _wrap_CVertex_CopyNBonds, METH_VARARGS },
	 { (char *)"CVertex_GetProperty", _wrap_CVertex_GetProperty, METH_VARARGS },
	 { (char *)"CVertex_GetID", _wrap_CVertex_GetID, METH_VARARGS },
	 { (char *)"CVertex_GetUserID", _wrap_CVertex_GetUserID, METH_VARARGS },
	 { (char *)"CVertex_GetName", _wrap_CVertex_GetName, METH_VARARGS },
	 { (char *)"CVertex_GetType", _wrap_CVertex_GetType, METH_VARARGS },
	 { (char *)"CVertex_GetNBonds", _wrap_CVertex_GetNBonds, METH_VARARGS },
	 { (char *)"CVertex_Print", _wrap_CVertex_Print, METH_VARARGS },
	 { (char *)"CVertex_Copy", _wrap_CVertex_Copy, METH_VARARGS },
	 { (char *)"CVertex_mem_read", _wrap_CVertex_mem_read, METH_VARARGS },
	 { (char *)"CVertex_mem_write", _wrap_CVertex_mem_write, METH_VARARGS },
	 { (char *)"CVertex_swigregister", CVertex_swigregister, METH_VARARGS },
	 { (char *)"new_CEdge", _wrap_new_CEdge, METH_VARARGS },
	 { (char *)"delete_CEdge", _wrap_delete_CEdge, METH_VARARGS },
	 { (char *)"CEdge_SetEdge", _wrap_CEdge_SetEdge, METH_VARARGS },
	 { (char *)"CEdge_SetProperty", _wrap_CEdge_SetProperty, METH_VARARGS },
	 { (char *)"CEdge_GetVertex1", _wrap_CEdge_GetVertex1, METH_VARARGS },
	 { (char *)"CEdge_GetVertex2", _wrap_CEdge_GetVertex2, METH_VARARGS },
	 { (char *)"CEdge_GetType", _wrap_CEdge_GetType, METH_VARARGS },
	 { (char *)"CEdge_GetProperty", _wrap_CEdge_GetProperty, METH_VARARGS },
	 { (char *)"CEdge_Print", _wrap_CEdge_Print, METH_VARARGS },
	 { (char *)"CEdge_Copy", _wrap_CEdge_Copy, METH_VARARGS },
	 { (char *)"CEdge_mem_read", _wrap_CEdge_mem_read, METH_VARARGS },
	 { (char *)"CEdge_mem_write", _wrap_CEdge_mem_write, METH_VARARGS },
	 { (char *)"CEdge_swigregister", CEdge_swigregister, METH_VARARGS },
	 { (char *)"new_CGraph", _wrap_new_CGraph, METH_VARARGS },
	 { (char *)"delete_CGraph", _wrap_delete_CGraph, METH_VARARGS },
	 { (char *)"CGraph_Reset", _wrap_CGraph_Reset, METH_VARARGS },
	 { (char *)"CGraph_SetName", _wrap_CGraph_SetName, METH_VARARGS },
	 { (char *)"CGraph_GetName", _wrap_CGraph_GetName, METH_VARARGS },
	 { (char *)"CGraph_AddVertex", _wrap_CGraph_AddVertex, METH_VARARGS },
	 { (char *)"CGraph_AddEdge", _wrap_CGraph_AddEdge, METH_VARARGS },
	 { (char *)"CGraph_SetVertices", _wrap_CGraph_SetVertices, METH_VARARGS },
	 { (char *)"CGraph_SetEdges", _wrap_CGraph_SetEdges, METH_VARARGS },
	 { (char *)"CGraph_RemoveChirality", _wrap_CGraph_RemoveChirality, METH_VARARGS },
	 { (char *)"CGraph_LeaveChirality", _wrap_CGraph_LeaveChirality, METH_VARARGS },
	 { (char *)"CGraph_MakeGraph", _wrap_CGraph_MakeGraph, METH_VARARGS },
	 { (char *)"CGraph_HideType", _wrap_CGraph_HideType, METH_VARARGS },
	 { (char *)"CGraph_ExcludeType", _wrap_CGraph_ExcludeType, METH_VARARGS },
	 { (char *)"CGraph_Build", _wrap_CGraph_Build, METH_VARARGS },
	 { (char *)"CGraph_MakeVertexIDs", _wrap_CGraph_MakeVertexIDs, METH_VARARGS },
	 { (char *)"CGraph_GetVertexID", _wrap_CGraph_GetVertexID, METH_VARARGS },
	 { (char *)"CGraph_GetNBondedVertices", _wrap_CGraph_GetNBondedVertices, METH_VARARGS },
	 { (char *)"CGraph_GetBondedVertexID", _wrap_CGraph_GetBondedVertexID, METH_VARARGS },
	 { (char *)"CGraph_GetVertex", _wrap_CGraph_GetVertex, METH_VARARGS },
	 { (char *)"CGraph_GetNofVertices", _wrap_CGraph_GetNofVertices, METH_VARARGS },
	 { (char *)"CGraph_GetEdge", _wrap_CGraph_GetEdge, METH_VARARGS },
	 { (char *)"CGraph_GetNofEdges", _wrap_CGraph_GetNofEdges, METH_VARARGS },
	 { (char *)"CGraph_GetVertices", _wrap_CGraph_GetVertices, METH_VARARGS },
	 { (char *)"CGraph_GetEdges", _wrap_CGraph_GetEdges, METH_VARARGS },
	 { (char *)"CGraph_Print", _wrap_CGraph_Print, METH_VARARGS },
	 { (char *)"CGraph_Print1", _wrap_CGraph_Print1, METH_VARARGS },
	 { (char *)"CGraph_Copy", _wrap_CGraph_Copy, METH_VARARGS },
	 { (char *)"CGraph_mem_read", _wrap_CGraph_mem_read, METH_VARARGS },
	 { (char *)"CGraph_mem_write", _wrap_CGraph_mem_write, METH_VARARGS },
	 { (char *)"CGraph_swigregister", CGraph_swigregister, METH_VARARGS },
	 { (char *)"new_CMatch", _wrap_new_CMatch, METH_VARARGS },
	 { (char *)"delete_CMatch", _wrap_delete_CMatch, METH_VARARGS },
	 { (char *)"CMatch_SetMatch", _wrap_CMatch_SetMatch, METH_VARARGS },
	 { (char *)"CMatch_isMatch", _wrap_CMatch_isMatch, METH_VARARGS },
	 { (char *)"CMatch_isCombination", _wrap_CMatch_isCombination, METH_VARARGS },
	 { (char *)"CMatch_GetMatch", _wrap_CMatch_GetMatch, METH_VARARGS },
	 { (char *)"CMatch_mem_read", _wrap_CMatch_mem_read, METH_VARARGS },
	 { (char *)"CMatch_mem_write", _wrap_CMatch_mem_write, METH_VARARGS },
	 { (char *)"CMatch_swigregister", CMatch_swigregister, METH_VARARGS },
	 { (char *)"new_CGraphMatch", _wrap_new_CGraphMatch, METH_VARARGS },
	 { (char *)"delete_CGraphMatch", _wrap_delete_CGraphMatch, METH_VARARGS },
	 { (char *)"CGraphMatch_SetFlag", _wrap_CGraphMatch_SetFlag, METH_VARARGS },
	 { (char *)"CGraphMatch_RemoveFlag", _wrap_CGraphMatch_RemoveFlag, METH_VARARGS },
	 { (char *)"CGraphMatch_SetMaxNofMatches", _wrap_CGraphMatch_SetMaxNofMatches, METH_VARARGS },
	 { (char *)"CGraphMatch_SetTimeLimit", _wrap_CGraphMatch_SetTimeLimit, METH_VARARGS },
	 { (char *)"CGraphMatch_GetStopSignal", _wrap_CGraphMatch_GetStopSignal, METH_VARARGS },
	 { (char *)"CGraphMatch_MatchGraphs", _wrap_CGraphMatch_MatchGraphs, METH_VARARGS },
	 { (char *)"CGraphMatch_PrintMatches", _wrap_CGraphMatch_PrintMatches, METH_VARARGS },
	 { (char *)"CGraphMatch_GetNofMatches", _wrap_CGraphMatch_GetNofMatches, METH_VARARGS },
	 { (char *)"CGraphMatch_GetMatch", _wrap_CGraphMatch_GetMatch, METH_VARARGS },
	 { (char *)"CGraphMatch_mem_read", _wrap_CGraphMatch_mem_read, METH_VARARGS },
	 { (char *)"CGraphMatch_mem_write", _wrap_CGraphMatch_mem_write, METH_VARARGS },
	 { (char *)"CGraphMatch_swigregister", CGraphMatch_swigregister, METH_VARARGS },
	 { (char *)"CAlignParams_gapWeight_set", _wrap_CAlignParams_gapWeight_set, METH_VARARGS },
	 { (char *)"CAlignParams_gapWeight_get", _wrap_CAlignParams_gapWeight_get, METH_VARARGS },
	 { (char *)"CAlignParams_spaceWeight_set", _wrap_CAlignParams_spaceWeight_set, METH_VARARGS },
	 { (char *)"CAlignParams_spaceWeight_get", _wrap_CAlignParams_spaceWeight_get, METH_VARARGS },
	 { (char *)"CAlignParams_equalScore_set", _wrap_CAlignParams_equalScore_set, METH_VARARGS },
	 { (char *)"CAlignParams_equalScore_get", _wrap_CAlignParams_equalScore_get, METH_VARARGS },
	 { (char *)"CAlignParams_nequalScore_set", _wrap_CAlignParams_nequalScore_set, METH_VARARGS },
	 { (char *)"CAlignParams_nequalScore_get", _wrap_CAlignParams_nequalScore_get, METH_VARARGS },
	 { (char *)"CAlignParams_method_set", _wrap_CAlignParams_method_set, METH_VARARGS },
	 { (char *)"CAlignParams_method_get", _wrap_CAlignParams_method_get, METH_VARARGS },
	 { (char *)"new_CAlignParams", _wrap_new_CAlignParams, METH_VARARGS },
	 { (char *)"delete_CAlignParams", _wrap_delete_CAlignParams, METH_VARARGS },
	 { (char *)"CAlignParams_swigregister", CAlignParams_swigregister, METH_VARARGS },
	 { (char *)"new_CAlignment", _wrap_new_CAlignment, METH_VARARGS },
	 { (char *)"delete_CAlignment", _wrap_delete_CAlignment, METH_VARARGS },
	 { (char *)"CAlignment_SetAffineModel", _wrap_CAlignment_SetAffineModel, METH_VARARGS },
	 { (char *)"CAlignment_SetScores", _wrap_CAlignment_SetScores, METH_VARARGS },
	 { (char *)"CAlignment_Align", _wrap_CAlignment_Align, METH_VARARGS },
	 { (char *)"CAlignment_GetAlignedS", _wrap_CAlignment_GetAlignedS, METH_VARARGS },
	 { (char *)"CAlignment_GetAlignedT", _wrap_CAlignment_GetAlignedT, METH_VARARGS },
	 { (char *)"CAlignment_GetScore", _wrap_CAlignment_GetScore, METH_VARARGS },
	 { (char *)"CAlignment_OutputResults", _wrap_CAlignment_OutputResults, METH_VARARGS },
	 { (char *)"CAlignment_swigregister", CAlignment_swigregister, METH_VARARGS },
	 { (char *)"new_CAlignment1", _wrap_new_CAlignment1, METH_VARARGS },
	 { (char *)"delete_CAlignment1", _wrap_delete_CAlignment1, METH_VARARGS },
	 { (char *)"CAlignment1_SetAffineModel", _wrap_CAlignment1_SetAffineModel, METH_VARARGS },
	 { (char *)"CAlignment1_SetScores", _wrap_CAlignment1_SetScores, METH_VARARGS },
	 { (char *)"CAlignment1_Align", _wrap_CAlignment1_Align, METH_VARARGS },
	 { (char *)"CAlignment1_GetAlignedS", _wrap_CAlignment1_GetAlignedS, METH_VARARGS },
	 { (char *)"CAlignment1_GetAlignedT", _wrap_CAlignment1_GetAlignedT, METH_VARARGS },
	 { (char *)"CAlignment1_GetAlignLength", _wrap_CAlignment1_GetAlignLength, METH_VARARGS },
	 { (char *)"CAlignment1_GetScore", _wrap_CAlignment1_GetScore, METH_VARARGS },
	 { (char *)"CAlignment1_OutputResults", _wrap_CAlignment1_OutputResults, METH_VARARGS },
	 { (char *)"CAlignment1_swigregister", CAlignment1_swigregister, METH_VARARGS },
	 { (char *)"CSBAtom_sca_name_set", _wrap_CSBAtom_sca_name_set, METH_VARARGS },
	 { (char *)"CSBAtom_sca_name_get", _wrap_CSBAtom_sca_name_get, METH_VARARGS },
	 { (char *)"CSBAtom_pdb_name_set", _wrap_CSBAtom_pdb_name_set, METH_VARARGS },
	 { (char *)"CSBAtom_pdb_name_get", _wrap_CSBAtom_pdb_name_get, METH_VARARGS },
	 { (char *)"CSBAtom_element_set", _wrap_CSBAtom_element_set, METH_VARARGS },
	 { (char *)"CSBAtom_element_get", _wrap_CSBAtom_element_get, METH_VARARGS },
	 { (char *)"CSBAtom_energyType_set", _wrap_CSBAtom_energyType_set, METH_VARARGS },
	 { (char *)"CSBAtom_energyType_get", _wrap_CSBAtom_energyType_get, METH_VARARGS },
	 { (char *)"CSBAtom_x_set", _wrap_CSBAtom_x_set, METH_VARARGS },
	 { (char *)"CSBAtom_x_get", _wrap_CSBAtom_x_get, METH_VARARGS },
	 { (char *)"CSBAtom_y_set", _wrap_CSBAtom_y_set, METH_VARARGS },
	 { (char *)"CSBAtom_y_get", _wrap_CSBAtom_y_get, METH_VARARGS },
	 { (char *)"CSBAtom_z_set", _wrap_CSBAtom_z_set, METH_VARARGS },
	 { (char *)"CSBAtom_z_get", _wrap_CSBAtom_z_get, METH_VARARGS },
	 { (char *)"CSBAtom_x_esd_set", _wrap_CSBAtom_x_esd_set, METH_VARARGS },
	 { (char *)"CSBAtom_x_esd_get", _wrap_CSBAtom_x_esd_get, METH_VARARGS },
	 { (char *)"CSBAtom_y_esd_set", _wrap_CSBAtom_y_esd_set, METH_VARARGS },
	 { (char *)"CSBAtom_y_esd_get", _wrap_CSBAtom_y_esd_get, METH_VARARGS },
	 { (char *)"CSBAtom_z_esd_set", _wrap_CSBAtom_z_esd_set, METH_VARARGS },
	 { (char *)"CSBAtom_z_esd_get", _wrap_CSBAtom_z_esd_get, METH_VARARGS },
	 { (char *)"CSBAtom_chirality_set", _wrap_CSBAtom_chirality_set, METH_VARARGS },
	 { (char *)"CSBAtom_chirality_get", _wrap_CSBAtom_chirality_get, METH_VARARGS },
	 { (char *)"CSBAtom_leaving_set", _wrap_CSBAtom_leaving_set, METH_VARARGS },
	 { (char *)"CSBAtom_leaving_get", _wrap_CSBAtom_leaving_get, METH_VARARGS },
	 { (char *)"new_CSBAtom", _wrap_new_CSBAtom, METH_VARARGS },
	 { (char *)"delete_CSBAtom", _wrap_delete_CSBAtom, METH_VARARGS },
	 { (char *)"CSBAtom_makeCAtom", _wrap_CSBAtom_makeCAtom, METH_VARARGS },
	 { (char *)"CSBAtom_Copy", _wrap_CSBAtom_Copy, METH_VARARGS },
	 { (char *)"CSBAtom_swigregister", CSBAtom_swigregister, METH_VARARGS },
	 { (char *)"CSBBond_atom1_set", _wrap_CSBBond_atom1_set, METH_VARARGS },
	 { (char *)"CSBBond_atom1_get", _wrap_CSBBond_atom1_get, METH_VARARGS },
	 { (char *)"CSBBond_atom2_set", _wrap_CSBBond_atom2_set, METH_VARARGS },
	 { (char *)"CSBBond_atom2_get", _wrap_CSBBond_atom2_get, METH_VARARGS },
	 { (char *)"CSBBond_order_set", _wrap_CSBBond_order_set, METH_VARARGS },
	 { (char *)"CSBBond_order_get", _wrap_CSBBond_order_get, METH_VARARGS },
	 { (char *)"CSBBond_length_set", _wrap_CSBBond_length_set, METH_VARARGS },
	 { (char *)"CSBBond_length_get", _wrap_CSBBond_length_get, METH_VARARGS },
	 { (char *)"CSBBond_length_esd_set", _wrap_CSBBond_length_esd_set, METH_VARARGS },
	 { (char *)"CSBBond_length_esd_get", _wrap_CSBBond_length_esd_get, METH_VARARGS },
	 { (char *)"new_CSBBond", _wrap_new_CSBBond, METH_VARARGS },
	 { (char *)"delete_CSBBond", _wrap_delete_CSBBond, METH_VARARGS },
	 { (char *)"CSBBond_SetBond", _wrap_CSBBond_SetBond, METH_VARARGS },
	 { (char *)"CSBBond_Copy", _wrap_CSBBond_Copy, METH_VARARGS },
	 { (char *)"CSBBond_swigregister", CSBBond_swigregister, METH_VARARGS },
	 { (char *)"CSBAngle_atom1_set", _wrap_CSBAngle_atom1_set, METH_VARARGS },
	 { (char *)"CSBAngle_atom1_get", _wrap_CSBAngle_atom1_get, METH_VARARGS },
	 { (char *)"CSBAngle_atom2_set", _wrap_CSBAngle_atom2_set, METH_VARARGS },
	 { (char *)"CSBAngle_atom2_get", _wrap_CSBAngle_atom2_get, METH_VARARGS },
	 { (char *)"CSBAngle_atom3_set", _wrap_CSBAngle_atom3_set, METH_VARARGS },
	 { (char *)"CSBAngle_atom3_get", _wrap_CSBAngle_atom3_get, METH_VARARGS },
	 { (char *)"CSBAngle_angle_set", _wrap_CSBAngle_angle_set, METH_VARARGS },
	 { (char *)"CSBAngle_angle_get", _wrap_CSBAngle_angle_get, METH_VARARGS },
	 { (char *)"CSBAngle_angle_esd_set", _wrap_CSBAngle_angle_esd_set, METH_VARARGS },
	 { (char *)"CSBAngle_angle_esd_get", _wrap_CSBAngle_angle_esd_get, METH_VARARGS },
	 { (char *)"new_CSBAngle", _wrap_new_CSBAngle, METH_VARARGS },
	 { (char *)"delete_CSBAngle", _wrap_delete_CSBAngle, METH_VARARGS },
	 { (char *)"CSBAngle_Copy", _wrap_CSBAngle_Copy, METH_VARARGS },
	 { (char *)"CSBAngle_swigregister", CSBAngle_swigregister, METH_VARARGS },
	 { (char *)"CSBTorsion_atom1_set", _wrap_CSBTorsion_atom1_set, METH_VARARGS },
	 { (char *)"CSBTorsion_atom1_get", _wrap_CSBTorsion_atom1_get, METH_VARARGS },
	 { (char *)"CSBTorsion_atom2_set", _wrap_CSBTorsion_atom2_set, METH_VARARGS },
	 { (char *)"CSBTorsion_atom2_get", _wrap_CSBTorsion_atom2_get, METH_VARARGS },
	 { (char *)"CSBTorsion_atom3_set", _wrap_CSBTorsion_atom3_set, METH_VARARGS },
	 { (char *)"CSBTorsion_atom3_get", _wrap_CSBTorsion_atom3_get, METH_VARARGS },
	 { (char *)"CSBTorsion_atom4_set", _wrap_CSBTorsion_atom4_set, METH_VARARGS },
	 { (char *)"CSBTorsion_atom4_get", _wrap_CSBTorsion_atom4_get, METH_VARARGS },
	 { (char *)"CSBTorsion_torsion_set", _wrap_CSBTorsion_torsion_set, METH_VARARGS },
	 { (char *)"CSBTorsion_torsion_get", _wrap_CSBTorsion_torsion_get, METH_VARARGS },
	 { (char *)"CSBTorsion_torsion_esd_set", _wrap_CSBTorsion_torsion_esd_set, METH_VARARGS },
	 { (char *)"CSBTorsion_torsion_esd_get", _wrap_CSBTorsion_torsion_esd_get, METH_VARARGS },
	 { (char *)"new_CSBTorsion", _wrap_new_CSBTorsion, METH_VARARGS },
	 { (char *)"delete_CSBTorsion", _wrap_delete_CSBTorsion, METH_VARARGS },
	 { (char *)"CSBTorsion_Copy", _wrap_CSBTorsion_Copy, METH_VARARGS },
	 { (char *)"CSBTorsion_swigregister", CSBTorsion_swigregister, METH_VARARGS },
	 { (char *)"CSBStructure_compoundID_set", _wrap_CSBStructure_compoundID_set, METH_VARARGS },
	 { (char *)"CSBStructure_compoundID_get", _wrap_CSBStructure_compoundID_get, METH_VARARGS },
	 { (char *)"CSBStructure_Formula_set", _wrap_CSBStructure_Formula_set, METH_VARARGS },
	 { (char *)"CSBStructure_Formula_get", _wrap_CSBStructure_Formula_get, METH_VARARGS },
	 { (char *)"CSBStructure_Name_set", _wrap_CSBStructure_Name_set, METH_VARARGS },
	 { (char *)"CSBStructure_Name_get", _wrap_CSBStructure_Name_get, METH_VARARGS },
	 { (char *)"CSBStructure_Synonym_set", _wrap_CSBStructure_Synonym_set, METH_VARARGS },
	 { (char *)"CSBStructure_Synonym_get", _wrap_CSBStructure_Synonym_get, METH_VARARGS },
	 { (char *)"CSBStructure_Charge_set", _wrap_CSBStructure_Charge_set, METH_VARARGS },
	 { (char *)"CSBStructure_Charge_get", _wrap_CSBStructure_Charge_get, METH_VARARGS },
	 { (char *)"CSBStructure_nAtoms_set", _wrap_CSBStructure_nAtoms_set, METH_VARARGS },
	 { (char *)"CSBStructure_nAtoms_get", _wrap_CSBStructure_nAtoms_get, METH_VARARGS },
	 { (char *)"CSBStructure_nBonds_set", _wrap_CSBStructure_nBonds_set, METH_VARARGS },
	 { (char *)"CSBStructure_nBonds_get", _wrap_CSBStructure_nBonds_get, METH_VARARGS },
	 { (char *)"CSBStructure_nAngles_set", _wrap_CSBStructure_nAngles_set, METH_VARARGS },
	 { (char *)"CSBStructure_nAngles_get", _wrap_CSBStructure_nAngles_get, METH_VARARGS },
	 { (char *)"CSBStructure_nTorsions_set", _wrap_CSBStructure_nTorsions_set, METH_VARARGS },
	 { (char *)"CSBStructure_nTorsions_get", _wrap_CSBStructure_nTorsions_get, METH_VARARGS },
	 { (char *)"CSBStructure_Atom_set", _wrap_CSBStructure_Atom_set, METH_VARARGS },
	 { (char *)"CSBStructure_Atom_get", _wrap_CSBStructure_Atom_get, METH_VARARGS },
	 { (char *)"CSBStructure_Bond_set", _wrap_CSBStructure_Bond_set, METH_VARARGS },
	 { (char *)"CSBStructure_Bond_get", _wrap_CSBStructure_Bond_get, METH_VARARGS },
	 { (char *)"CSBStructure_Angle_set", _wrap_CSBStructure_Angle_set, METH_VARARGS },
	 { (char *)"CSBStructure_Angle_get", _wrap_CSBStructure_Angle_get, METH_VARARGS },
	 { (char *)"CSBStructure_Torsion_set", _wrap_CSBStructure_Torsion_set, METH_VARARGS },
	 { (char *)"CSBStructure_Torsion_get", _wrap_CSBStructure_Torsion_get, METH_VARARGS },
	 { (char *)"CSBStructure_nLeavingAtoms_set", _wrap_CSBStructure_nLeavingAtoms_set, METH_VARARGS },
	 { (char *)"CSBStructure_nLeavingAtoms_get", _wrap_CSBStructure_nLeavingAtoms_get, METH_VARARGS },
	 { (char *)"CSBStructure_leavingAtom_set", _wrap_CSBStructure_leavingAtom_set, METH_VARARGS },
	 { (char *)"CSBStructure_leavingAtom_get", _wrap_CSBStructure_leavingAtom_get, METH_VARARGS },
	 { (char *)"CSBStructure_bondedAtom_set", _wrap_CSBStructure_bondedAtom_set, METH_VARARGS },
	 { (char *)"CSBStructure_bondedAtom_get", _wrap_CSBStructure_bondedAtom_get, METH_VARARGS },
	 { (char *)"CSBStructure_xyz_source_set", _wrap_CSBStructure_xyz_source_set, METH_VARARGS },
	 { (char *)"CSBStructure_xyz_source_get", _wrap_CSBStructure_xyz_source_get, METH_VARARGS },
	 { (char *)"new_CSBStructure", _wrap_new_CSBStructure, METH_VARARGS },
	 { (char *)"delete_CSBStructure", _wrap_delete_CSBStructure, METH_VARARGS },
	 { (char *)"CSBStructure_Reset", _wrap_CSBStructure_Reset, METH_VARARGS },
	 { (char *)"CSBStructure_PutFormula", _wrap_CSBStructure_PutFormula, METH_VARARGS },
	 { (char *)"CSBStructure_PutName", _wrap_CSBStructure_PutName, METH_VARARGS },
	 { (char *)"CSBStructure_PutSynonym", _wrap_CSBStructure_PutSynonym, METH_VARARGS },
	 { (char *)"CSBStructure_PutCharge", _wrap_CSBStructure_PutCharge, METH_VARARGS },
	 { (char *)"CSBStructure_AddAtom", _wrap_CSBStructure_AddAtom, METH_VARARGS },
	 { (char *)"CSBStructure_AddBond", _wrap_CSBStructure_AddBond, METH_VARARGS },
	 { (char *)"CSBStructure_MakeLeavingAtoms", _wrap_CSBStructure_MakeLeavingAtoms, METH_VARARGS },
	 { (char *)"CSBStructure_AddAngle", _wrap_CSBStructure_AddAngle, METH_VARARGS },
	 { (char *)"CSBStructure_AddTorsion", _wrap_CSBStructure_AddTorsion, METH_VARARGS },
	 { (char *)"CSBStructure_RemoveEnergyTypes", _wrap_CSBStructure_RemoveEnergyTypes, METH_VARARGS },
	 { (char *)"CSBStructure_SetEnergyType", _wrap_CSBStructure_SetEnergyType, METH_VARARGS },
	 { (char *)"CSBStructure_GetAtomNo", _wrap_CSBStructure_GetAtomNo, METH_VARARGS },
	 { (char *)"CSBStructure_GetAtomTable", _wrap_CSBStructure_GetAtomTable, METH_VARARGS },
	 { (char *)"CSBStructure_CheckAtoms", _wrap_CSBStructure_CheckAtoms, METH_VARARGS },
	 { (char *)"CSBStructure_Copy", _wrap_CSBStructure_Copy, METH_VARARGS },
	 { (char *)"CSBStructure_swigregister", CSBStructure_swigregister, METH_VARARGS },
	 { (char *)"CSBIndex_compoundID_set", _wrap_CSBIndex_compoundID_set, METH_VARARGS },
	 { (char *)"CSBIndex_compoundID_get", _wrap_CSBIndex_compoundID_get, METH_VARARGS },
	 { (char *)"CSBIndex_nAtoms_set", _wrap_CSBIndex_nAtoms_set, METH_VARARGS },
	 { (char *)"CSBIndex_nAtoms_get", _wrap_CSBIndex_nAtoms_get, METH_VARARGS },
	 { (char *)"CSBIndex_nBonds_set", _wrap_CSBIndex_nBonds_set, METH_VARARGS },
	 { (char *)"CSBIndex_nBonds_get", _wrap_CSBIndex_nBonds_get, METH_VARARGS },
	 { (char *)"CSBIndex_fGraphPos_set", _wrap_CSBIndex_fGraphPos_set, METH_VARARGS },
	 { (char *)"CSBIndex_fGraphPos_get", _wrap_CSBIndex_fGraphPos_get, METH_VARARGS },
	 { (char *)"CSBIndex_fStructPos_set", _wrap_CSBIndex_fStructPos_set, METH_VARARGS },
	 { (char *)"CSBIndex_fStructPos_get", _wrap_CSBIndex_fStructPos_get, METH_VARARGS },
	 { (char *)"CSBIndex_loadPos_set", _wrap_CSBIndex_loadPos_set, METH_VARARGS },
	 { (char *)"CSBIndex_loadPos_get", _wrap_CSBIndex_loadPos_get, METH_VARARGS },
	 { (char *)"CSBIndex_nXTs_set", _wrap_CSBIndex_nXTs_set, METH_VARARGS },
	 { (char *)"CSBIndex_nXTs_get", _wrap_CSBIndex_nXTs_get, METH_VARARGS },
	 { (char *)"CSBIndex_Comp1_set", _wrap_CSBIndex_Comp1_set, METH_VARARGS },
	 { (char *)"CSBIndex_Comp1_get", _wrap_CSBIndex_Comp1_get, METH_VARARGS },
	 { (char *)"CSBIndex_Comp2_set", _wrap_CSBIndex_Comp2_set, METH_VARARGS },
	 { (char *)"CSBIndex_Comp2_get", _wrap_CSBIndex_Comp2_get, METH_VARARGS },
	 { (char *)"new_CSBIndex", _wrap_new_CSBIndex, METH_VARARGS },
	 { (char *)"delete_CSBIndex", _wrap_delete_CSBIndex, METH_VARARGS },
	 { (char *)"CSBIndex_MakeCompositions", _wrap_CSBIndex_MakeCompositions, METH_VARARGS },
	 { (char *)"CSBIndex_swigregister", CSBIndex_swigregister, METH_VARARGS },
	 { (char *)"MakeChirInd", _wrap_MakeChirInd, METH_VARARGS },
	 { (char *)"MakeElementType", _wrap_MakeElementType, METH_VARARGS },
	 { (char *)"new_CSBase", _wrap_new_CSBase, METH_VARARGS },
	 { (char *)"delete_CSBase", _wrap_delete_CSBase, METH_VARARGS },
	 { (char *)"CSBase_LoadIndex", _wrap_CSBase_LoadIndex, METH_VARARGS },
	 { (char *)"CSBase_LoadIndex1", _wrap_CSBase_LoadIndex1, METH_VARARGS },
	 { (char *)"CSBase_LoadStructure", _wrap_CSBase_LoadStructure, METH_VARARGS },
	 { (char *)"CSBase_UnloadStructure", _wrap_CSBase_UnloadStructure, METH_VARARGS },
	 { (char *)"CSBase_GetPath", _wrap_CSBase_GetPath, METH_VARARGS },
	 { (char *)"CSBase_GetStructFile", _wrap_CSBase_GetStructFile, METH_VARARGS },
	 { (char *)"CSBase_GetGraphFile", _wrap_CSBase_GetGraphFile, METH_VARARGS },
	 { (char *)"CSBase_GetStructure", _wrap_CSBase_GetStructure, METH_VARARGS },
	 { (char *)"CSBase_GetGraph", _wrap_CSBase_GetGraph, METH_VARARGS },
	 { (char *)"CSBase_GetStructNo", _wrap_CSBase_GetStructNo, METH_VARARGS },
	 { (char *)"CSBase_GetNofStructures", _wrap_CSBase_GetNofStructures, METH_VARARGS },
	 { (char *)"CSBase_CheckGraph", _wrap_CSBase_CheckGraph, METH_VARARGS },
	 { (char *)"CSBase_CheckResidue", _wrap_CSBase_CheckResidue, METH_VARARGS },
	 { (char *)"CSBase_ComplementResidue", _wrap_CSBase_ComplementResidue, METH_VARARGS },
	 { (char *)"CSBase_ComplementChain", _wrap_CSBase_ComplementChain, METH_VARARGS },
	 { (char *)"CSBase_ComplementModel", _wrap_CSBase_ComplementModel, METH_VARARGS },
	 { (char *)"CSBase_ComplementFile", _wrap_CSBase_ComplementFile, METH_VARARGS },
	 { (char *)"CSBase_GetAtNames", _wrap_CSBase_GetAtNames, METH_VARARGS },
	 { (char *)"CSBase_GetNofAtoms", _wrap_CSBase_GetNofAtoms, METH_VARARGS },
	 { (char *)"CSBase_GetAtoms", _wrap_CSBase_GetAtoms, METH_VARARGS },
	 { (char *)"CSBase_GetBonds", _wrap_CSBase_GetBonds, METH_VARARGS },
	 { (char *)"CSBase_GetHetInfo", _wrap_CSBase_GetHetInfo, METH_VARARGS },
	 { (char *)"CSBase_swigregister", CSBase_swigregister, METH_VARARGS },
	 { (char *)"isMetal", _wrap_isMetal, METH_VARARGS },
	 { (char *)"getElementNo", _wrap_getElementNo, METH_VARARGS },
	 { (char *)"getCovalentRadius", _wrap_getCovalentRadius, METH_VARARGS },
	 { (char *)"getVdWaalsRadius", _wrap_getVdWaalsRadius, METH_VARARGS },
	 { (char *)"GetAAHydropathy", _wrap_GetAAHydropathy, METH_VARARGS },
	 { (char *)"GetAASimilarity", _wrap_GetAASimilarity, METH_VARARGS },
	 { (char *)"isSolvent", _wrap_isSolvent, METH_VARARGS },
	 { (char *)"isAminoacid", _wrap_isAminoacid, METH_VARARGS },
	 { (char *)"isNucleotide", _wrap_isNucleotide, METH_VARARGS },
	 { (char *)"isSugar", _wrap_isSugar, METH_VARARGS },
	 { (char *)"Get1LetterCode", _wrap_Get1LetterCode, METH_VARARGS },
	 { (char *)"getPCChain", _wrap_getPCChain, METH_VARARGS },
	 { (char *)"getPCResidue", _wrap_getPCResidue, METH_VARARGS },
	 { (char *)"getPPCAtom", _wrap_getPPCAtom, METH_VARARGS },
	 { (char *)"getPCAtom", _wrap_getPCAtom, METH_VARARGS },
	 { (char *)"getCAtom", _wrap_getCAtom, METH_VARARGS },
	 { (char *)"getSContact", _wrap_getSContact, METH_VARARGS },
	 { (char *)"newPCAtom", _wrap_newPCAtom, METH_VARARGS },
	 { (char *)"newPPCAtom", _wrap_newPPCAtom, METH_VARARGS },
	 { (char *)"newPCBFGSMin", _wrap_newPCBFGSMin, METH_VARARGS },
	 { (char *)"newPPCBFGSMin", _wrap_newPPCBFGSMin, METH_VARARGS },
	 { (char *)"newPCFile", _wrap_newPCFile, METH_VARARGS },
	 { (char *)"newPPCFile", _wrap_newPPCFile, METH_VARARGS },
	 { (char *)"newPCProModel", _wrap_newPCProModel, METH_VARARGS },
	 { (char *)"newPPCProModel", _wrap_newPPCProModel, METH_VARARGS },
	 { (char *)"newPCChainContainer", _wrap_newPCChainContainer, METH_VARARGS },
	 { (char *)"newPPCChainContainer", _wrap_newPPCChainContainer, METH_VARARGS },
	 { (char *)"newPCContainerChain", _wrap_newPCContainerChain, METH_VARARGS },
	 { (char *)"newPPCContainerChain", _wrap_newPPCContainerChain, METH_VARARGS },
	 { (char *)"newPCDBReference", _wrap_newPCDBReference, METH_VARARGS },
	 { (char *)"newPPCDBReference", _wrap_newPPCDBReference, METH_VARARGS },
	 { (char *)"newPCSeqAdv", _wrap_newPCSeqAdv, METH_VARARGS },
	 { (char *)"newPPCSeqAdv", _wrap_newPPCSeqAdv, METH_VARARGS },
	 { (char *)"newPCSeqRes", _wrap_newPCSeqRes, METH_VARARGS },
	 { (char *)"newPPCSeqRes", _wrap_newPPCSeqRes, METH_VARARGS },
	 { (char *)"newPCModRes", _wrap_newPCModRes, METH_VARARGS },
	 { (char *)"newPPCModRes", _wrap_newPPCModRes, METH_VARARGS },
	 { (char *)"newPCHetRec", _wrap_newPCHetRec, METH_VARARGS },
	 { (char *)"newPPCHetRec", _wrap_newPPCHetRec, METH_VARARGS },
	 { (char *)"newPCBrick", _wrap_newPCBrick, METH_VARARGS },
	 { (char *)"newPPCBrick", _wrap_newPPCBrick, METH_VARARGS },
	 { (char *)"newPCGenSym", _wrap_newPCGenSym, METH_VARARGS },
	 { (char *)"newPPCGenSym", _wrap_newPPCGenSym, METH_VARARGS },
	 { (char *)"newPCMMDBCoorManager", _wrap_newPCMMDBCoorManager, METH_VARARGS },
	 { (char *)"newPPCMMDBCoorManager", _wrap_newPPCMMDBCoorManager, METH_VARARGS },
	 { (char *)"newPCCrystContainer", _wrap_newPCCrystContainer, METH_VARARGS },
	 { (char *)"newPPCCrystContainer", _wrap_newPPCCrystContainer, METH_VARARGS },
	 { (char *)"newPCNCSMatrix", _wrap_newPCNCSMatrix, METH_VARARGS },
	 { (char *)"newPPCNCSMatrix", _wrap_newPPCNCSMatrix, METH_VARARGS },
	 { (char *)"newPCTVect", _wrap_newPCTVect, METH_VARARGS },
	 { (char *)"newPPCTVect", _wrap_newPPCTVect, METH_VARARGS },
	 { (char *)"newPCMMDBCryst", _wrap_newPCMMDBCryst, METH_VARARGS },
	 { (char *)"newPPCMMDBCryst", _wrap_newPPCMMDBCryst, METH_VARARGS },
	 { (char *)"newPCResidue", _wrap_newPCResidue, METH_VARARGS },
	 { (char *)"newPPCResidue", _wrap_newPPCResidue, METH_VARARGS },
	 { (char *)"newPCChain", _wrap_newPCChain, METH_VARARGS },
	 { (char *)"newPPCChain", _wrap_newPPCChain, METH_VARARGS },
	 { (char *)"newPCModel", _wrap_newPCModel, METH_VARARGS },
	 { (char *)"newPPCModel", _wrap_newPPCModel, METH_VARARGS },
	 { (char *)"newPCSSContainer", _wrap_newPCSSContainer, METH_VARARGS },
	 { (char *)"newPPCSSContainer", _wrap_newPPCSSContainer, METH_VARARGS },
	 { (char *)"newPCHelix", _wrap_newPCHelix, METH_VARARGS },
	 { (char *)"newPPCHelix", _wrap_newPPCHelix, METH_VARARGS },
	 { (char *)"newPCStrand", _wrap_newPCStrand, METH_VARARGS },
	 { (char *)"newPPCStrand", _wrap_newPPCStrand, METH_VARARGS },
	 { (char *)"newPCSheet", _wrap_newPCSheet, METH_VARARGS },
	 { (char *)"newPPCSheet", _wrap_newPPCSheet, METH_VARARGS },
	 { (char *)"newPCSheets", _wrap_newPCSheets, METH_VARARGS },
	 { (char *)"newPPCSheets", _wrap_newPPCSheets, METH_VARARGS },
	 { (char *)"newPCTurn", _wrap_newPCTurn, METH_VARARGS },
	 { (char *)"newPPCTurn", _wrap_newPPCTurn, METH_VARARGS },
	 { (char *)"newPCHetCompounds", _wrap_newPCHetCompounds, METH_VARARGS },
	 { (char *)"newPPCHetCompounds", _wrap_newPPCHetCompounds, METH_VARARGS },
	 { (char *)"newPCMMDBSelManager", _wrap_newPCMMDBSelManager, METH_VARARGS },
	 { (char *)"newPPCMMDBSelManager", _wrap_newPPCMMDBSelManager, METH_VARARGS },
	 { (char *)"newPCSymOp", _wrap_newPCSymOp, METH_VARARGS },
	 { (char *)"newPPCSymOp", _wrap_newPPCSymOp, METH_VARARGS },
	 { (char *)"newPCSymOps", _wrap_newPCSymOps, METH_VARARGS },
	 { (char *)"newPPCSymOps", _wrap_newPPCSymOps, METH_VARARGS },
	 { (char *)"newPCTitleContainer", _wrap_newPCTitleContainer, METH_VARARGS },
	 { (char *)"newPPCTitleContainer", _wrap_newPPCTitleContainer, METH_VARARGS },
	 { (char *)"newPCObsLine", _wrap_newPCObsLine, METH_VARARGS },
	 { (char *)"newPPCObsLine", _wrap_newPPCObsLine, METH_VARARGS },
	 { (char *)"newPCTitleLine", _wrap_newPCTitleLine, METH_VARARGS },
	 { (char *)"newPPCTitleLine", _wrap_newPPCTitleLine, METH_VARARGS },
	 { (char *)"newPCCaveat", _wrap_newPCCaveat, METH_VARARGS },
	 { (char *)"newPPCCaveat", _wrap_newPPCCaveat, METH_VARARGS },
	 { (char *)"newPCCompound", _wrap_newPCCompound, METH_VARARGS },
	 { (char *)"newPPCCompound", _wrap_newPPCCompound, METH_VARARGS },
	 { (char *)"newPCSource", _wrap_newPCSource, METH_VARARGS },
	 { (char *)"newPPCSource", _wrap_newPPCSource, METH_VARARGS },
	 { (char *)"newPCKeyWords", _wrap_newPCKeyWords, METH_VARARGS },
	 { (char *)"newPPCKeyWords", _wrap_newPPCKeyWords, METH_VARARGS },
	 { (char *)"newPCExpData", _wrap_newPCExpData, METH_VARARGS },
	 { (char *)"newPPCExpData", _wrap_newPPCExpData, METH_VARARGS },
	 { (char *)"newPCAuthor", _wrap_newPCAuthor, METH_VARARGS },
	 { (char *)"newPPCAuthor", _wrap_newPPCAuthor, METH_VARARGS },
	 { (char *)"newPCRevData", _wrap_newPCRevData, METH_VARARGS },
	 { (char *)"newPPCRevData", _wrap_newPPCRevData, METH_VARARGS },
	 { (char *)"newPCSupersede", _wrap_newPCSupersede, METH_VARARGS },
	 { (char *)"newPPCSupersede", _wrap_newPPCSupersede, METH_VARARGS },
	 { (char *)"newPCJournal", _wrap_newPCJournal, METH_VARARGS },
	 { (char *)"newPPCJournal", _wrap_newPPCJournal, METH_VARARGS },
	 { (char *)"newPCRemark", _wrap_newPCRemark, METH_VARARGS },
	 { (char *)"newPPCRemark", _wrap_newPPCRemark, METH_VARARGS },
	 { (char *)"newPCMMDBTitle", _wrap_newPCMMDBTitle, METH_VARARGS },
	 { (char *)"newPPCMMDBTitle", _wrap_newPPCMMDBTitle, METH_VARARGS },
	 { (char *)"newPCContainerClass", _wrap_newPCContainerClass, METH_VARARGS },
	 { (char *)"newPPCContainerClass", _wrap_newPPCContainerClass, METH_VARARGS },
	 { (char *)"newPCContString", _wrap_newPCContString, METH_VARARGS },
	 { (char *)"newPPCContString", _wrap_newPPCContString, METH_VARARGS },
	 { (char *)"newPCClassContainer", _wrap_newPCClassContainer, METH_VARARGS },
	 { (char *)"newPPCClassContainer", _wrap_newPPCClassContainer, METH_VARARGS },
	 { (char *)"newPCAtomPath", _wrap_newPCAtomPath, METH_VARARGS },
	 { (char *)"newPPCAtomPath", _wrap_newPPCAtomPath, METH_VARARGS },
	 { (char *)"newPCHetCompound", _wrap_newPCHetCompound, METH_VARARGS },
	 { (char *)"newPPCHetCompound", _wrap_newPPCHetCompound, METH_VARARGS },
	 { (char *)"newPSContact", _wrap_newPSContact, METH_VARARGS },
	 { (char *)"newpmat44", _wrap_newpmat44, METH_VARARGS },
	 { NULL, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_CModelTo_p_CProModel(void *x) {
    return (void *)((CProModel *)  ((CModel *) x));
}
static void *_p_CSeqAdvTo_p_CContainerChain(void *x) {
    return (void *)((CContainerChain *)  ((CSeqAdv *) x));
}
static void *_p_CHetRecTo_p_CContainerChain(void *x) {
    return (void *)((CContainerChain *)  ((CHetRec *) x));
}
static void *_p_CModResTo_p_CContainerChain(void *x) {
    return (void *)((CContainerChain *)  ((CModRes *) x));
}
static void *_p_CDBReferenceTo_p_CContainerChain(void *x) {
    return (void *)((CContainerChain *)  ((CDBReference *) x));
}
static void *_p_CGenSymTo_p_CSymOps(void *x) {
    return (void *)((CSymOps *)  ((CGenSym *) x));
}
static void *_p_CSeqAdvTo_p_CContainerClass(void *x) {
    return (void *)((CContainerClass *) (CContainerChain *) ((CSeqAdv *) x));
}
static void *_p_CHetRecTo_p_CContainerClass(void *x) {
    return (void *)((CContainerClass *) (CContainerChain *) ((CHetRec *) x));
}
static void *_p_CModResTo_p_CContainerClass(void *x) {
    return (void *)((CContainerClass *) (CContainerChain *) ((CModRes *) x));
}
static void *_p_CHelixTo_p_CContainerClass(void *x) {
    return (void *)((CContainerClass *)  ((CHelix *) x));
}
static void *_p_CContStringTo_p_CContainerClass(void *x) {
    return (void *)((CContainerClass *)  ((CContString *) x));
}
static void *_p_CDBReferenceTo_p_CContainerClass(void *x) {
    return (void *)((CContainerClass *) (CContainerChain *) ((CDBReference *) x));
}
static void *_p_CTurnTo_p_CContainerClass(void *x) {
    return (void *)((CContainerClass *)  ((CTurn *) x));
}
static void *_p_CContainerChainTo_p_CContainerClass(void *x) {
    return (void *)((CContainerClass *)  ((CContainerChain *) x));
}
static void *_p_CMMDBCoorManagerTo_p_CMMDBFile(void *x) {
    return (void *)((CMMDBFile *)  ((CMMDBCoorManager *) x));
}
static void *_p_CMMDBSelManagerTo_p_CMMDBFile(void *x) {
    return (void *)((CMMDBFile *) (CMMDBCoorManager *) ((CMMDBSelManager *) x));
}
static void *_p_CMMDBBondManagerTo_p_CMMDBFile(void *x) {
    return (void *)((CMMDBFile *) (CMMDBCoorManager *)(CMMDBSelManager *) ((CMMDBBondManager *) x));
}
static void *_p_CMMDBManagerTo_p_CMMDBFile(void *x) {
    return (void *)((CMMDBFile *) (CMMDBCoorManager *)(CMMDBSelManager *)(CMMDBBondManager *) ((CMMDBManager *) x));
}
static void *_p_p_intaTo_p_p_int(void *x) {
    return (void *)((int **)  ((inta **) x));
}
static void *_p_p_intpTo_p_p_int(void *x) {
    return (void *)((int **)  ((intp **) x));
}
static void *_p_p_p_intaTo_p_p_p_int(void *x) {
    return (void *)((int ***)  ((inta ***) x));
}
static void *_p_p_p_intpTo_p_p_p_int(void *x) {
    return (void *)((int ***)  ((intp ***) x));
}
static void *_p_p_p_p_intaTo_p_p_p_p_int(void *x) {
    return (void *)((int ****)  ((inta ****) x));
}
static void *_p_p_p_p_intpTo_p_p_p_p_int(void *x) {
    return (void *)((int ****)  ((intp ****) x));
}
static void *_p_intaTo_p_int(void *x) {
    return (void *)((int *)  ((inta *) x));
}
static void *_p_intpTo_p_int(void *x) {
    return (void *)((int *)  ((intp *) x));
}
static void *_p_CProModelTo_p_CUDData(void *x) {
    return (void *)((CUDData *)  ((CProModel *) x));
}
static void *_p_CResidueTo_p_CUDData(void *x) {
    return (void *)((CUDData *)  ((CResidue *) x));
}
static void *_p_CMMDBFileTo_p_CUDData(void *x) {
    return (void *)((CUDData *)  ((CMMDBFile *) x));
}
static void *_p_CChainTo_p_CUDData(void *x) {
    return (void *)((CUDData *)  ((CChain *) x));
}
static void *_p_CMMDBCoorManagerTo_p_CUDData(void *x) {
    return (void *)((CUDData *) (CMMDBFile *) ((CMMDBCoorManager *) x));
}
static void *_p_CMMDBSelManagerTo_p_CUDData(void *x) {
    return (void *)((CUDData *) (CMMDBFile *)(CMMDBCoorManager *) ((CMMDBSelManager *) x));
}
static void *_p_CMMDBBondManagerTo_p_CUDData(void *x) {
    return (void *)((CUDData *) (CMMDBFile *)(CMMDBCoorManager *)(CMMDBSelManager *) ((CMMDBBondManager *) x));
}
static void *_p_CMMDBManagerTo_p_CUDData(void *x) {
    return (void *)((CUDData *) (CMMDBFile *)(CMMDBCoorManager *)(CMMDBSelManager *)(CMMDBBondManager *) ((CMMDBManager *) x));
}
static void *_p_CModelTo_p_CUDData(void *x) {
    return (void *)((CUDData *) (CProModel *) ((CModel *) x));
}
static void *_p_CAtomTo_p_CUDData(void *x) {
    return (void *)((CUDData *)  ((CAtom *) x));
}
static void *_p_CChainContainerTo_p_CClassContainer(void *x) {
    return (void *)((CClassContainer *)  ((CChainContainer *) x));
}
static void *_p_CSSContainerTo_p_CClassContainer(void *x) {
    return (void *)((CClassContainer *)  ((CSSContainer *) x));
}
static void *_p_CAtomPathTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CAtomPath *) x));
}
static void *_p_CSheetTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CSheet *) x));
}
static void *_p_CEdgeTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CEdge *) x));
}
static void *_p_CGraphTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CGraph *) x));
}
static void *_p_CSBIndexTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CSBIndex *) x));
}
static void *_p_CUDDataTo_p_CStream(void *x) {
    return (void *)((CStream *) (CMask *) ((CUDData *) x));
}
static void *_p_CVertexTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CVertex *) x));
}
static void *_p_CDBReferenceTo_p_CStream(void *x) {
    return (void *)((CStream *) (CContainerClass *)(CContainerChain *) ((CDBReference *) x));
}
static void *_p_CModelTo_p_CStream(void *x) {
    return (void *)((CStream *) (CMask *)(CUDData *)(CProModel *) ((CModel *) x));
}
static void *_p_CAlignmentTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CAlignment *) x));
}
static void *_p_CSBAtomTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CSBAtom *) x));
}
static void *_p_CMMCIFFileTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CMMCIFFile *) x));
}
static void *_p_CGenSymTo_p_CStream(void *x) {
    return (void *)((CStream *) (CSymOps *) ((CGenSym *) x));
}
static void *_p_CHetRecTo_p_CStream(void *x) {
    return (void *)((CStream *) (CContainerClass *)(CContainerChain *) ((CHetRec *) x));
}
static void *_p_CStrandTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CStrand *) x));
}
static void *_p_CHetCompoundsTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CHetCompounds *) x));
}
static void *_p_CSBBondTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CSBBond *) x));
}
static void *_p_CResidueTo_p_CStream(void *x) {
    return (void *)((CStream *) (CMask *)(CUDData *) ((CResidue *) x));
}
static void *_p_CModResTo_p_CStream(void *x) {
    return (void *)((CStream *) (CContainerClass *)(CContainerChain *) ((CModRes *) x));
}
static void *_p_CMMCIFDataTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CMMCIFData *) x));
}
static void *_p_CChainTo_p_CStream(void *x) {
    return (void *)((CStream *) (CMask *)(CUDData *) ((CChain *) x));
}
static void *_p_CMMCIFStructTo_p_CStream(void *x) {
    return (void *)((CStream *) (CMMCIFCategory *) ((CMMCIFStruct *) x));
}
static void *_p_CMatchTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CMatch *) x));
}
static void *_p_CGraphMatchTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CGraphMatch *) x));
}
static void *_p_CSBStructureTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CSBStructure *) x));
}
static void *_p_CContStringTo_p_CStream(void *x) {
    return (void *)((CStream *) (CContainerClass *) ((CContString *) x));
}
static void *_p_CContainerChainTo_p_CStream(void *x) {
    return (void *)((CStream *) (CContainerClass *) ((CContainerChain *) x));
}
static void *_p_CSBAngleTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CSBAngle *) x));
}
static void *_p_CSeqAdvTo_p_CStream(void *x) {
    return (void *)((CStream *) (CContainerClass *)(CContainerChain *) ((CSeqAdv *) x));
}
static void *_p_CAtomTo_p_CStream(void *x) {
    return (void *)((CStream *) (CMask *)(CUDData *) ((CAtom *) x));
}
static void *_p_CSBTorsionTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CSBTorsion *) x));
}
static void *_p_CMaskTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CMask *) x));
}
static void *_p_CAlignment1To_p_CStream(void *x) {
    return (void *)((CStream *)  ((CAlignment1 *) x));
}
static void *_p_CSymOpsTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CSymOps *) x));
}
static void *_p_CTurnTo_p_CStream(void *x) {
    return (void *)((CStream *) (CContainerClass *) ((CTurn *) x));
}
static void *_p_CMContactTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CMContact *) x));
}
static void *_p_CSSContainerTo_p_CStream(void *x) {
    return (void *)((CStream *) (CClassContainer *) ((CSSContainer *) x));
}
static void *_p_CClassContainerTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CClassContainer *) x));
}
static void *_p_CChainContainerTo_p_CStream(void *x) {
    return (void *)((CStream *) (CClassContainer *) ((CChainContainer *) x));
}
static void *_p_CHelixTo_p_CStream(void *x) {
    return (void *)((CStream *) (CContainerClass *) ((CHelix *) x));
}
static void *_p_CUDRegisterTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CUDRegister *) x));
}
static void *_p_CContainerClassTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CContainerClass *) x));
}
static void *_p_CSeqResTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CSeqRes *) x));
}
static void *_p_CMMCIFCategoryTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CMMCIFCategory *) x));
}
static void *_p_CSheetsTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CSheets *) x));
}
static void *_p_CHetCompoundTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CHetCompound *) x));
}
static void *_p_CMMCIFLoopTo_p_CStream(void *x) {
    return (void *)((CStream *) (CMMCIFCategory *) ((CMMCIFLoop *) x));
}
static void *_p_CSymOpTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CSymOp *) x));
}
static void *_p_CProModelTo_p_CStream(void *x) {
    return (void *)((CStream *) (CMask *)(CUDData *) ((CProModel *) x));
}
static void *_p_CMMDBFileTo_p_CStream(void *x) {
    return (void *)((CStream *) (CMask *)(CUDData *) ((CMMDBFile *) x));
}
static void *_p_CAlignParamsTo_p_CStream(void *x) {
    return (void *)((CStream *)  ((CAlignParams *) x));
}
static void *_p_CMMDBManagerTo_p_CStream(void *x) {
    return (void *)((CStream *) (CMask *)(CUDData *)(CMMDBFile *)(CMMDBCoorManager *)(CMMDBSelManager *)(CMMDBBondManager *) ((CMMDBManager *) x));
}
static void *_p_CMMDBBondManagerTo_p_CStream(void *x) {
    return (void *)((CStream *) (CMask *)(CUDData *)(CMMDBFile *)(CMMDBCoorManager *)(CMMDBSelManager *) ((CMMDBBondManager *) x));
}
static void *_p_CMMDBSelManagerTo_p_CStream(void *x) {
    return (void *)((CStream *) (CMask *)(CUDData *)(CMMDBFile *)(CMMDBCoorManager *) ((CMMDBSelManager *) x));
}
static void *_p_CMMDBCoorManagerTo_p_CStream(void *x) {
    return (void *)((CStream *) (CMask *)(CUDData *)(CMMDBFile *) ((CMMDBCoorManager *) x));
}
static void *_p_p_CAtomPathTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CAtomPath **) x));
}
static void *_p_p_CSheetTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CSheet **) x));
}
static void *_p_p_CEdgeTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CEdge **) x));
}
static void *_p_p_CGraphTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CGraph **) x));
}
static void *_p_p_CSBIndexTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CSBIndex **) x));
}
static void *_p_p_CUDDataTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CMask *) ((CUDData **) x));
}
static void *_p_p_CVertexTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CVertex **) x));
}
static void *_p_p_CDBReferenceTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CContainerClass *)(CContainerChain *) ((CDBReference **) x));
}
static void *_p_p_CModelTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CMask *)(CUDData *)(CProModel *) ((CModel **) x));
}
static void *_p_p_CAlignmentTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CAlignment **) x));
}
static void *_p_p_CSBAtomTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CSBAtom **) x));
}
static void *_p_p_CMMCIFFileTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CMMCIFFile **) x));
}
static void *_p_p_CGenSymTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CSymOps *) ((CGenSym **) x));
}
static void *_p_p_CHetRecTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CContainerClass *)(CContainerChain *) ((CHetRec **) x));
}
static void *_p_p_CStrandTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CStrand **) x));
}
static void *_p_p_CHetCompoundsTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CHetCompounds **) x));
}
static void *_p_p_CSBBondTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CSBBond **) x));
}
static void *_p_p_CResidueTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CMask *)(CUDData *) ((CResidue **) x));
}
static void *_p_p_CModResTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CContainerClass *)(CContainerChain *) ((CModRes **) x));
}
static void *_p_p_CMMCIFDataTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CMMCIFData **) x));
}
static void *_p_p_CChainTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CMask *)(CUDData *) ((CChain **) x));
}
static void *_p_p_CMMCIFStructTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CMMCIFCategory *) ((CMMCIFStruct **) x));
}
static void *_p_p_CMatchTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CMatch **) x));
}
static void *_p_p_CGraphMatchTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CGraphMatch **) x));
}
static void *_p_p_CSBStructureTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CSBStructure **) x));
}
static void *_p_p_CContStringTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CContainerClass *) ((CContString **) x));
}
static void *_p_p_CContainerChainTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CContainerClass *) ((CContainerChain **) x));
}
static void *_p_p_CSBAngleTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CSBAngle **) x));
}
static void *_p_p_CSeqAdvTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CContainerClass *)(CContainerChain *) ((CSeqAdv **) x));
}
static void *_p_p_CAtomTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CMask *)(CUDData *) ((CAtom **) x));
}
static void *_p_p_CSBTorsionTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CSBTorsion **) x));
}
static void *_p_p_CMaskTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CMask **) x));
}
static void *_p_p_CAlignment1To_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CAlignment1 **) x));
}
static void *_p_p_CSymOpsTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CSymOps **) x));
}
static void *_p_p_CTurnTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CContainerClass *) ((CTurn **) x));
}
static void *_p_p_CMContactTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CMContact **) x));
}
static void *_p_p_CSSContainerTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CClassContainer *) ((CSSContainer **) x));
}
static void *_p_p_CClassContainerTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CClassContainer **) x));
}
static void *_p_p_CChainContainerTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CClassContainer *) ((CChainContainer **) x));
}
static void *_p_p_CHelixTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CContainerClass *) ((CHelix **) x));
}
static void *_p_p_CUDRegisterTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CUDRegister **) x));
}
static void *_p_p_CContainerClassTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CContainerClass **) x));
}
static void *_p_p_CSeqResTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CSeqRes **) x));
}
static void *_p_p_CMMCIFCategoryTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CMMCIFCategory **) x));
}
static void *_p_p_CSheetsTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CSheets **) x));
}
static void *_p_p_CHetCompoundTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CHetCompound **) x));
}
static void *_p_p_CMMCIFLoopTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CMMCIFCategory *) ((CMMCIFLoop **) x));
}
static void *_p_p_CSymOpTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CSymOp **) x));
}
static void *_p_p_CProModelTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CMask *)(CUDData *) ((CProModel **) x));
}
static void *_p_p_CMMDBFileTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CMask *)(CUDData *) ((CMMDBFile **) x));
}
static void *_p_p_CAlignParamsTo_p_p_CStream(void *x) {
    return (void *)((CStream **)  ((CAlignParams **) x));
}
static void *_p_p_CMMDBManagerTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CMask *)(CUDData *)(CMMDBFile *)(CMMDBCoorManager *)(CMMDBSelManager *)(CMMDBBondManager *) ((CMMDBManager **) x));
}
static void *_p_p_CMMDBBondManagerTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CMask *)(CUDData *)(CMMDBFile *)(CMMDBCoorManager *)(CMMDBSelManager *) ((CMMDBBondManager **) x));
}
static void *_p_p_CMMDBSelManagerTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CMask *)(CUDData *)(CMMDBFile *)(CMMDBCoorManager *) ((CMMDBSelManager **) x));
}
static void *_p_p_CMMDBCoorManagerTo_p_p_CStream(void *x) {
    return (void *)((CStream **) (CMask *)(CUDData *)(CMMDBFile *) ((CMMDBCoorManager **) x));
}
static void *_p_CProModelTo_p_CMask(void *x) {
    return (void *)((CMask *) (CUDData *) ((CProModel *) x));
}
static void *_p_CResidueTo_p_CMask(void *x) {
    return (void *)((CMask *) (CUDData *) ((CResidue *) x));
}
static void *_p_CMMDBFileTo_p_CMask(void *x) {
    return (void *)((CMask *) (CUDData *) ((CMMDBFile *) x));
}
static void *_p_CChainTo_p_CMask(void *x) {
    return (void *)((CMask *) (CUDData *) ((CChain *) x));
}
static void *_p_CMMDBCoorManagerTo_p_CMask(void *x) {
    return (void *)((CMask *) (CUDData *)(CMMDBFile *) ((CMMDBCoorManager *) x));
}
static void *_p_CMMDBSelManagerTo_p_CMask(void *x) {
    return (void *)((CMask *) (CUDData *)(CMMDBFile *)(CMMDBCoorManager *) ((CMMDBSelManager *) x));
}
static void *_p_CMMDBBondManagerTo_p_CMask(void *x) {
    return (void *)((CMask *) (CUDData *)(CMMDBFile *)(CMMDBCoorManager *)(CMMDBSelManager *) ((CMMDBBondManager *) x));
}
static void *_p_CMMDBManagerTo_p_CMask(void *x) {
    return (void *)((CMask *) (CUDData *)(CMMDBFile *)(CMMDBCoorManager *)(CMMDBSelManager *)(CMMDBBondManager *) ((CMMDBManager *) x));
}
static void *_p_CModelTo_p_CMask(void *x) {
    return (void *)((CMask *) (CUDData *)(CProModel *) ((CModel *) x));
}
static void *_p_CUDDataTo_p_CMask(void *x) {
    return (void *)((CMask *)  ((CUDData *) x));
}
static void *_p_CAtomTo_p_CMask(void *x) {
    return (void *)((CMask *) (CUDData *) ((CAtom *) x));
}
static void *_p_a_4__a_4__doubleaTo_p_a_4__a_4__double(void *x) {
    return (void *)((double (*)[4][4])  ((doublea (*)[4][4]) x));
}
static void *_p_a_4__a_4__doublepTo_p_a_4__a_4__double(void *x) {
    return (void *)((double (*)[4][4])  ((doublep (*)[4][4]) x));
}
static void *_p_a_3__doubleaTo_p_a_3__double(void *x) {
    return (void *)((double (*)[3])  ((doublea (*)[3]) x));
}
static void *_p_a_3__doublepTo_p_a_3__double(void *x) {
    return (void *)((double (*)[3])  ((doublep (*)[3]) x));
}
static void *_p_p_p_doubleaTo_p_p_p_double(void *x) {
    return (void *)((double ***)  ((doublea ***) x));
}
static void *_p_p_p_doublepTo_p_p_p_double(void *x) {
    return (void *)((double ***)  ((doublep ***) x));
}
static void *_p_p_doubleaTo_p_p_double(void *x) {
    return (void *)((double **)  ((doublea **) x));
}
static void *_p_p_doublepTo_p_p_double(void *x) {
    return (void *)((double **)  ((doublep **) x));
}
static void *_p_doubleaTo_p_double(void *x) {
    return (void *)((double *)  ((doublea *) x));
}
static void *_p_doublepTo_p_double(void *x) {
    return (void *)((double *)  ((doublep *) x));
}
static void *_p_p_p_p_doubleaTo_p_p_p_p_double(void *x) {
    return (void *)((double ****)  ((doublea ****) x));
}
static void *_p_p_p_p_doublepTo_p_p_p_p_double(void *x) {
    return (void *)((double ****)  ((doublep ****) x));
}
static void *_p_a_4__doubleaTo_p_a_4__double(void *x) {
    return (void *)((double (*)[4])  ((doublea (*)[4]) x));
}
static void *_p_a_4__doublepTo_p_a_4__double(void *x) {
    return (void *)((double (*)[4])  ((doublep (*)[4]) x));
}
static void *_p_a_3__a_3__doubleaTo_p_a_3__a_3__double(void *x) {
    return (void *)((double (*)[3][3])  ((doublea (*)[3][3]) x));
}
static void *_p_a_3__a_3__doublepTo_p_a_3__a_3__double(void *x) {
    return (void *)((double (*)[3][3])  ((doublep (*)[3][3]) x));
}
static void *_p_CMMDBSelManagerTo_p_CMMDBCoorManager(void *x) {
    return (void *)((CMMDBCoorManager *)  ((CMMDBSelManager *) x));
}
static void *_p_CMMDBBondManagerTo_p_CMMDBCoorManager(void *x) {
    return (void *)((CMMDBCoorManager *) (CMMDBSelManager *) ((CMMDBBondManager *) x));
}
static void *_p_CMMDBManagerTo_p_CMMDBCoorManager(void *x) {
    return (void *)((CMMDBCoorManager *) (CMMDBSelManager *)(CMMDBBondManager *) ((CMMDBManager *) x));
}
static void *_p_CMMDBBondManagerTo_p_CMMDBSelManager(void *x) {
    return (void *)((CMMDBSelManager *)  ((CMMDBBondManager *) x));
}
static void *_p_CMMDBManagerTo_p_CMMDBSelManager(void *x) {
    return (void *)((CMMDBSelManager *) (CMMDBBondManager *) ((CMMDBManager *) x));
}
static void *_p_CMMDBManagerTo_p_CMMDBBondManager(void *x) {
    return (void *)((CMMDBBondManager *)  ((CMMDBManager *) x));
}
static void *_p_CMMCIFStructTo_p_CMMCIFCategory(void *x) {
    return (void *)((CMMCIFCategory *)  ((CMMCIFStruct *) x));
}
static void *_p_CMMCIFLoopTo_p_CMMCIFCategory(void *x) {
    return (void *)((CMMCIFCategory *)  ((CMMCIFLoop *) x));
}
static swig_type_info _swigt__p_void[] = {{"_p_void", 0, "void *", 0},{"_p_void"},{0}};
static swig_type_info _swigt__p_CChain[] = {{"_p_CChain", 0, "CChain *", 0},{"_PCChain"},{"_p_CChain"},{0}};
static swig_type_info _swigt__p_CAlignment[] = {{"_p_CAlignment", 0, "CAlignment *", 0},{"_p_CAlignment"},{0}};
static swig_type_info _swigt__PCProModel[] = {{"_PCProModel", 0, "PCProModel", 0},{"_PCProModel"},{"_p_CProModel"},{"_PCModel", _p_CModelTo_p_CProModel},{"_p_CModel", _p_CModelTo_p_CProModel},{0}};
static swig_type_info _swigt__p_CProModel[] = {{"_p_CProModel", 0, "CProModel *", 0},{"_p_CProModel"},{"_PCProModel"},{"_PCModel", _p_CModelTo_p_CProModel},{"_p_CModel", _p_CModelTo_p_CProModel},{0}};
static swig_type_info _swigt__p_CContainerChain[] = {{"_p_CContainerChain", 0, "CContainerChain *", 0},{"_p_CSeqAdv", _p_CSeqAdvTo_p_CContainerChain},{"_PCSeqAdv", _p_CSeqAdvTo_p_CContainerChain},{"_p_CHetRec", _p_CHetRecTo_p_CContainerChain},{"_PCHetRec", _p_CHetRecTo_p_CContainerChain},{"_p_CModRes", _p_CModResTo_p_CContainerChain},{"_PCModRes", _p_CModResTo_p_CContainerChain},{"_p_CDBReference", _p_CDBReferenceTo_p_CContainerChain},{"_PCDBReference", _p_CDBReferenceTo_p_CContainerChain},{"_p_CContainerChain"},{"_PCContainerChain"},{0}};
static swig_type_info _swigt__p_PPCProModel[] = {{"_p_PPCProModel", 0, "PPCProModel *", 0},{"_p_PPCProModel"},{0}};
static swig_type_info _swigt__PCContainerChain[] = {{"_PCContainerChain", 0, "PCContainerChain", 0},{"_p_CSeqAdv", _p_CSeqAdvTo_p_CContainerChain},{"_PCSeqAdv", _p_CSeqAdvTo_p_CContainerChain},{"_p_CHetRec", _p_CHetRecTo_p_CContainerChain},{"_PCHetRec", _p_CHetRecTo_p_CContainerChain},{"_p_CModRes", _p_CModResTo_p_CContainerChain},{"_PCModRes", _p_CModResTo_p_CContainerChain},{"_p_CDBReference", _p_CDBReferenceTo_p_CContainerChain},{"_PCDBReference", _p_CDBReferenceTo_p_CContainerChain},{"_PCContainerChain"},{"_p_CContainerChain"},{0}};
static swig_type_info _swigt__p_PPCContainerChain[] = {{"_p_PPCContainerChain", 0, "PPCContainerChain *", 0},{"_p_PPCContainerChain"},{0}};
static swig_type_info _swigt__p_CContString[] = {{"_p_CContString", 0, "CContString *", 0},{"_p_CContString"},{"_PCContString"},{0}};
static swig_type_info _swigt__PCContString[] = {{"_PCContString", 0, "PCContString", 0},{"_PCContString"},{"_p_CContString"},{0}};
static swig_type_info _swigt__p_PPCContString[] = {{"_p_PPCContString", 0, "PPCContString *", 0},{"_p_PPCContString"},{0}};
static swig_type_info _swigt__PBFGSMinFunc[] = {{"_PBFGSMinFunc", 0, "PBFGSMinFunc", 0},{"_PBFGSMinFunc"},{0}};
static swig_type_info _swigt__p_CSBAngle[] = {{"_p_CSBAngle", 0, "CSBAngle *", 0},{"_p_CSBAngle"},{"_PCSBAngle"},{0}};
static swig_type_info _swigt__PCSBAngle[] = {{"_PCSBAngle", 0, "PCSBAngle", 0},{"_PCSBAngle"},{"_p_CSBAngle"},{0}};
static swig_type_info _swigt__p_PPCSBAngle[] = {{"_p_PPCSBAngle", 0, "PPCSBAngle *", 0},{"_p_PPCSBAngle"},{0}};
static swig_type_info _swigt__p_PCMMDBTitle[] = {{"_p_PCMMDBTitle", 0, "PCMMDBTitle *", 0},{"_p_PCMMDBTitle"},{0}};
static swig_type_info _swigt__p_PPCMMDBTitle[] = {{"_p_PPCMMDBTitle", 0, "PPCMMDBTitle *", 0},{"_p_PPCMMDBTitle"},{0}};
static swig_type_info _swigt__p_CSymOps[] = {{"_p_CSymOps", 0, "CSymOps *", 0},{"_p_CGenSym", _p_CGenSymTo_p_CSymOps},{"_PCGenSym", _p_CGenSymTo_p_CSymOps},{"_p_CSymOps"},{"_PCSymOps"},{0}};
static swig_type_info _swigt__PCSymOps[] = {{"_PCSymOps", 0, "PCSymOps", 0},{"_p_CGenSym", _p_CGenSymTo_p_CSymOps},{"_PCGenSym", _p_CGenSymTo_p_CSymOps},{"_PCSymOps"},{"_p_CSymOps"},{0}};
static swig_type_info _swigt__p_PPCSymOps[] = {{"_p_PPCSymOps", 0, "PPCSymOps *", 0},{"_p_PPCSymOps"},{0}};
static swig_type_info _swigt__p_doublea[] = {{"_p_doublea", 0, "doublea *", 0},{"_p_doublea"},{0}};
static swig_type_info _swigt__p_CModel[] = {{"_p_CModel", 0, "CModel *", 0},{"_PCModel"},{"_p_CModel"},{0}};
static swig_type_info _swigt__p_CSheet[] = {{"_p_CSheet", 0, "CSheet *", 0},{"_PCSheet"},{"_p_CSheet"},{0}};
static swig_type_info _swigt__PCFile[] = {{"_PCFile", 0, "PCFile", 0},{"_PCFile"},{"_p_CFile"},{0}};
static swig_type_info _swigt__PAtomName[] = {{"_PAtomName", 0, "PAtomName", 0},{"_PAtomName"},{"_PResName"},{0}};
static swig_type_info _swigt__p_PAtomName[] = {{"_p_PAtomName", 0, "PAtomName &", 0},{"_p_PElement"},{"_p_PAtomName"},{"_p_PAltLoc"},{0}};
static swig_type_info _swigt__p_CFile[] = {{"_p_CFile", 0, "RCFile", 0},{"_PCFile"},{"_p_CFile"},{0}};
static swig_type_info _swigt__p_CResidue[] = {{"_p_CResidue", 0, "CResidue *", 0},{"_p_CResidue"},{"_PCResidue"},{0}};
static swig_type_info _swigt__p_PPCResidue[] = {{"_p_PPCResidue", 0, "PPCResidue *", 0},{"_p_PPCResidue"},{0}};
static swig_type_info _swigt__PCResidue[] = {{"_PCResidue", 0, "PCResidue", 0},{"_PCResidue"},{"_p_CResidue"},{0}};
static swig_type_info _swigt__PCSheets[] = {{"_PCSheets", 0, "PCSheets", 0},{"_PCSheets"},{"_p_CSheets"},{0}};
static swig_type_info _swigt__p_CSheets[] = {{"_p_CSheets", 0, "CSheets *", 0},{"_p_CSheets"},{"_PCSheets"},{0}};
static swig_type_info _swigt__p_PPCSheets[] = {{"_p_PPCSheets", 0, "PPCSheets *", 0},{"_p_PPCSheets"},{0}};
static swig_type_info _swigt__PCVertex[] = {{"_PCVertex", 0, "PCVertex", 0},{"_PCVertex"},{"_p_CVertex"},{0}};
static swig_type_info _swigt__p_CVertex[] = {{"_p_CVertex", 0, "CVertex *", 0},{"_p_CVertex"},{"_PCVertex"},{0}};
static swig_type_info _swigt__p_CContainerClass[] = {{"_p_CContainerClass", 0, "CContainerClass *", 0},{"_PCContainerChain", _p_CContainerChainTo_p_CContainerClass},{"_p_CContainerChain", _p_CContainerChainTo_p_CContainerClass},{"_PCDBReference", _p_CDBReferenceTo_p_CContainerClass},{"_p_CDBReference", _p_CDBReferenceTo_p_CContainerClass},{"_PCSeqAdv", _p_CSeqAdvTo_p_CContainerClass},{"_p_CSeqAdv", _p_CSeqAdvTo_p_CContainerClass},{"_PCContainerClass"},{"_p_CContainerClass"},{"_PCHetRec", _p_CHetRecTo_p_CContainerClass},{"_p_CHetRec", _p_CHetRecTo_p_CContainerClass},{"_p_CHelix", _p_CHelixTo_p_CContainerClass},{"_PCContString", _p_CContStringTo_p_CContainerClass},{"_p_CContString", _p_CContStringTo_p_CContainerClass},{"_PCHelix", _p_CHelixTo_p_CContainerClass},{"_p_CTurn", _p_CTurnTo_p_CContainerClass},{"_PCTurn", _p_CTurnTo_p_CContainerClass},{"_PCModRes", _p_CModResTo_p_CContainerClass},{"_p_CModRes", _p_CModResTo_p_CContainerClass},{0}};
static swig_type_info _swigt__PCContainerClass[] = {{"_PCContainerClass", 0, "PCContainerClass", 0},{"_PCContainerChain", _p_CContainerChainTo_p_CContainerClass},{"_p_CContainerChain", _p_CContainerChainTo_p_CContainerClass},{"_PCDBReference", _p_CDBReferenceTo_p_CContainerClass},{"_p_CDBReference", _p_CDBReferenceTo_p_CContainerClass},{"_PCSeqAdv", _p_CSeqAdvTo_p_CContainerClass},{"_p_CSeqAdv", _p_CSeqAdvTo_p_CContainerClass},{"_p_CContainerClass"},{"_PCContainerClass"},{"_PCHetRec", _p_CHetRecTo_p_CContainerClass},{"_p_CHetRec", _p_CHetRecTo_p_CContainerClass},{"_p_CHelix", _p_CHelixTo_p_CContainerClass},{"_PCContString", _p_CContStringTo_p_CContainerClass},{"_p_CContString", _p_CContStringTo_p_CContainerClass},{"_PCHelix", _p_CHelixTo_p_CContainerClass},{"_p_CTurn", _p_CTurnTo_p_CContainerClass},{"_PCTurn", _p_CTurnTo_p_CContainerClass},{"_PCModRes", _p_CModResTo_p_CContainerClass},{"_p_CModRes", _p_CModResTo_p_CContainerClass},{0}};
static swig_type_info _swigt__p_PPCVertex[] = {{"_p_PPCVertex", 0, "PPCVertex *", 0},{"_p_PPCVertex"},{0}};
static swig_type_info _swigt__p_PPCContainerClass[] = {{"_p_PPCContainerClass", 0, "PPCContainerClass *", 0},{"_p_PPCContainerClass"},{0}};
static swig_type_info _swigt__PCTurn[] = {{"_PCTurn", 0, "PCTurn", 0},{"_PCTurn"},{"_p_CTurn"},{0}};
static swig_type_info _swigt__p_CTurn[] = {{"_p_CTurn", 0, "CTurn *", 0},{"_PCTurn"},{"_p_CTurn"},{0}};
static swig_type_info _swigt__p_doublep[] = {{"_p_doublep", 0, "doublep *", 0},{"_p_doublep"},{0}};
static swig_type_info _swigt__PCMMCIFFile[] = {{"_PCMMCIFFile", 0, "PCMMCIFFile", 0},{"_PCMMCIFFile"},{"_p_CMMCIFFile"},{0}};
static swig_type_info _swigt__p_CMMCIFFile[] = {{"_p_CMMCIFFile", 0, "CMMCIFFile *", 0},{"_p_CMMCIFFile"},{"_PCMMCIFFile"},{0}};
static swig_type_info _swigt__PCMMDBFile[] = {{"_PCMMDBFile", 0, "PCMMDBFile", 0},{"_PCMMDBFile"},{"_p_CMMDBFile"},{"_p_CMMDBCoorManager", _p_CMMDBCoorManagerTo_p_CMMDBFile},{"_PCMMDBCoorManager", _p_CMMDBCoorManagerTo_p_CMMDBFile},{"_p_CMMDBSelManager", _p_CMMDBSelManagerTo_p_CMMDBFile},{"_PCMMDBSelManager", _p_CMMDBSelManagerTo_p_CMMDBFile},{"_p_CMMDBBondManager", _p_CMMDBBondManagerTo_p_CMMDBFile},{"_p_CMMDBManager", _p_CMMDBManagerTo_p_CMMDBFile},{"_PCMMDBManager", _p_CMMDBManagerTo_p_CMMDBFile},{0}};
static swig_type_info _swigt__p_CMMDBFile[] = {{"_p_CMMDBFile", 0, "CMMDBFile *", 0},{"_p_CMMDBFile"},{"_PCMMDBFile"},{"_p_CMMDBCoorManager", _p_CMMDBCoorManagerTo_p_CMMDBFile},{"_PCMMDBCoorManager", _p_CMMDBCoorManagerTo_p_CMMDBFile},{"_p_CMMDBSelManager", _p_CMMDBSelManagerTo_p_CMMDBFile},{"_PCMMDBSelManager", _p_CMMDBSelManagerTo_p_CMMDBFile},{"_p_CMMDBBondManager", _p_CMMDBBondManagerTo_p_CMMDBFile},{"_p_CMMDBManager", _p_CMMDBManagerTo_p_CMMDBFile},{"_PCMMDBManager", _p_CMMDBManagerTo_p_CMMDBFile},{0}};
static swig_type_info _swigt__p_pstr[] = {{"_p_pstr", 0, "pstr const [6]", 0},{"_psvector"},{"_p_pstr"},{0}};
static swig_type_info _swigt__PCModRes[] = {{"_PCModRes", 0, "PCModRes", 0},{"_PCModRes"},{"_p_CModRes"},{0}};
static swig_type_info _swigt__p_CModRes[] = {{"_p_CModRes", 0, "CModRes *", 0},{"_p_CModRes"},{"_PCModRes"},{0}};
static swig_type_info _swigt__p_PPCModRes[] = {{"_p_PPCModRes", 0, "PPCModRes *", 0},{"_p_PPCModRes"},{0}};
static swig_type_info _swigt__p_PSContact[] = {{"_p_PSContact", 0, "PSContact *", 0},{"_p_PSContact"},{0}};
static swig_type_info _swigt__p_PPCMContact[] = {{"_p_PPCMContact", 0, "PPCMContact *", 0},{"_p_PPCMContact"},{0}};
static swig_type_info _swigt__p_CMContact[] = {{"_p_CMContact", 0, "CMContact *", 0},{"_p_CMContact"},{0}};
static swig_type_info _swigt__p_SContact[] = {{"_p_SContact", 0, "SContact *", 0},{"_p_SContact"},{0}};
static swig_type_info _swigt__p_CQuickSort[] = {{"_p_CQuickSort", 0, "CQuickSort *", 0},{"_p_CQuickSort"},{0}};
static swig_type_info _swigt__p_PElement[] = {{"_p_PElement", 0, "PElement &", 0},{"_p_PElement"},{"_p_PAtomName"},{"_p_PAltLoc"},{0}};
static swig_type_info _swigt__p_short[] = {{"_p_short", 0, "short *", 0},{"_p_short"},{0}};
static swig_type_info _swigt__PCBrick[] = {{"_PCBrick", 0, "PCBrick", 0},{"_PCBrick"},{"_p_CBrick"},{0}};
static swig_type_info _swigt__p_PPCBrick[] = {{"_p_PPCBrick", 0, "PPCBrick *", 0},{"_p_PPCBrick"},{0}};
static swig_type_info _swigt__PCSeqRes[] = {{"_PCSeqRes", 0, "PCSeqRes", 0},{"_PCSeqRes"},{"_p_CSeqRes"},{0}};
static swig_type_info _swigt__p_CSeqRes[] = {{"_p_CSeqRes", 0, "CSeqRes *", 0},{"_p_CSeqRes"},{"_PCSeqRes"},{0}};
static swig_type_info _swigt__p_PPCSeqRes[] = {{"_p_PPCSeqRes", 0, "PPCSeqRes *", 0},{"_p_PPCSeqRes"},{0}};
static swig_type_info _swigt__p_CSeqAdv[] = {{"_p_CSeqAdv", 0, "CSeqAdv *", 0},{"_p_CSeqAdv"},{"_PCSeqAdv"},{0}};
static swig_type_info _swigt__PCSeqAdv[] = {{"_PCSeqAdv", 0, "PCSeqAdv", 0},{"_PCSeqAdv"},{"_p_CSeqAdv"},{0}};
static swig_type_info _swigt__p_PPCSeqAdv[] = {{"_p_PPCSeqAdv", 0, "PPCSeqAdv *", 0},{"_p_PPCSeqAdv"},{0}};
static swig_type_info _swigt__p_rmatrix3[] = {{"_p_rmatrix3", 0, "rmatrix3 &", 0},{"_p_rmatrix3"},{"_p_p_p_p_doublea"},{"_p_p_p_p_doublep"},{0}};
static swig_type_info _swigt__p_imatrix3[] = {{"_p_imatrix3", 0, "imatrix3 &", 0},{"_p_p_p_p_inta"},{"_p_p_p_p_intp"},{"_p_imatrix3"},{0}};
static swig_type_info _swigt__p_wmatrix3[] = {{"_p_wmatrix3", 0, "wmatrix3 &", 0},{"_p_wmatrix3"},{0}};
static swig_type_info _swigt__p_bmatrix3[] = {{"_p_bmatrix3", 0, "bmatrix3 &", 0},{"_p_bmatrix3"},{0}};
static swig_type_info _swigt__p_lmatrix3[] = {{"_p_lmatrix3", 0, "lmatrix3 &", 0},{"_p_lmatrix3"},{0}};
static swig_type_info _swigt__p_lwmatrix3[] = {{"_p_lwmatrix3", 0, "lwmatrix3 &", 0},{"_p_lwmatrix3"},{0}};
static swig_type_info _swigt__p_psmatrix3[] = {{"_p_psmatrix3", 0, "psmatrix3 &", 0},{"_p_psmatrix3"},{0}};
static swig_type_info _swigt__PCDBReference[] = {{"_PCDBReference", 0, "PCDBReference", 0},{"_PCDBReference"},{"_p_CDBReference"},{0}};
static swig_type_info _swigt__p_CDBReference[] = {{"_p_CDBReference", 0, "CDBReference *", 0},{"_p_CDBReference"},{"_PCDBReference"},{0}};
static swig_type_info _swigt__p_CSBBond[] = {{"_p_CSBBond", 0, "CSBBond *", 0},{"_p_CSBBond"},{"_PCSBBond"},{0}};
static swig_type_info _swigt__PCSBBond[] = {{"_PCSBBond", 0, "PCSBBond", 0},{"_PCSBBond"},{"_p_CSBBond"},{0}};
static swig_type_info _swigt__p_PPCSBBond[] = {{"_p_PPCSBBond", 0, "PPCSBBond *", 0},{"_p_PPCSBBond"},{0}};
static swig_type_info _swigt__p_PPCDBReference[] = {{"_p_PPCDBReference", 0, "PPCDBReference *", 0},{"_p_PPCDBReference"},{0}};
static swig_type_info _swigt__p_PPCMask[] = {{"_p_PPCMask", 0, "PPCMask *", 0},{"_p_PPCMask"},{0}};
static swig_type_info _swigt__p_PCMMCIFStruct[] = {{"_p_PCMMCIFStruct", 0, "PCMMCIFStruct &", 0},{"_p_PCMMCIFStruct"},{0}};
static swig_type_info _swigt__p_CMMCIFStruct[] = {{"_p_CMMCIFStruct", 0, "CMMCIFStruct *", 0},{"_p_CMMCIFStruct"},{"_PCMMCIFStruct"},{0}};
static swig_type_info _swigt__PCMMCIFStruct[] = {{"_PCMMCIFStruct", 0, "PCMMCIFStruct", 0},{"_PCMMCIFStruct"},{"_p_CMMCIFStruct"},{0}};
static swig_type_info _swigt__p_SAtomStat[] = {{"_p_SAtomStat", 0, "RSAtomStat", 0},{"_p_SAtomStat"},{0}};
static swig_type_info _swigt__p_CUDData[] = {{"_p_CUDData", 0, "CUDData *", 0},{"_p_CMMDBCoorManager", _p_CMMDBCoorManagerTo_p_CUDData},{"_PCMMDBCoorManager", _p_CMMDBCoorManagerTo_p_CUDData},{"_p_CMMDBSelManager", _p_CMMDBSelManagerTo_p_CUDData},{"_PCMMDBSelManager", _p_CMMDBSelManagerTo_p_CUDData},{"_PCMMDBManager", _p_CMMDBManagerTo_p_CUDData},{"_p_CMMDBManager", _p_CMMDBManagerTo_p_CUDData},{"_p_CMMDBBondManager", _p_CMMDBBondManagerTo_p_CUDData},{"_p_CUDData"},{"_p_CChain", _p_CChainTo_p_CUDData},{"_p_CModel", _p_CModelTo_p_CUDData},{"_p_CMMDBFile", _p_CMMDBFileTo_p_CUDData},{"_PCMMDBFile", _p_CMMDBFileTo_p_CUDData},{"_PCChain", _p_CChainTo_p_CUDData},{"_PCModel", _p_CModelTo_p_CUDData},{"_PCProModel", _p_CProModelTo_p_CUDData},{"_p_CProModel", _p_CProModelTo_p_CUDData},{"_p_CAtom", _p_CAtomTo_p_CUDData},{"_PCAtom", _p_CAtomTo_p_CUDData},{"_PCResidue", _p_CResidueTo_p_CUDData},{"_p_CResidue", _p_CResidueTo_p_CUDData},{0}};
static swig_type_info _swigt__p_byte[] = {{"_p_byte", 0, "byte *", 0},{"_p_byte"},{"_bvector"},{"_p_Boolean"},{0}};
static swig_type_info _swigt__PCSymOp[] = {{"_PCSymOp", 0, "PCSymOp", 0},{"_p_CSymOp"},{"_PCSymOp"},{0}};
static swig_type_info _swigt__p_PPCSymOp[] = {{"_p_PPCSymOp", 0, "PPCSymOp *", 0},{"_p_PPCSymOp"},{0}};
static swig_type_info _swigt__PCSSContainer[] = {{"_PCSSContainer", 0, "PCSSContainer", 0},{"_PCSSContainer"},{"_p_CSSContainer"},{0}};
static swig_type_info _swigt__p_CSSContainer[] = {{"_p_CSSContainer", 0, "CSSContainer *", 0},{"_p_CSSContainer"},{"_PCSSContainer"},{0}};
static swig_type_info _swigt__PCChainContainer[] = {{"_PCChainContainer", 0, "PCChainContainer", 0},{"_PCChainContainer"},{"_p_CChainContainer"},{0}};
static swig_type_info _swigt__p_CChainContainer[] = {{"_p_CChainContainer", 0, "CChainContainer *", 0},{"_p_CChainContainer"},{"_PCChainContainer"},{0}};
static swig_type_info _swigt__p_CClassContainer[] = {{"_p_CClassContainer", 0, "CClassContainer *", 0},{"_p_CClassContainer"},{"_PCClassContainer"},{"_p_CChainContainer", _p_CChainContainerTo_p_CClassContainer},{"_PCChainContainer", _p_CChainContainerTo_p_CClassContainer},{"_p_CSSContainer", _p_CSSContainerTo_p_CClassContainer},{"_PCSSContainer", _p_CSSContainerTo_p_CClassContainer},{0}};
static swig_type_info _swigt__PCClassContainer[] = {{"_PCClassContainer", 0, "PCClassContainer", 0},{"_PCClassContainer"},{"_p_CClassContainer"},{"_p_CChainContainer", _p_CChainContainerTo_p_CClassContainer},{"_PCChainContainer", _p_CChainContainerTo_p_CClassContainer},{"_p_CSSContainer", _p_CSSContainerTo_p_CClassContainer},{"_PCSSContainer", _p_CSSContainerTo_p_CClassContainer},{0}};
static swig_type_info _swigt__p_PPCChainContainer[] = {{"_p_PPCChainContainer", 0, "PPCChainContainer *", 0},{"_p_PPCChainContainer"},{0}};
static swig_type_info _swigt__p_PCCrystContainer[] = {{"_p_PCCrystContainer", 0, "PCCrystContainer *", 0},{"_p_PCCrystContainer"},{0}};
static swig_type_info _swigt__p_PPCCrystContainer[] = {{"_p_PPCCrystContainer", 0, "PPCCrystContainer *", 0},{"_p_PPCCrystContainer"},{0}};
static swig_type_info _swigt__p_PPCSSContainer[] = {{"_p_PPCSSContainer", 0, "PPCSSContainer *", 0},{"_p_PPCSSContainer"},{0}};
static swig_type_info _swigt__p_PCTitleContainer[] = {{"_p_PCTitleContainer", 0, "PCTitleContainer *", 0},{"_p_PCTitleContainer"},{0}};
static swig_type_info _swigt__p_PPCTitleContainer[] = {{"_p_PPCTitleContainer", 0, "PPCTitleContainer *", 0},{"_p_PPCTitleContainer"},{0}};
static swig_type_info _swigt__p_PPCClassContainer[] = {{"_p_PPCClassContainer", 0, "PPCClassContainer *", 0},{"_p_PPCClassContainer"},{0}};
static swig_type_info _swigt__p_PPCMMCIFData[] = {{"_p_PPCMMCIFData", 0, "PPCMMCIFData *", 0},{"_p_PPCMMCIFData"},{0}};
static swig_type_info _swigt__p_CMMCIFData[] = {{"_p_CMMCIFData", 0, "CMMCIFData *", 0},{"_p_CMMCIFData"},{"_PCMMCIFData"},{0}};
static swig_type_info _swigt__PCMMCIFData[] = {{"_PCMMCIFData", 0, "PCMMCIFData", 0},{"_PCMMCIFData"},{"_p_CMMCIFData"},{0}};
static swig_type_info _swigt__PCGenSym[] = {{"_PCGenSym", 0, "PCGenSym", 0},{"_PCGenSym"},{"_p_CGenSym"},{0}};
static swig_type_info _swigt__p_CGenSym[] = {{"_p_CGenSym", 0, "CGenSym *", 0},{"_p_CGenSym"},{"_PCGenSym"},{0}};
static swig_type_info _swigt__p_CBrick[] = {{"_p_CBrick", 0, "CBrick *", 0},{"_PCBrick"},{"_p_CBrick"},{0}};
static swig_type_info _swigt__p_PPCGenSym[] = {{"_p_PPCGenSym", 0, "PPCGenSym *", 0},{"_p_PPCGenSym"},{0}};
static swig_type_info _swigt__p_PCSupersede[] = {{"_p_PCSupersede", 0, "PCSupersede *", 0},{"_p_PCSupersede"},{0}};
static swig_type_info _swigt__p_PPCSupersede[] = {{"_p_PPCSupersede", 0, "PPCSupersede *", 0},{"_p_PPCSupersede"},{0}};
static swig_type_info _swigt__p_PCTitleLine[] = {{"_p_PCTitleLine", 0, "PCTitleLine *", 0},{"_p_PCTitleLine"},{0}};
static swig_type_info _swigt__p_PPCTitleLine[] = {{"_p_PPCTitleLine", 0, "PPCTitleLine *", 0},{"_p_PPCTitleLine"},{0}};
static swig_type_info _swigt__p_PCJournal[] = {{"_p_PCJournal", 0, "PCJournal *", 0},{"_p_PCJournal"},{0}};
static swig_type_info _swigt__p_PPCJournal[] = {{"_p_PPCJournal", 0, "PPCJournal *", 0},{"_p_PPCJournal"},{0}};
static swig_type_info _swigt__PCGraph[] = {{"_PCGraph", 0, "PCGraph", 0},{"_PCGraph"},{"_p_CGraph"},{0}};
static swig_type_info _swigt__p_PCGraph[] = {{"_p_PCGraph", 0, "RPCGraph", 0},{"_p_PCGraph"},{0}};
static swig_type_info _swigt__psvector[] = {{"_psvector", 0, "psvector", 0},{"_psvector"},{"_p_pstr"},{0}};
static swig_type_info _swigt__p_psvector[] = {{"_p_psvector", 0, "psvector &", 0},{"_p_psvector"},{0}};
static swig_type_info _swigt__p_lwvector[] = {{"_p_lwvector", 0, "lwvector &", 0},{"_p_lwvector"},{0}};
static swig_type_info _swigt__p_wvector[] = {{"_p_wvector", 0, "wvector &", 0},{"_p_wvector"},{0}};
static swig_type_info _swigt__p_ivector[] = {{"_p_ivector", 0, "ivector &", 0},{"_p_ivector"},{"_p_p_inta"},{"_p_p_intp"},{0}};
static swig_type_info _swigt__ivector[] = {{"_ivector", 0, "ivector", 0},{"_ivector"},{"_p_inta"},{"_p_intp"},{"_p_int"},{0}};
static swig_type_info _swigt__p_PCRemark[] = {{"_p_PCRemark", 0, "PCRemark *", 0},{"_p_PCRemark"},{0}};
static swig_type_info _swigt__p_PPCRemark[] = {{"_p_PPCRemark", 0, "PPCRemark *", 0},{"_p_PPCRemark"},{0}};
static swig_type_info _swigt__p_CSBase[] = {{"_p_CSBase", 0, "CSBase *", 0},{"_p_CSBase"},{0}};
static swig_type_info _swigt__p_inta[] = {{"_p_inta", 0, "inta *", 0},{"_p_inta"},{0}};
static swig_type_info _swigt__PCMask[] = {{"_PCMask", 0, "PCMask", 0},{"_p_CMask"},{"_PCMask"},{"_p_CMMDBCoorManager", _p_CMMDBCoorManagerTo_p_CMask},{"_PCMMDBCoorManager", _p_CMMDBCoorManagerTo_p_CMask},{"_PCMMDBManager", _p_CMMDBManagerTo_p_CMask},{"_p_CMMDBManager", _p_CMMDBManagerTo_p_CMask},{"_p_CMMDBBondManager", _p_CMMDBBondManagerTo_p_CMask},{"_p_CMMDBSelManager", _p_CMMDBSelManagerTo_p_CMask},{"_PCMMDBSelManager", _p_CMMDBSelManagerTo_p_CMask},{"_p_CUDData", _p_CUDDataTo_p_CMask},{"_p_CChain", _p_CChainTo_p_CMask},{"_p_CMMDBFile", _p_CMMDBFileTo_p_CMask},{"_PCMMDBFile", _p_CMMDBFileTo_p_CMask},{"_p_CModel", _p_CModelTo_p_CMask},{"_PCChain", _p_CChainTo_p_CMask},{"_PCModel", _p_CModelTo_p_CMask},{"_PCProModel", _p_CProModelTo_p_CMask},{"_p_CProModel", _p_CProModelTo_p_CMask},{"_p_CAtom", _p_CAtomTo_p_CMask},{"_PCAtom", _p_CAtomTo_p_CMask},{"_PCResidue", _p_CResidueTo_p_CMask},{"_p_CResidue", _p_CResidueTo_p_CMask},{0}};
static swig_type_info _swigt__p_CMask[] = {{"_p_CMask", 0, "CMask *", 0},{"_p_CMask"},{"_PCMask"},{"_p_CMMDBCoorManager", _p_CMMDBCoorManagerTo_p_CMask},{"_PCMMDBCoorManager", _p_CMMDBCoorManagerTo_p_CMask},{"_PCMMDBManager", _p_CMMDBManagerTo_p_CMask},{"_p_CMMDBManager", _p_CMMDBManagerTo_p_CMask},{"_p_CMMDBBondManager", _p_CMMDBBondManagerTo_p_CMask},{"_p_CMMDBSelManager", _p_CMMDBSelManagerTo_p_CMask},{"_PCMMDBSelManager", _p_CMMDBSelManagerTo_p_CMask},{"_p_CUDData", _p_CUDDataTo_p_CMask},{"_p_CChain", _p_CChainTo_p_CMask},{"_p_CMMDBFile", _p_CMMDBFileTo_p_CMask},{"_PCMMDBFile", _p_CMMDBFileTo_p_CMask},{"_p_CModel", _p_CModelTo_p_CMask},{"_PCChain", _p_CChainTo_p_CMask},{"_PCModel", _p_CModelTo_p_CMask},{"_PCProModel", _p_CProModelTo_p_CMask},{"_p_CProModel", _p_CProModelTo_p_CMask},{"_p_CAtom", _p_CAtomTo_p_CMask},{"_PCAtom", _p_CAtomTo_p_CMask},{"_PCResidue", _p_CResidueTo_p_CMask},{"_p_CResidue", _p_CResidueTo_p_CMask},{0}};
static swig_type_info _swigt__p_PCCaveat[] = {{"_p_PCCaveat", 0, "PCCaveat *", 0},{"_p_PCCaveat"},{0}};
static swig_type_info _swigt__p_PPCCaveat[] = {{"_p_PPCCaveat", 0, "PPCCaveat *", 0},{"_p_PPCCaveat"},{0}};
static swig_type_info _swigt__PCHetCompounds[] = {{"_PCHetCompounds", 0, "PCHetCompounds", 0},{"_PCHetCompounds"},{"_p_CHetCompounds"},{0}};
static swig_type_info _swigt__p_CHetCompounds[] = {{"_p_CHetCompounds", 0, "CHetCompounds *", 0},{"_p_CHetCompounds"},{"_PCHetCompounds"},{0}};
static swig_type_info _swigt__PCMBrick[] = {{"_PCMBrick", 0, "PCMBrick", 0},{"_PCMBrick"},{"_p_CMBrick"},{0}};
static swig_type_info _swigt__p_CMBrick[] = {{"_p_CMBrick", 0, "CMBrick *", 0},{"_p_CMBrick"},{"_PCMBrick"},{0}};
static swig_type_info _swigt__p_PPCHetCompounds[] = {{"_p_PPCHetCompounds", 0, "PPCHetCompounds *", 0},{"_p_PPCHetCompounds"},{0}};
static swig_type_info _swigt__p_PPCEdge[] = {{"_p_PPCEdge", 0, "PPCEdge *", 0},{"_p_PPCEdge"},{0}};
static swig_type_info _swigt__p_PCMMDBCryst[] = {{"_p_PCMMDBCryst", 0, "PCMMDBCryst *", 0},{"_p_PCMMDBCryst"},{0}};
static swig_type_info _swigt__p_PPCMMDBCryst[] = {{"_p_PPCMMDBCryst", 0, "PPCMMDBCryst *", 0},{"_p_PPCMMDBCryst"},{0}};
static swig_type_info _swigt__p_CSymOp[] = {{"_p_CSymOp", 0, "CSymOp *", 0},{"_p_CSymOp"},{"_PCSymOp"},{0}};
static swig_type_info _swigt__p_PPCAtom[] = {{"_p_PPCAtom", 0, "PPCAtom *", 0},{"_p_PPCAtom"},{0}};
static swig_type_info _swigt__p_int[] = {{"_p_int", 0, "int *", 0},{"_ivector"},{"_p_inta", _p_intaTo_p_int},{"_p_intp", _p_intpTo_p_int},{"_p_int"},{0}};
static swig_type_info _swigt__p_CStream[] = {{"_p_CStream", 0, "CStream *", 0},{"_p_CEdge", _p_CEdgeTo_p_CStream},{"_p_CHelix", _p_CHelixTo_p_CStream},{"_p_CSymOps", _p_CSymOpsTo_p_CStream},{"_PCSymOps", _p_CSymOpsTo_p_CStream},{"_p_CMMCIFStruct", _p_CMMCIFStructTo_p_CStream},{"_PCMMCIFStruct", _p_CMMCIFStructTo_p_CStream},{"_p_CChain", _p_CChainTo_p_CStream},{"_PCContainerChain", _p_CContainerChainTo_p_CStream},{"_p_CContainerChain", _p_CContainerChainTo_p_CStream},{"_p_CMContact", _p_CMContactTo_p_CStream},{"_p_CAlignment1", _p_CAlignment1To_p_CStream},{"_p_CGraph", _p_CGraphTo_p_CStream},{"_PCAtomPath", _p_CAtomPathTo_p_CStream},{"_p_CAtomPath", _p_CAtomPathTo_p_CStream},{"_PCSSContainer", _p_CSSContainerTo_p_CStream},{"_PCChainContainer", _p_CChainContainerTo_p_CStream},{"_p_CChainContainer", _p_CChainContainerTo_p_CStream},{"_PCClassContainer", _p_CClassContainerTo_p_CStream},{"_p_CClassContainer", _p_CClassContainerTo_p_CStream},{"_p_CSSContainer", _p_CSSContainerTo_p_CStream},{"_p_CSheet", _p_CSheetTo_p_CStream},{"_p_CSBIndex", _p_CSBIndexTo_p_CStream},{"_PCMMCIFLoop", _p_CMMCIFLoopTo_p_CStream},{"_p_CMMCIFLoop", _p_CMMCIFLoopTo_p_CStream},{"_PCGenSym", _p_CGenSymTo_p_CStream},{"_p_CGenSym", _p_CGenSymTo_p_CStream},{"_PCResidue", _p_CResidueTo_p_CStream},{"_p_CResidue", _p_CResidueTo_p_CStream},{"_p_CSymOp", _p_CSymOpTo_p_CStream},{"_PCMask", _p_CMaskTo_p_CStream},{"_PCModel", _p_CModelTo_p_CStream},{"_p_CMask", _p_CMaskTo_p_CStream},{"_p_CMMCIFData", _p_CMMCIFDataTo_p_CStream},{"_PCMMCIFData", _p_CMMCIFDataTo_p_CStream},{"_p_CDBReference", _p_CDBReferenceTo_p_CStream},{"_PCDBReference", _p_CDBReferenceTo_p_CStream},{"_PCHelix", _p_CHelixTo_p_CStream},{"_PCSeqRes", _p_CSeqResTo_p_CStream},{"_p_CSeqRes", _p_CSeqResTo_p_CStream},{"_PCContainerClass", _p_CContainerClassTo_p_CStream},{"_p_CContainerClass", _p_CContainerClassTo_p_CStream},{"_PCSBAtom", _p_CSBAtomTo_p_CStream},{"_p_CSBAtom", _p_CSBAtomTo_p_CStream},{"_p_CHetRec", _p_CHetRecTo_p_CStream},{"_PCHetRec", _p_CHetRecTo_p_CStream},{"_p_CMMCIFFile", _p_CMMCIFFileTo_p_CStream},{"_PCMMCIFFile", _p_CMMCIFFileTo_p_CStream},{"_PCChain", _p_CChainTo_p_CStream},{"_p_CModRes", _p_CModResTo_p_CStream},{"_PCModRes", _p_CModResTo_p_CStream},{"_p_CStream"},{"_PCGraph", _p_CGraphTo_p_CStream},{"_p_CMatch", _p_CMatchTo_p_CStream},{"_PCSBStructure", _p_CSBStructureTo_p_CStream},{"_p_CSBStructure", _p_CSBStructureTo_p_CStream},{"_PCSheet", _p_CSheetTo_p_CStream},{"_PCAtom", _p_CAtomTo_p_CStream},{"_p_CHetCompounds", _p_CHetCompoundsTo_p_CStream},{"_PCHetCompounds", _p_CHetCompoundsTo_p_CStream},{"_p_CAtom", _p_CAtomTo_p_CStream},{"_PCSymOp", _p_CSymOpTo_p_CStream},{"_p_CSeqAdv", _p_CSeqAdvTo_p_CStream},{"_PCSeqAdv", _p_CSeqAdvTo_p_CStream},{"_p_CSheets", _p_CSheetsTo_p_CStream},{"_PCSheets", _p_CSheetsTo_p_CStream},{"_p_CHetCompound", _p_CHetCompoundTo_p_CStream},{"_PCHetCompound", _p_CHetCompoundTo_p_CStream},{"_PCTurn", _p_CTurnTo_p_CStream},{"_p_CUDRegister", _p_CUDRegisterTo_p_CStream},{"_p_CTurn", _p_CTurnTo_p_CStream},{"_p_CProModel", _p_CProModelTo_p_CStream},{"_PCProModel", _p_CProModelTo_p_CStream},{"_p_CMMDBFile", _p_CMMDBFileTo_p_CStream},{"_PCMMDBFile", _p_CMMDBFileTo_p_CStream},{"_p_CGraphMatch", _p_CGraphMatchTo_p_CStream},{"_p_CMMDBCoorManager", _p_CMMDBCoorManagerTo_p_CStream},{"_PCMMDBCoorManager", _p_CMMDBCoorManagerTo_p_CStream},{"_PCMMDBManager", _p_CMMDBManagerTo_p_CStream},{"_p_CMMDBManager", _p_CMMDBManagerTo_p_CStream},{"_p_CMMDBBondManager", _p_CMMDBBondManagerTo_p_CStream},{"_p_CMMDBSelManager", _p_CMMDBSelManagerTo_p_CStream},{"_PCMMDBSelManager", _p_CMMDBSelManagerTo_p_CStream},{"_p_CStrand", _p_CStrandTo_p_CStream},{"_PCStrand", _p_CStrandTo_p_CStream},{"_p_CMMCIFCategory", _p_CMMCIFCategoryTo_p_CStream},{"_PCMMCIFCategory", _p_CMMCIFCategoryTo_p_CStream},{"_p_CAlignParams", _p_CAlignParamsTo_p_CStream},{"_p_CAlignment", _p_CAlignmentTo_p_CStream},{"_PCSBAngle", _p_CSBAngleTo_p_CStream},{"_p_CSBAngle", _p_CSBAngleTo_p_CStream},{"_p_CContString", _p_CContStringTo_p_CStream},{"_PCContString", _p_CContStringTo_p_CStream},{"_p_CSBBond", _p_CSBBondTo_p_CStream},{"_PCSBBond", _p_CSBBondTo_p_CStream},{"_p_CUDData", _p_CUDDataTo_p_CStream},{"_PCVertex", _p_CVertexTo_p_CStream},{"_p_CVertex", _p_CVertexTo_p_CStream},{"_PCSBTorsion", _p_CSBTorsionTo_p_CStream},{"_p_CSBTorsion", _p_CSBTorsionTo_p_CStream},{"_p_CModel", _p_CModelTo_p_CStream},{"_PCEdge", _p_CEdgeTo_p_CStream},{0}};
static swig_type_info _swigt__p_PCStream[] = {{"_p_PCStream", 0, "RPCStream", 0},{"_p_p_CAtomPath"},{"_p_p_CSBIndex"},{"_p_PCGraph", _p_p_CGraphTo_p_p_CStream},{"_p_p_CUDData"},{"_p_p_CVertex"},{"_p_p_CDBReference"},{"_p_p_CAlignment"},{"_p_p_CSymOp"},{"_p_p_CSBAtom"},{"_p_p_CMMCIFFile"},{"_p_p_CGenSym"},{"_p_p_CAtom"},{"_p_p_CHetRec"},{"_p_p_CStrand"},{"_p_p_CMask"},{"_p_p_CHetCompounds"},{"_p_p_CSBBond"},{"_p_p_CResidue"},{"_p_p_CGraph"},{"_p_p_CSheet"},{"_p_p_CModRes"},{"_p_p_CTurn"},{"_p_p_CMMCIFData"},{"_p_PCChain", _p_p_CChainTo_p_p_CStream},{"_p_p_CMMCIFStruct"},{"_p_PCMMCIFStruct", _p_p_CMMCIFStructTo_p_p_CStream},{"_p_p_CGraphMatch"},{"_p_p_CSBStructure"},{"_p_PCAtom", _p_p_CAtomTo_p_p_CStream},{"_p_p_CModel"},{"_p_p_CSBAngle"},{"_p_p_CContString"},{"_p_p_CContainerChain"},{"_p_p_CSeqAdv"},{"_p_p_CSBTorsion"},{"_p_p_CAlignment1"},{"_p_p_CSymOps"},{"_p_p_CMContact"},{"_p_p_CChain"},{"_p_p_CSSContainer"},{"_p_p_CClassContainer"},{"_p_p_CChainContainer"},{"_p_p_CMatch"},{"_p_p_CUDRegister"},{"_p_p_CContainerClass"},{"_p_p_CSeqRes"},{"_p_p_CEdge"},{"_p_p_CMMCIFCategory"},{"_p_p_CSheets"},{"_p_p_CHetCompound"},{"_p_p_CMMCIFLoop"},{"_p_PCMMCIFLoop", _p_p_CMMCIFLoopTo_p_p_CStream},{"_p_p_CProModel"},{"_p_p_CMMDBFile"},{"_p_p_CHelix"},{"_p_p_CAlignParams"},{"_p_PCStream"},{"_p_p_CMMDBManager"},{"_p_p_CMMDBBondManager"},{"_p_p_CMMDBSelManager"},{"_p_p_CMMDBCoorManager"},{0}};
static swig_type_info _swigt__p_CSBStructure[] = {{"_p_CSBStructure", 0, "CSBStructure *", 0},{"_p_CSBStructure"},{"_PCSBStructure"},{0}};
static swig_type_info _swigt__PCSBStructure[] = {{"_PCSBStructure", 0, "PCSBStructure", 0},{"_PCSBStructure"},{"_p_CSBStructure"},{0}};
static swig_type_info _swigt__p_intp[] = {{"_p_intp", 0, "intp *", 0},{"_p_intp"},{0}};
static swig_type_info _swigt__PCAtomPath[] = {{"_PCAtomPath", 0, "PCAtomPath", 0},{"_PCAtomPath"},{"_p_CAtomPath"},{0}};
static swig_type_info _swigt__p_CAtomPath[] = {{"_p_CAtomPath", 0, "CAtomPath *", 0},{"_p_CAtomPath"},{"_PCAtomPath"},{0}};
static swig_type_info _swigt__p_PPCAtomPath[] = {{"_p_PPCAtomPath", 0, "PPCAtomPath *", 0},{"_p_PPCAtomPath"},{0}};
static swig_type_info _swigt__p_CGraph[] = {{"_p_CGraph", 0, "CGraph *", 0},{"_PCGraph"},{"_p_CGraph"},{0}};
static swig_type_info _swigt__p_PCKeyWords[] = {{"_p_PCKeyWords", 0, "PCKeyWords *", 0},{"_p_PCKeyWords"},{0}};
static swig_type_info _swigt__p_PPCKeyWords[] = {{"_p_PPCKeyWords", 0, "PPCKeyWords *", 0},{"_p_PPCKeyWords"},{0}};
static swig_type_info _swigt__p_lvector[] = {{"_p_lvector", 0, "lvector &", 0},{"_p_lvector"},{0}};
static swig_type_info _swigt__p_bvector[] = {{"_p_bvector", 0, "bvector &", 0},{"_p_bvector"},{0}};
static swig_type_info _swigt__p_rvector[] = {{"_p_rvector", 0, "rvector &", 0},{"_p_rvector"},{"_p_p_doublea"},{"_p_p_doublep"},{0}};
static swig_type_info _swigt__rvector[] = {{"_rvector", 0, "rvector", 0},{"_rvector"},{"_p_double"},{"_p_realtype"},{"_p_doublea"},{"_p_doublep"},{0}};
static swig_type_info _swigt__lvector[] = {{"_lvector", 0, "lvector", 0},{"_lvector"},{"_p_long"},{0}};
static swig_type_info _swigt__bvector[] = {{"_bvector", 0, "bvector", 0},{"_bvector"},{"_p_byte"},{"_p_Boolean"},{0}};
static swig_type_info _swigt__p_PCExpData[] = {{"_p_PCExpData", 0, "PCExpData *", 0},{"_p_PCExpData"},{0}};
static swig_type_info _swigt__p_PPCExpData[] = {{"_p_PPCExpData", 0, "PPCExpData *", 0},{"_p_PPCExpData"},{0}};
static swig_type_info _swigt__imatrix[] = {{"_imatrix", 0, "imatrix", 0},{"_imatrix"},{"_p_p_inta"},{"_p_p_intp"},{0}};
static swig_type_info _swigt__p_wmatrix[] = {{"_p_wmatrix", 0, "wmatrix &", 0},{"_p_wmatrix"},{0}};
static swig_type_info _swigt__p_imatrix[] = {{"_p_imatrix", 0, "imatrix &", 0},{"_p_imatrix"},{"_p_p_p_inta"},{"_p_p_p_intp"},{0}};
static swig_type_info _swigt__p_lwmatrix[] = {{"_p_lwmatrix", 0, "lwmatrix &", 0},{"_p_lwmatrix"},{0}};
static swig_type_info _swigt__p_psmatrix[] = {{"_p_psmatrix", 0, "psmatrix &", 0},{"_p_psmatrix"},{0}};
static swig_type_info _swigt__p_PSAtomBondI[] = {{"_p_PSAtomBondI", 0, "RPSAtomBondI", 0},{"_p_PSAtomBondI"},{0}};
static swig_type_info _swigt__p_SAtomBondI[] = {{"_p_SAtomBondI", 0, "SAtomBondI *", 0},{"_p_SAtomBondI"},{0}};
static swig_type_info _swigt__p_double[] = {{"_p_double", 0, "double *", 0},{"_rvector"},{"_p_double"},{"_p_realtype"},{"_p_doublea", _p_doubleaTo_p_double},{"_p_doublep", _p_doublepTo_p_double},{0}};
static swig_type_info _swigt__PCEdge[] = {{"_PCEdge", 0, "PCEdge", 0},{"_PCEdge"},{"_p_CEdge"},{0}};
static swig_type_info _swigt__PCAtom[] = {{"_PCAtom", 0, "PCAtom", 0},{"_PCAtom"},{"_p_CAtom"},{0}};
static swig_type_info _swigt__p_CEdge[] = {{"_p_CEdge", 0, "CEdge *", 0},{"_PCEdge"},{"_p_CEdge"},{0}};
static swig_type_info _swigt__p_PCAtom[] = {{"_p_PCAtom", 0, "RPCAtom", 0},{"_p_PCAtom"},{0}};
static swig_type_info _swigt__p_vect3[] = {{"_p_vect3", 0, "vect3 &", 0},{"_p_vect3"},{"_p_a_3__doublea"},{"_p_a_3__doublep"},{0}};
static swig_type_info _swigt__p_long[] = {{"_p_long", 0, "long *", 0},{"_lvector"},{"_p_long"},{0}};
static swig_type_info _swigt__p_vect4[] = {{"_p_vect4", 0, "mat44", 0},{"_p_vect4"},{"_p_a_4__doublea"},{"_p_a_4__doublep"},{0}};
static swig_type_info _swigt__p_CAtom[] = {{"_p_CAtom", 0, "CAtom *", 0},{"_PCAtom"},{"_p_CAtom"},{0}};
static swig_type_info _swigt__p_PCMMCIFLoop[] = {{"_p_PCMMCIFLoop", 0, "PCMMCIFLoop &", 0},{"_p_PCMMCIFLoop"},{0}};
static swig_type_info _swigt__p_CMMCIFLoop[] = {{"_p_CMMCIFLoop", 0, "CMMCIFLoop *", 0},{"_p_CMMCIFLoop"},{"_PCMMCIFLoop"},{0}};
static swig_type_info _swigt__PCMMCIFLoop[] = {{"_PCMMCIFLoop", 0, "PCMMCIFLoop", 0},{"_PCMMCIFLoop"},{"_p_CMMCIFLoop"},{0}};
static swig_type_info _swigt__p_CHetRec[] = {{"_p_CHetRec", 0, "CHetRec *", 0},{"_p_CHetRec"},{"_PCHetRec"},{0}};
static swig_type_info _swigt__PCHetRec[] = {{"_PCHetRec", 0, "PCHetRec", 0},{"_PCHetRec"},{"_p_CHetRec"},{0}};
static swig_type_info _swigt__p_PPCHetRec[] = {{"_p_PPCHetRec", 0, "PPCHetRec *", 0},{"_p_PPCHetRec"},{0}};
static swig_type_info _swigt__p_CBFGSMin[] = {{"_p_CBFGSMin", 0, "CBFGSMin *", 0},{"_p_CBFGSMin"},{"_PCBFGSMin"},{0}};
static swig_type_info _swigt__PCBFGSMin[] = {{"_PCBFGSMin", 0, "PCBFGSMin", 0},{"_PCBFGSMin"},{"_p_CBFGSMin"},{0}};
static swig_type_info _swigt__p_PPCBFGSMin[] = {{"_p_PPCBFGSMin", 0, "PPCBFGSMin *", 0},{"_p_PPCBFGSMin"},{0}};
static swig_type_info _swigt__p_CUDRegister[] = {{"_p_CUDRegister", 0, "CUDRegister *", 0},{"_p_CUDRegister"},{0}};
static swig_type_info _swigt__p_realtype[] = {{"_p_realtype", 0, "realtype const [117]", 0},{"_rvector"},{"_p_double"},{"_p_realtype"},{"_p_doublea"},{"_p_doublep"},{0}};
static swig_type_info _swigt__p_PCSource[] = {{"_p_PCSource", 0, "PCSource *", 0},{"_p_PCSource"},{0}};
static swig_type_info _swigt__p_PPCSource[] = {{"_p_PPCSource", 0, "PPCSource *", 0},{"_p_PPCSource"},{0}};
static swig_type_info _swigt__p_CMatch[] = {{"_p_CMatch", 0, "CMatch *", 0},{"_p_CMatch"},{0}};
static swig_type_info _swigt__p_CAlignParams[] = {{"_p_CAlignParams", 0, "CAlignParams *", 0},{"_p_CAlignParams"},{0}};
static swig_type_info _swigt__p_mat33[] = {{"_p_mat33", 0, "mat33 &", 0},{"_p_mat33"},{"_p_a_3__a_3__doublea"},{"_p_a_3__a_3__doublep"},{0}};
static swig_type_info _swigt__p_rmatrix[] = {{"_p_rmatrix", 0, "rmatrix &", 0},{"_p_rmatrix"},{"_p_p_p_doublea"},{"_p_p_p_doublep"},{0}};
static swig_type_info _swigt__p_bmatrix[] = {{"_p_bmatrix", 0, "bmatrix &", 0},{"_p_bmatrix"},{0}};
static swig_type_info _swigt__p_lmatrix[] = {{"_p_lmatrix", 0, "lmatrix &", 0},{"_p_lmatrix"},{0}};
static swig_type_info _swigt__rmatrix[] = {{"_rmatrix", 0, "rmatrix", 0},{"_rmatrix"},{"_p_p_doublea"},{"_p_p_doublep"},{0}};
static swig_type_info _swigt__p_CSBIndex[] = {{"_p_CSBIndex", 0, "CSBIndex *", 0},{"_p_CSBIndex"},{0}};
static swig_type_info _swigt__p_PCNCSMatrix[] = {{"_p_PCNCSMatrix", 0, "PCNCSMatrix *", 0},{"_p_PCNCSMatrix"},{0}};
static swig_type_info _swigt__p_PPCNCSMatrix[] = {{"_p_PPCNCSMatrix", 0, "PPCNCSMatrix *", 0},{"_p_PPCNCSMatrix"},{0}};
static swig_type_info _swigt__p_word[] = {{"_p_word", 0, "word *", 0},{"_p_word"},{0}};
static swig_type_info _swigt__p_Boolean[] = {{"_p_Boolean", 0, "Boolean *", 0},{"_p_byte"},{"_bvector"},{"_p_Boolean"},{0}};
static swig_type_info _swigt__p_CGraphMatch[] = {{"_p_CGraphMatch", 0, "CGraphMatch *", 0},{"_p_CGraphMatch"},{0}};
static swig_type_info _swigt__p_PCAuthor[] = {{"_p_PCAuthor", 0, "PCAuthor *", 0},{"_p_PCAuthor"},{0}};
static swig_type_info _swigt__p_PPCAuthor[] = {{"_p_PPCAuthor", 0, "PPCAuthor *", 0},{"_p_PPCAuthor"},{0}};
static swig_type_info _swigt__p_PAltLoc[] = {{"_p_PAltLoc", 0, "PAltLoc &", 0},{"_p_PElement"},{"_p_PAtomName"},{"_p_PAltLoc"},{0}};
static swig_type_info _swigt__PCHelix[] = {{"_PCHelix", 0, "PCHelix", 0},{"_PCHelix"},{"_p_CHelix"},{0}};
static swig_type_info _swigt__p_PPCHelix[] = {{"_p_PPCHelix", 0, "PPCHelix *", 0},{"_p_PPCHelix"},{0}};
static swig_type_info _swigt__p_CSBTorsion[] = {{"_p_CSBTorsion", 0, "CSBTorsion *", 0},{"_p_CSBTorsion"},{"_PCSBTorsion"},{0}};
static swig_type_info _swigt__PCSBTorsion[] = {{"_PCSBTorsion", 0, "PCSBTorsion", 0},{"_PCSBTorsion"},{"_p_CSBTorsion"},{0}};
static swig_type_info _swigt__p_PPCSBTorsion[] = {{"_p_PPCSBTorsion", 0, "PPCSBTorsion *", 0},{"_p_PPCSBTorsion"},{0}};
static swig_type_info _swigt__p_PCChain[] = {{"_p_PCChain", 0, "PCChain &", 0},{"_p_PCChain"},{0}};
static swig_type_info _swigt__p_PPCChain[] = {{"_p_PPCChain", 0, "PPCChain *", 0},{"_p_PPCChain"},{0}};
static swig_type_info _swigt__PCChain[] = {{"_PCChain", 0, "PCChain", 0},{"_PCChain"},{"_p_CChain"},{0}};
static swig_type_info _swigt__p_PCRevData[] = {{"_p_PCRevData", 0, "PCRevData *", 0},{"_p_PCRevData"},{0}};
static swig_type_info _swigt__p_PPCRevData[] = {{"_p_PPCRevData", 0, "PPCRevData *", 0},{"_p_PPCRevData"},{0}};
static swig_type_info _swigt__p_PSAtomBond[] = {{"_p_PSAtomBond", 0, "PSAtomBond *", 0},{"_p_PSAtomBond"},{0}};
static swig_type_info _swigt__p_SAtomBond[] = {{"_p_SAtomBond", 0, "SAtomBond *", 0},{"_p_SAtomBond"},{0}};
static swig_type_info _swigt__PResName[] = {{"_PResName", 0, "PResName", 0},{"_PAtomName"},{"_PResName"},{0}};
static swig_type_info _swigt__p_PCObsLine[] = {{"_p_PCObsLine", 0, "PCObsLine *", 0},{"_p_PCObsLine"},{0}};
static swig_type_info _swigt__p_PPCObsLine[] = {{"_p_PPCObsLine", 0, "PPCObsLine *", 0},{"_p_PPCObsLine"},{0}};
static swig_type_info _swigt__p_PPCStrand[] = {{"_p_PPCStrand", 0, "PPCStrand *", 0},{"_p_PPCStrand"},{0}};
static swig_type_info _swigt__PCStrand[] = {{"_PCStrand", 0, "PCStrand", 0},{"_PCStrand"},{"_p_CStrand"},{0}};
static swig_type_info _swigt__p_CStrand[] = {{"_p_CStrand", 0, "CStrand *", 0},{"_p_CStrand"},{"_PCStrand"},{0}};
static swig_type_info _swigt__p_PPCHetCompound[] = {{"_p_PPCHetCompound", 0, "PPCHetCompound *", 0},{"_p_PPCHetCompound"},{0}};
static swig_type_info _swigt__PCHetCompound[] = {{"_PCHetCompound", 0, "PCHetCompound", 0},{"_PCHetCompound"},{"_p_CHetCompound"},{0}};
static swig_type_info _swigt__p_CHetCompound[] = {{"_p_CHetCompound", 0, "CHetCompound *", 0},{"_p_CHetCompound"},{"_PCHetCompound"},{0}};
static swig_type_info _swigt__p_PCCompound[] = {{"_p_PCCompound", 0, "PCCompound *", 0},{"_p_PCCompound"},{0}};
static swig_type_info _swigt__p_PPCCompound[] = {{"_p_PPCCompound", 0, "PPCCompound *", 0},{"_p_PPCCompound"},{0}};
static swig_type_info _swigt__p_FILE[] = {{"_p_FILE", 0, "FILE *", 0},{"_p_FILE"},{0}};
static swig_type_info _swigt__p_PPCModel[] = {{"_p_PPCModel", 0, "PPCModel *", 0},{"_p_PPCModel"},{0}};
static swig_type_info _swigt__PCModel[] = {{"_PCModel", 0, "PCModel", 0},{"_PCModel"},{"_p_CModel"},{0}};
static swig_type_info _swigt__p_PPCSheet[] = {{"_p_PPCSheet", 0, "PPCSheet *", 0},{"_p_PPCSheet"},{0}};
static swig_type_info _swigt__PCSheet[] = {{"_PCSheet", 0, "PCSheet", 0},{"_PCSheet"},{"_p_CSheet"},{0}};
static swig_type_info _swigt__p_CSBAtom[] = {{"_p_CSBAtom", 0, "CSBAtom *", 0},{"_p_CSBAtom"},{"_PCSBAtom"},{0}};
static swig_type_info _swigt__PCSBAtom[] = {{"_PCSBAtom", 0, "PCSBAtom", 0},{"_PCSBAtom"},{"_p_CSBAtom"},{0}};
static swig_type_info _swigt__p_PPCSBAtom[] = {{"_p_PPCSBAtom", 0, "PPCSBAtom *", 0},{"_p_PPCSBAtom"},{0}};
static swig_type_info _swigt__p_PPCFile[] = {{"_p_PPCFile", 0, "PPCFile *", 0},{"_p_PPCFile"},{0}};
static swig_type_info _swigt__PCMMDBManager[] = {{"_PCMMDBManager", 0, "PCMMDBManager", 0},{"_PCMMDBManager"},{"_p_CMMDBManager"},{0}};
static swig_type_info _swigt__p_CMMDBManager[] = {{"_p_CMMDBManager", 0, "CMMDBManager *", 0},{"_p_CMMDBManager"},{"_PCMMDBManager"},{0}};
static swig_type_info _swigt__p_CMMDBCoorManager[] = {{"_p_CMMDBCoorManager", 0, "CMMDBCoorManager *", 0},{"_p_CMMDBCoorManager"},{"_PCMMDBCoorManager"},{"_p_CMMDBSelManager", _p_CMMDBSelManagerTo_p_CMMDBCoorManager},{"_PCMMDBSelManager", _p_CMMDBSelManagerTo_p_CMMDBCoorManager},{"_p_CMMDBBondManager", _p_CMMDBBondManagerTo_p_CMMDBCoorManager},{"_p_CMMDBManager", _p_CMMDBManagerTo_p_CMMDBCoorManager},{"_PCMMDBManager", _p_CMMDBManagerTo_p_CMMDBCoorManager},{0}};
static swig_type_info _swigt__p_CMMDBSelManager[] = {{"_p_CMMDBSelManager", 0, "CMMDBSelManager *", 0},{"_p_CMMDBSelManager"},{"_PCMMDBSelManager"},{"_p_CMMDBBondManager", _p_CMMDBBondManagerTo_p_CMMDBSelManager},{"_p_CMMDBManager", _p_CMMDBManagerTo_p_CMMDBSelManager},{"_PCMMDBManager", _p_CMMDBManagerTo_p_CMMDBSelManager},{0}};
static swig_type_info _swigt__p_CMMDBBondManager[] = {{"_p_CMMDBBondManager", 0, "CMMDBBondManager *", 0},{"_p_CMMDBBondManager"},{"_p_CMMDBManager", _p_CMMDBManagerTo_p_CMMDBBondManager},{"_PCMMDBManager", _p_CMMDBManagerTo_p_CMMDBBondManager},{0}};
static swig_type_info _swigt__p_char[] = {{"_p_char", 0, "CompoundID", 0},{"_p_char"},{0}};
static swig_type_info _swigt__PCMMDBCoorManager[] = {{"_PCMMDBCoorManager", 0, "PCMMDBCoorManager", 0},{"_PCMMDBCoorManager"},{"_p_CMMDBCoorManager"},{"_p_CMMDBSelManager", _p_CMMDBSelManagerTo_p_CMMDBCoorManager},{"_PCMMDBSelManager", _p_CMMDBSelManagerTo_p_CMMDBCoorManager},{"_p_CMMDBBondManager", _p_CMMDBBondManagerTo_p_CMMDBCoorManager},{"_p_CMMDBManager", _p_CMMDBManagerTo_p_CMMDBCoorManager},{"_PCMMDBManager", _p_CMMDBManagerTo_p_CMMDBCoorManager},{0}};
static swig_type_info _swigt__p_PPCMMDBCoorManager[] = {{"_p_PPCMMDBCoorManager", 0, "PPCMMDBCoorManager *", 0},{"_p_PPCMMDBCoorManager"},{0}};
static swig_type_info _swigt__PCMMDBSelManager[] = {{"_PCMMDBSelManager", 0, "PCMMDBSelManager", 0},{"_PCMMDBSelManager"},{"_p_CMMDBSelManager"},{"_p_CMMDBBondManager", _p_CMMDBBondManagerTo_p_CMMDBSelManager},{"_p_CMMDBManager", _p_CMMDBManagerTo_p_CMMDBSelManager},{"_PCMMDBManager", _p_CMMDBManagerTo_p_CMMDBSelManager},{0}};
static swig_type_info _swigt__p_PPCMMDBSelManager[] = {{"_p_PPCMMDBSelManager", 0, "PPCMMDBSelManager *", 0},{"_p_PPCMMDBSelManager"},{0}};
static swig_type_info _swigt__p_CAlignment1[] = {{"_p_CAlignment1", 0, "CAlignment1 *", 0},{"_p_CAlignment1"},{0}};
static swig_type_info _swigt__PCMMCIFCategory[] = {{"_PCMMCIFCategory", 0, "PCMMCIFCategory", 0},{"_PCMMCIFCategory"},{"_p_CMMCIFCategory"},{"_p_CMMCIFStruct", _p_CMMCIFStructTo_p_CMMCIFCategory},{"_PCMMCIFStruct", _p_CMMCIFStructTo_p_CMMCIFCategory},{"_p_CMMCIFLoop", _p_CMMCIFLoopTo_p_CMMCIFCategory},{"_PCMMCIFLoop", _p_CMMCIFLoopTo_p_CMMCIFCategory},{0}};
static swig_type_info _swigt__p_CMMCIFCategory[] = {{"_p_CMMCIFCategory", 0, "CMMCIFCategory *", 0},{"_p_CMMCIFCategory"},{"_PCMMCIFCategory"},{"_p_CMMCIFStruct", _p_CMMCIFStructTo_p_CMMCIFCategory},{"_PCMMCIFStruct", _p_CMMCIFStructTo_p_CMMCIFCategory},{"_p_CMMCIFLoop", _p_CMMCIFLoopTo_p_CMMCIFCategory},{"_PCMMCIFLoop", _p_CMMCIFLoopTo_p_CMMCIFCategory},{0}};
static swig_type_info _swigt__p_mat44[] = {{"_p_mat44", 0, "mat44 *", 0},{"_p_mat44"},{"_p_a_4__a_4__doublea"},{"_p_a_4__a_4__doublep"},{0}};
static swig_type_info _swigt__p_PCTVect[] = {{"_p_PCTVect", 0, "PCTVect *", 0},{"_p_PCTVect"},{0}};
static swig_type_info _swigt__p_PPCTVect[] = {{"_p_PPCTVect", 0, "PPCTVect *", 0},{"_p_PPCTVect"},{0}};
static swig_type_info _swigt__PBFGSPrintFunc[] = {{"_PBFGSPrintFunc", 0, "PBFGSPrintFunc", 0},{"_PBFGSPrintFunc"},{0}};
static swig_type_info _swigt__p_CHelix[] = {{"_p_CHelix", 0, "CHelix *", 0},{"_PCHelix"},{"_p_CHelix"},{0}};
static swig_type_info _swigt__p_PPCTurn[] = {{"_p_PPCTurn", 0, "PPCTurn *", 0},{"_p_PPCTurn"},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_void, 
_swigt__p_CChain, 
_swigt__p_CAlignment, 
_swigt__PCProModel, 
_swigt__p_CProModel, 
_swigt__p_CContainerChain, 
_swigt__p_PPCProModel, 
_swigt__PCContainerChain, 
_swigt__p_PPCContainerChain, 
_swigt__p_CContString, 
_swigt__PCContString, 
_swigt__p_PPCContString, 
_swigt__PBFGSMinFunc, 
_swigt__p_CSBAngle, 
_swigt__PCSBAngle, 
_swigt__p_PPCSBAngle, 
_swigt__p_PCMMDBTitle, 
_swigt__p_PPCMMDBTitle, 
_swigt__p_CSymOps, 
_swigt__PCSymOps, 
_swigt__p_PPCSymOps, 
_swigt__p_doublea, 
_swigt__p_CModel, 
_swigt__p_CSheet, 
_swigt__PCFile, 
_swigt__PAtomName, 
_swigt__p_PAtomName, 
_swigt__p_CFile, 
_swigt__p_CResidue, 
_swigt__p_PPCResidue, 
_swigt__PCResidue, 
_swigt__PCSheets, 
_swigt__p_CSheets, 
_swigt__p_PPCSheets, 
_swigt__PCVertex, 
_swigt__p_CVertex, 
_swigt__p_CContainerClass, 
_swigt__PCContainerClass, 
_swigt__p_PPCVertex, 
_swigt__p_PPCContainerClass, 
_swigt__PCTurn, 
_swigt__p_CTurn, 
_swigt__p_doublep, 
_swigt__PCMMCIFFile, 
_swigt__p_CMMCIFFile, 
_swigt__PCMMDBFile, 
_swigt__p_CMMDBFile, 
_swigt__p_pstr, 
_swigt__PCModRes, 
_swigt__p_CModRes, 
_swigt__p_PPCModRes, 
_swigt__p_PSContact, 
_swigt__p_PPCMContact, 
_swigt__p_CMContact, 
_swigt__p_SContact, 
_swigt__p_CQuickSort, 
_swigt__p_PElement, 
_swigt__p_short, 
_swigt__PCBrick, 
_swigt__p_PPCBrick, 
_swigt__PCSeqRes, 
_swigt__p_CSeqRes, 
_swigt__p_PPCSeqRes, 
_swigt__p_CSeqAdv, 
_swigt__PCSeqAdv, 
_swigt__p_PPCSeqAdv, 
_swigt__p_rmatrix3, 
_swigt__p_imatrix3, 
_swigt__p_wmatrix3, 
_swigt__p_bmatrix3, 
_swigt__p_lmatrix3, 
_swigt__p_lwmatrix3, 
_swigt__p_psmatrix3, 
_swigt__PCDBReference, 
_swigt__p_CDBReference, 
_swigt__p_CSBBond, 
_swigt__PCSBBond, 
_swigt__p_PPCSBBond, 
_swigt__p_PPCDBReference, 
_swigt__p_PPCMask, 
_swigt__p_PCMMCIFStruct, 
_swigt__p_CMMCIFStruct, 
_swigt__PCMMCIFStruct, 
_swigt__p_SAtomStat, 
_swigt__p_CUDData, 
_swigt__p_byte, 
_swigt__PCSymOp, 
_swigt__p_PPCSymOp, 
_swigt__PCSSContainer, 
_swigt__p_CSSContainer, 
_swigt__PCChainContainer, 
_swigt__p_CChainContainer, 
_swigt__p_CClassContainer, 
_swigt__PCClassContainer, 
_swigt__p_PPCChainContainer, 
_swigt__p_PCCrystContainer, 
_swigt__p_PPCCrystContainer, 
_swigt__p_PPCSSContainer, 
_swigt__p_PCTitleContainer, 
_swigt__p_PPCTitleContainer, 
_swigt__p_PPCClassContainer, 
_swigt__p_PPCMMCIFData, 
_swigt__p_CMMCIFData, 
_swigt__PCMMCIFData, 
_swigt__PCGenSym, 
_swigt__p_CGenSym, 
_swigt__p_CBrick, 
_swigt__p_PPCGenSym, 
_swigt__p_PCSupersede, 
_swigt__p_PPCSupersede, 
_swigt__p_PCTitleLine, 
_swigt__p_PPCTitleLine, 
_swigt__p_PCJournal, 
_swigt__p_PPCJournal, 
_swigt__PCGraph, 
_swigt__p_PCGraph, 
_swigt__psvector, 
_swigt__p_psvector, 
_swigt__p_lwvector, 
_swigt__p_wvector, 
_swigt__p_ivector, 
_swigt__ivector, 
_swigt__p_PCRemark, 
_swigt__p_PPCRemark, 
_swigt__p_CSBase, 
_swigt__p_inta, 
_swigt__PCMask, 
_swigt__p_CMask, 
_swigt__p_PCCaveat, 
_swigt__p_PPCCaveat, 
_swigt__PCHetCompounds, 
_swigt__p_CHetCompounds, 
_swigt__PCMBrick, 
_swigt__p_CMBrick, 
_swigt__p_PPCHetCompounds, 
_swigt__p_PPCEdge, 
_swigt__p_PCMMDBCryst, 
_swigt__p_PPCMMDBCryst, 
_swigt__p_CSymOp, 
_swigt__p_PPCAtom, 
_swigt__p_int, 
_swigt__p_CStream, 
_swigt__p_PCStream, 
_swigt__p_CSBStructure, 
_swigt__PCSBStructure, 
_swigt__p_intp, 
_swigt__PCAtomPath, 
_swigt__p_CAtomPath, 
_swigt__p_PPCAtomPath, 
_swigt__p_CGraph, 
_swigt__p_PCKeyWords, 
_swigt__p_PPCKeyWords, 
_swigt__p_lvector, 
_swigt__p_bvector, 
_swigt__p_rvector, 
_swigt__rvector, 
_swigt__lvector, 
_swigt__bvector, 
_swigt__p_PCExpData, 
_swigt__p_PPCExpData, 
_swigt__imatrix, 
_swigt__p_wmatrix, 
_swigt__p_imatrix, 
_swigt__p_lwmatrix, 
_swigt__p_psmatrix, 
_swigt__p_PSAtomBondI, 
_swigt__p_SAtomBondI, 
_swigt__p_double, 
_swigt__PCEdge, 
_swigt__PCAtom, 
_swigt__p_CEdge, 
_swigt__p_PCAtom, 
_swigt__p_vect3, 
_swigt__p_long, 
_swigt__p_vect4, 
_swigt__p_CAtom, 
_swigt__p_PCMMCIFLoop, 
_swigt__p_CMMCIFLoop, 
_swigt__PCMMCIFLoop, 
_swigt__p_CHetRec, 
_swigt__PCHetRec, 
_swigt__p_PPCHetRec, 
_swigt__p_CBFGSMin, 
_swigt__PCBFGSMin, 
_swigt__p_PPCBFGSMin, 
_swigt__p_CUDRegister, 
_swigt__p_realtype, 
_swigt__p_PCSource, 
_swigt__p_PPCSource, 
_swigt__p_CMatch, 
_swigt__p_CAlignParams, 
_swigt__p_mat33, 
_swigt__p_rmatrix, 
_swigt__p_bmatrix, 
_swigt__p_lmatrix, 
_swigt__rmatrix, 
_swigt__p_CSBIndex, 
_swigt__p_PCNCSMatrix, 
_swigt__p_PPCNCSMatrix, 
_swigt__p_word, 
_swigt__p_Boolean, 
_swigt__p_CGraphMatch, 
_swigt__p_PCAuthor, 
_swigt__p_PPCAuthor, 
_swigt__p_PAltLoc, 
_swigt__PCHelix, 
_swigt__p_PPCHelix, 
_swigt__p_CSBTorsion, 
_swigt__PCSBTorsion, 
_swigt__p_PPCSBTorsion, 
_swigt__p_PCChain, 
_swigt__p_PPCChain, 
_swigt__PCChain, 
_swigt__p_PCRevData, 
_swigt__p_PPCRevData, 
_swigt__p_PSAtomBond, 
_swigt__p_SAtomBond, 
_swigt__PResName, 
_swigt__p_PCObsLine, 
_swigt__p_PPCObsLine, 
_swigt__p_PPCStrand, 
_swigt__PCStrand, 
_swigt__p_CStrand, 
_swigt__p_PPCHetCompound, 
_swigt__PCHetCompound, 
_swigt__p_CHetCompound, 
_swigt__p_PCCompound, 
_swigt__p_PPCCompound, 
_swigt__p_FILE, 
_swigt__p_PPCModel, 
_swigt__PCModel, 
_swigt__p_PPCSheet, 
_swigt__PCSheet, 
_swigt__p_CSBAtom, 
_swigt__PCSBAtom, 
_swigt__p_PPCSBAtom, 
_swigt__p_PPCFile, 
_swigt__PCMMDBManager, 
_swigt__p_CMMDBManager, 
_swigt__p_CMMDBCoorManager, 
_swigt__p_CMMDBSelManager, 
_swigt__p_CMMDBBondManager, 
_swigt__p_char, 
_swigt__PCMMDBCoorManager, 
_swigt__p_PPCMMDBCoorManager, 
_swigt__PCMMDBSelManager, 
_swigt__p_PPCMMDBSelManager, 
_swigt__p_CAlignment1, 
_swigt__PCMMCIFCategory, 
_swigt__p_CMMCIFCategory, 
_swigt__p_mat44, 
_swigt__p_PCTVect, 
_swigt__p_PPCTVect, 
_swigt__PBFGSPrintFunc, 
_swigt__p_CHelix, 
_swigt__p_PPCTurn, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{ SWIG_PY_FLOAT,   (char*)"MinReal", 0, (double) 2.2250e-307, 0, 0},
{ SWIG_PY_FLOAT,   (char*)"MaxReal", 0, (double) 1.7976e+308, 0, 0},
{ SWIG_PY_FLOAT,   (char*)"fMinReal", 0, (double) 2.2250e-307, 0, 0},
{ SWIG_PY_FLOAT,   (char*)"fMaxReal", 0, (double) 1.7976e+308, 0, 0},
{ SWIG_PY_INT,     (char *)"MaxInt", (long) 32767, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MinInt", (long) -32768, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MaxWord", (long) 65535L, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MaxInt4", (long) 2147483647, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MinInt4", (long) -2147483647, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MaxWord4", (long) 4294967295, 0, 0, 0},
{ SWIG_PY_FLOAT,   (char*)"Pi", 0, (double) 3.141592653589793238462643, 0, 0},
{ SWIG_PY_FLOAT,   (char*)"Eu", 0, (double) 2.718281828459045235360287, 0, 0},
{ SWIG_PY_FLOAT,   (char*)"ln10", 0, (double) 2.3025850929940456840179915, 0, 0},
{ SWIG_PY_INT,     (char *)"SCUTKEY_BEGIN", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SCUTKEY_END", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SCUTKEY_BEGEND", (long) 0x00000003, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MaxMMDBNameLength", (long) 40, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ANY_RES", (long) -2147483647, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PRNK_Silent", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PRNK_SimRWBROOK", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_NoError", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_Ok", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_WrongSection", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_WrongChainID", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_WrongEntryID", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_SEQRES_serNum", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_SEQRES_numRes", (long) 5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_SEQRES_extraRes", (long) 6, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_NCSM_Unrecognized", (long) 7, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_NCSM_AlreadySet", (long) 8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_NCSM_WrongSerial", (long) 9, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_NCSM_UnmatchIG", (long) 10, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_ATOM_Unrecognized", (long) 11, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_ATOM_AlreadySet", (long) 12, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_ATOM_NoResidue", (long) 13, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_ATOM_Unmatch", (long) 14, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_CantOpenFile", (long) 15, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_UnrecognizedInteger", (long) 16, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_WrongModelNo", (long) 17, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_DuplicatedModel", (long) 18, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_NoModel", (long) 19, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_ForeignFile", (long) 20, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_WrongEdition", (long) 21, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_NotACIFFile", (long) 22, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_NoData", (long) 23, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_UnrecognCIFItems", (long) 24, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_MissingCIFField", (long) 25, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_EmptyCIFLoop", (long) 26, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_UnexpEndOfCIF", (long) 27, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_MissgCIFLoopField", (long) 28, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_NotACIFStructure", (long) 29, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_NotACIFLoop", (long) 30, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_UnrecognizedReal", (long) 31, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_NoSheetID", (long) 32, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_WrongSheetID", (long) 33, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_WrongStrandNo", (long) 34, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_WrongNumberOfStrands", (long) 35, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_WrongSheetOrder", (long) 36, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_HBondInconsistency", (long) 37, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_EmptyResidueName", (long) 38, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_DuplicateSeqNum", (long) 39, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_NoLogicalName", (long) 40, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_EmptyFile", (long) 41, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_CIF_EmptyRow", (long) 99999, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Error_GeneralError1", (long) 10000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_Template", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_String", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_ObsLine", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_TitleLine", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_CAVEAT", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_Compound", (long) 5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_Source", (long) 6, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_ExpData", (long) 7, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_Author", (long) 8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_RevData", (long) 9, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_Supersede", (long) 10, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_Journal", (long) 11, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_Remark", (long) 12, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_DBReference", (long) 13, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_SeqAdv", (long) 14, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_ModRes", (long) 15, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_Het", (long) 16, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_NCSMatrix", (long) 17, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_TVect", (long) 18, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_Helix", (long) 19, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ClassID_Turn", (long) 20, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_SGI", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_RS6000", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_ALLIANT", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_ARDENT", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_TITAN", (long) 5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_STARDENT", (long) 6, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_CONVEX", (long) 7, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_ESV", (long) 8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_HP9000", (long) 9, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_SOLBOURNE", (long) 10, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_SOLARIS", (long) 11, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_ALPHA", (long) 12, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_VMS", (long) 13, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_MVS", (long) 14, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_F2C_G77", (long) 15, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_LINUX", (long) 16, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MACHINE_UNKNOWN", (long) 100, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CALL_LIKE_SUN", (long) 100, 0, 0, 0},
{ SWIG_PY_FLOAT,   (char*)"NO_TORSION", 0, (double) (-1.7976e+308), 0, 0},
{ SWIG_PY_INT,     (char *)"MaxFileNameLength", (long) 512, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"GZM_NONE", (long) 0x00, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"GZM_CHECK", (long) 0x01, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"GZM_ENFORCE", (long) 0x02, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"FileError_NoMemory", (long) 110, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"FileError_ShortData", (long) 111, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"FileError_NoDataFound", (long) 112, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"FileError_NoColumn", (long) 113, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"FileError_BadData", (long) 114, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"FileError_WrongMemoryAllocation", (long) 115, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"syskey_unix", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"syskey_win", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"syskey_all", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SYMOP_Ok", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SYMOP_NoLibFile", (long) -1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SYMOP_UnknownSpaceGroup", (long) -2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SYMOP_NoSymOps", (long) -3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SYMOP_WrongSyntax", (long) -4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SYMOP_NotAnOperation", (long) -5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SYMOP_ZeroDenominator", (long) -6, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_ModelNo", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_ChainID", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_SeqNum", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_InsCode", (long) 0x00000008, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_ResName", (long) 0x00000010, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_AtomName", (long) 0x00000020, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_Element", (long) 0x00000040, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_AltLoc", (long) 0x00000080, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_Incomplete", (long) 0x00000100, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_WC_ModelNo", (long) 0x00001000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_WC_ChainID", (long) 0x00002000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_WC_SeqNum", (long) 0x00004000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_WC_InsCode", (long) 0x00008000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_WC_ResName", (long) 0x00010000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_WC_AtomName", (long) 0x00020000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_WC_Element", (long) 0x00040000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APATH_WC_AltLoc", (long) 0x00080000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BFGS_TooFewDigits", (long) -2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BFGS_WrongSpaceDim", (long) -1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BFGS_NoTermination", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BFGS_SmallGradient", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BFGS_SmallStep", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BFGS_LineSearchComplete", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BFGS_IterationLimit", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BFGS_LargeSteps", (long) 5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BFGS_Stopped", (long) 6, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDR_ATOM", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDR_RESIDUE", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDR_CHAIN", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDR_MODEL", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDR_HIERARCHY", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDRF_ATOM", (long) 0x01000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDRF_RESIDUE", (long) 0x02000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDRF_CHAIN", (long) 0x04000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDRF_MODEL", (long) 0x08000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDRF_HIERARCHY", (long) 0x10000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDRF_MASK", (long) 0x00FFFFFF, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDDATA_Ok", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDDATA_WrongHandle", (long) -1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDDATA_WrongUDRType", (long) -2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDDATA_NoData", (long) -3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ASET_Coordinates", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ASET_Occupancy", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ASET_tempFactor", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ASET_CoordSigma", (long) 0x00000010, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ASET_OccSigma", (long) 0x00000020, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ASET_tFacSigma", (long) 0x00000040, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ASET_Anis_tFac", (long) 0x00000100, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ASET_Anis_tFSigma", (long) 0x00001000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ASET_All", (long) 0x0000FFFF, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ATOM_NoSeqNum", (long) -2147483647, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ALF_NoAltCodes", (long) 0x00000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ALF_EmptyAltLoc", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ALF_NoEmptyAltLoc", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ALF_Mess", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ALF_Occupancy", (long) 0x00000008, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SSE_None", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SSE_Strand", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SSE_Bulge", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SSE_3Turn", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SSE_4Turn", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SSE_5Turn", (long) 5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SSE_Helix", (long) 6, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIF_NDB", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIF_PDBX", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CAT_POLY_SEQ_SCHEME", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"TAG_CHAIN_ID", (long) 101, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"TAG_DB_ACCESSION", (long) 102, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"TAG_DB_ALIGN_BEG", (long) 103, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"TAG_DB_ALIGN_BEG_INS_CODE", (long) 104, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"TAG_DB_ALIGN_END", (long) 105, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"TAG_DB_ALIGN_END_INS_CODE", (long) 106, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"TAG_ID_CODE", (long) 107, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"TAG_SEQ_CHAIN_ID", (long) 108, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"TAG_SEQ_ALIGN_BEG", (long) 109, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"TAG_SEQ_ALIGN_BEG_INS_CODE", (long) 110, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"TAG_SEQ_ALIGN_END", (long) 111, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"TAG_SEQ_ALIGN_END_INS_CODE", (long) 112, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBF_AutoSerials", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBF_NoCoordRead", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBF_SimRWBROOK", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBF_PrintCIFWarnings", (long) 0x00000008, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBF_EnforceSpaces", (long) 0x00000010, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBF_IgnoreDuplSeqNum", (long) 0x00000020, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBF_IgnoreSegID", (long) 0x00000040, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBF_IgnoreElement", (long) 0x00000080, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBF_IgnoreCharge", (long) 0x00000100, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBF_IgnoreNonCoorPDBErrors", (long) 0x00000200, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBF_IgnoreBlankLines", (long) 0x00000400, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBF_IgnoreRemarks", (long) 0x00000800, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDB_FILE_Undefined", (long) -1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDB_FILE_PDB", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDB_FILE_CIF", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDB_FILE_Binary", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PDBCLEAN_ATNAME", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PDBCLEAN_TER", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PDBCLEAN_CHAIN", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PDBCLEAN_CHAIN_STRONG", (long) 0x00000008, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PDBCLEAN_ALTCODE", (long) 0x00000010, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PDBCLEAN_ALTCODE_STRONG", (long) 0x00000020, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PDBCLEAN_SERIAL", (long) 0x00000040, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PDBCLEAN_SEQNUM", (long) 0x00000080, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PDBCLEAN_CHAIN_ORDER", (long) 0x00000100, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PDBCLEAN_SOLVENT", (long) 0x00000200, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PDBCLEAN_INDEX", (long) 0x00000400, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PDBCLEAN_ELEMENT", (long) 0x00000800, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"PDBCLEAN_ELEMENT_STRONG", (long) 0x00001000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CRRDY_NotPrecise", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CRRDY_isTranslation", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CRRDY_NoOrthCode", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CRRDY_Complete", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CRRDY_NoTransfMatrices", (long) -1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CRRDY_Unchecked", (long) -2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CRRDY_Ambiguous", (long) -3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CRRDY_NoCell", (long) -4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BRICK_ON_1", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BRICK_ON_2", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BRICK_READY", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CID_Ok", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CID_NoModel", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CID_NoChain", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CID_NoResidue", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CID_NoAtom", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CID_WrongPath", (long) 5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"GSM_Ok", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"GSM_NoSymOps", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"GSM_NoTransfMatrices", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"GSM_NoCell", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SPOSEAT_Ok", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SPOSEAT_NoAtoms", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SPOSEAT_SVD_Fail", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CNSORT_OFF", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CNSORT_1INC", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CNSORT_1DEC", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CNSORT_2INC", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CNSORT_2DEC", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CNSORT_DINC", (long) 5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CNSORT_DDEC", (long) 6, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SKEY_NEW", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SKEY_OR", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SKEY_AND", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SKEY_XOR", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SKEY_CLR", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"STYPE_UNDEFINED", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"STYPE_ATOM", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"STYPE_RESIDUE", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"STYPE_CHAIN", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"STYPE_MODEL", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_LT", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_LE", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_EQ", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_NE", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_GE", (long) 5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_GT", (long) 6, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_LTcase", (long) 7, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_LEcase", (long) 8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_EQcase", (long) 9, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_NEcase", (long) 10, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_GEcase", (long) 11, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_GTcase", (long) 12, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_LTn", (long) 13, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_LEn", (long) 14, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_EQn", (long) 15, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_NEn", (long) 16, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_GEn", (long) 17, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_GTn", (long) 18, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_LTncase", (long) 19, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_LEncase", (long) 20, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_EQncase", (long) 21, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_NEncase", (long) 22, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_GEncase", (long) 23, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_GTncase", (long) 24, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_Substr", (long) 25, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_NoSubstr", (long) 26, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_Substr1", (long) 27, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"UDSCR_NoSubstr1", (long) 28, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_All", (long) 0xFFFFFFFF, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_Title", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_Cryst", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_Coord", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_SecStruct", (long) 0x00000008, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_HetInfo", (long) 0x00000010, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_SA", (long) 0x00000020, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_SB", (long) 0x00000040, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_SC", (long) 0x00000080, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_Footnotes", (long) 0x00000100, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_ChainAnnot", (long) 0x00000200, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_Flags", (long) 0x00000400, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_Buffer", (long) 0x80000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMDBFCM_Top", (long) 0xFFFFFFFB, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMCIF_Category", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMCIF_Struct", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMCIF_Loop", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MMCIF_Data", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIF_NODATA_DOT", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIF_NODATA_QUESTION", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFW_UnrecognizedItems", (long) 0x00000020, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFW_MissingField", (long) 0x00000040, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFW_EmptyLoop", (long) 0x00000080, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFW_UnexpectedEOF", (long) 0x00000100, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFW_LoopFieldMissing", (long) 0x00000200, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFW_NotAStructure", (long) 0x00000400, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFW_NotALoop", (long) 0x00000800, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFW_DuplicatedTag", (long) 0x00001000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_Loop", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_Structure", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_Ok", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_StructureNoTag", (long) -1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_LoopNoTag", (long) -2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_NoCategory", (long) -3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_WrongFormat", (long) -4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_NoTag", (long) -5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_NotAStructure", (long) -6, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_NotALoop", (long) -7, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_WrongIndex", (long) -8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_NoField", (long) -9, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_Created", (long) -12, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_CantOpenFile", (long) -13, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFRC_NoDataLine", (long) -14, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFFL_PrintWarnings", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFFL_StopOnWarnings", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFFL_SuggestCategories", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CIFFL_SuggestTags", (long) 0x00000008, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SSERC_Ok", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SSERC_noResidues", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SSERC_noAminoacids", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SSERC_noSSE", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CHIRAL_RIGHT", (long) 0x10000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CHIRAL_LEFT", (long) 0x20000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ATOM_LEAVING", (long) 0x40000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"HYDROGEN_BOND", (long) 0x0F000000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CHIRAL_MASK", (long) 0xCFFFFFFF, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"TYPE_MASK", (long) 0x00FFFFFF, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BOND_SINGLE", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BOND_DOUBLE", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BOND_AROMATIC", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BOND_TRIPLE", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MKGRAPH_Ok", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MKGRAPH_NoAtoms", (long) -1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MKGRAPH_ChangedAltLoc", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"MKGRAPH_MaxOccupancy", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"GMF_UniqueMatch", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"GMF_NoCombinations", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ALIGN_GLOBAL", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ALIGN_LOCAL", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ALIGN_GLOBLOC", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ALIGN_FREEENDS", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"compoundID_len", (long) 10, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"formula_len", (long) 1000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"charge_len", (long) 5000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"name_len", (long) 1000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"synonym_len", (long) 1000, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"sca_name_len", (long) 20, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pdb_name_len", (long) 20, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"element_len", (long) 5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"sca_leaving_atom_len", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"chirality_len", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"scb_bond_order_len", (long) 10, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"energy_type_len", (long) 8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_Incomplete", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_AlreadyUnloaded", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_AlreadyLoaded", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_Ok", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_FileNotFound", (long) -1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_StructNotFound", (long) -2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_WrongIndex", (long) -3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_ReadError", (long) -4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_ConnectivityError", (long) -5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_CheckFail", (long) -6, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_NoAtomsFound", (long) -7, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_NoAtomData", (long) -8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_EmptyResidue", (long) -9, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_NoSimilarity", (long) -10, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_SuperpositionFailed", (long) -11, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"SBASE_Fail", (long) -12, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CMPLF_Hydrogens", (long) 0x00000001, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CMPLF_nonHs", (long) 0x00000002, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CMPLF_XT", (long) 0x00000004, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"CMPLF_All", (long) 0x00000007, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"nElementNames", (long) 117, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"nElementMetals", (long) 91, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"nHydAtomNames", (long) 14, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"ELEMENT_UNKNOWN", (long) -1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"nResNames", (long) 26, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"nSolventNames", (long) 12, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"nAminoacidNames", (long) 23, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"nNucleotideNames", (long) 6, 0, 0, 0},
{0}};

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
    PyDict_SetItemString(d,(char*)"cvar", SWIG_globals);
    SWIG_addvarlink(SWIG_globals,(char*)"CIFErrorLocation",_wrap_CIFErrorLocation_get, _wrap_CIFErrorLocation_set);
    SWIG_addvarlink(SWIG_globals,(char*)"ignoreSegID",_wrap_ignoreSegID_get, _wrap_ignoreSegID_set);
    SWIG_addvarlink(SWIG_globals,(char*)"ignoreElement",_wrap_ignoreElement_get, _wrap_ignoreElement_set);
    SWIG_addvarlink(SWIG_globals,(char*)"ignoreCharge",_wrap_ignoreCharge_get, _wrap_ignoreCharge_set);
    SWIG_addvarlink(SWIG_globals,(char*)"ignoreNonCoorPDBErrors",_wrap_ignoreNonCoorPDBErrors_get, _wrap_ignoreNonCoorPDBErrors_set);
    SWIG_addvarlink(SWIG_globals,(char*)"ElementName",_wrap_ElementName_get, _wrap_ElementName_set);
    SWIG_addvarlink(SWIG_globals,(char*)"ElementMetal",_wrap_ElementMetal_get, _wrap_ElementMetal_set);
    SWIG_addvarlink(SWIG_globals,(char*)"HydAtomName",_wrap_HydAtomName_get, _wrap_HydAtomName_set);
    SWIG_addvarlink(SWIG_globals,(char*)"MolecWeight",_wrap_MolecWeight_get, _wrap_MolecWeight_set);
    SWIG_addvarlink(SWIG_globals,(char*)"CovalentRadius",_wrap_CovalentRadius_get, _wrap_CovalentRadius_set);
    SWIG_addvarlink(SWIG_globals,(char*)"VdWaalsRadius",_wrap_VdWaalsRadius_get, _wrap_VdWaalsRadius_set);
    SWIG_addvarlink(SWIG_globals,(char*)"IonicRadius",_wrap_IonicRadius_get, _wrap_IonicRadius_set);
    SWIG_addvarlink(SWIG_globals,(char*)"ResidueName",_wrap_ResidueName_get, _wrap_ResidueName_set);
    SWIG_addvarlink(SWIG_globals,(char*)"ResidueName1",_wrap_ResidueName1_get, _wrap_ResidueName1_set);
    SWIG_addvarlink(SWIG_globals,(char*)"StdSolventName",_wrap_StdSolventName_get, _wrap_StdSolventName_set);
    SWIG_addvarlink(SWIG_globals,(char*)"AminoacidName",_wrap_AminoacidName_get, _wrap_AminoacidName_set);
    SWIG_addvarlink(SWIG_globals,(char*)"NucleotideName",_wrap_NucleotideName_get, _wrap_NucleotideName_set);
}

